[{"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx":"1","C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts":"2","C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx":"3","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx":"4","C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx":"5","C:\\Users\\acer\\Documents\\mega-soft\\src\\views\\Admin\\index.tsx":"6","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx":"7","C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx":"8","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Form.tsx":"9","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx":"10","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Panel\\index.tsx":"11","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\index.tsx":"12","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\auth.tsx":"13"},{"size":637,"mtime":1610944959237,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":462,"mtime":1610946477468,"results":"17","hashOfConfig":"15"},{"size":160,"mtime":1610453340672,"results":"18","hashOfConfig":"15"},{"size":4652,"mtime":1610950423448,"results":"19","hashOfConfig":"15"},{"size":20522,"mtime":1610971061513,"results":"20","hashOfConfig":"15"},{"size":147,"mtime":1610453195472,"results":"21","hashOfConfig":"15"},{"size":2476,"mtime":1610950668251,"results":"22","hashOfConfig":"15"},{"size":9366,"mtime":1610950279659,"results":"23","hashOfConfig":"15"},{"size":1922,"mtime":1610970110673,"results":"24","hashOfConfig":"15"},{"size":192,"mtime":1610946623600,"results":"25","hashOfConfig":"15"},{"size":1918,"mtime":1610970739726,"results":"26","hashOfConfig":"15"},{"size":1455,"mtime":1610967728027,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jqg13p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx",[],["60","61"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx",["62"],"import { applyMiddleware, createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(\r\n\t    reducer,\r\n\t);\r\n\r\nexport default store","C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx",["63","64","65","66"],"import * as React from \"react\";\r\nimport {\r\n  Nav,\r\n  INavLink,\r\n  INavStyles,\r\n  INavLinkGroup,\r\n} from \"office-ui-fabric-react/lib/Nav\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport { useHistory, matchPath } from \"react-router-dom\";\r\n\r\ninitializeIcons();\r\n\r\nconst navLinkGroups: INavLinkGroup[] = [\r\n  {\r\n    links: [\r\n      {\r\n        name: \"Appraisal\",\r\n        url: \"\",\r\n        key: \"key01\",\r\n        icon: \"UpgradeAnalysis\",\r\n        expandAriaLabel: \"Expand Home section\",\r\n        collapseAriaLabel: \"Collapse Home section\",\r\n      },\r\n      {\r\n        name: \"Administrator\",\r\n        url: \"/admin\",\r\n        key: \"key02\",\r\n        // icon:'MedicationAdmin',\r\n        links: [\r\n          {\r\n            name: \"Setup\",\r\n            url: \"/admin/setup\",\r\n            icon: \"SettingsAdd\",\r\n            key: \"key03\",\r\n          },\r\n          {\r\n            name: \"Rating\",\r\n            url: \"/admin/rating\",\r\n            icon: \"6PointStar\",\r\n            key: \"key04\",\r\n          },\r\n        ],\r\n        isExpanded: true,\r\n      },\r\n      {\r\n        name: \"Manager\",\r\n        url: \"/manager\",\r\n        key: \"key05\",\r\n        expandAriaLabel: \"Expand Admin section\",\r\n        collapseAriaLabel: \"Collapse admin section\",\r\n        links: [\r\n          {\r\n            name: \"Team Goal Setting\",\r\n            url: \"/mananger/team\",\r\n            icon: \"SplitObject\",\r\n            key: \"key06\",\r\n          },\r\n          {\r\n            name: \"Team Assessment\",\r\n            url: \"/mananger/assess\",\r\n            key: \"key07\",\r\n            icon: \"AssessmentGroup\",\r\n          },\r\n        ],\r\n        isExpanded: true,\r\n      },\r\n      {\r\n        name: \"Confirmation\",\r\n        url: \"/confirmation\",\r\n        key: \"key09\",\r\n        expandAriaLabel: \"Expand Admin section\",\r\n        collapseAriaLabel: \"Collapse admin section\",\r\n        links: [\r\n          {\r\n            name: \"Confirmation Approval\",\r\n            url: \"/confirmation\",\r\n            links: [\r\n              {\r\n                name: \"Manager Approval\",\r\n                url: \"/confirmation/approv\",\r\n                key: \"key10\",\r\n                icon: \"FabricFolderConfirm\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        isExpanded: true,\r\n      },\r\n      {\r\n        name: \"Salary Review\",\r\n        url: \"/salary\",\r\n        key: \"key12\",\r\n        expandAriaLabel: \"Expand Admin section\",\r\n        collapseAriaLabel: \"Collapse admin section\",\r\n        links: [\r\n          {\r\n            name: \"Appraiser\",\r\n            url: \"/salary/appraiser\",\r\n            key: \"key13\",\r\n            icon: \"Money\",\r\n          },\r\n        ],\r\n        isExpanded: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navStyles: Partial<INavStyles> = {\r\n  root: {\r\n    // selectors:{'&:hover': { color:\"#040848\" } }\r\n  },\r\n  link: {\r\n    width: \"200px\",\r\n  },\r\n  linkText: {\r\n    color: \"#FFF\",\r\n    fontSize: 12,\r\n    selectors: {\r\n      \"&:hover\": { color: \"#0337a4\" },\r\n    },\r\n  },\r\n  chevronIcon: {\r\n    color: \"#FFF\",\r\n  },\r\n  // navItems: {\r\n  //     color: '#FFF',\r\n  //     '&:hover': { color: 'red' },\r\n  // }\r\n  compositeLink: {\r\n    selectors: {\r\n      \"&:hover\": {\r\n        \".ms-Button\": {\r\n          background: \"red\",\r\n        },\r\n        \".ms-Nav-linkText\": {\r\n          color: \"#0337a4\", // your real styling here\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nfunction Navigation() {\r\n  // const { children } = props;\r\n  let history = useHistory();\r\n  const [selectedNavKey, setSelectedNavKey] = React.useState(\"\");\r\n  const onLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\r\n    setSelectedNavKey(item?.key || \"\");\r\n  };\r\n  React.useEffect(() => {\r\n    navLinkGroups[0].links.map((item) => {\r\n      if (item.links) {\r\n        item.links.map((subItem) => {\r\n          if (\r\n            matchPath(history.location.pathname, {\r\n              path: subItem.url,\r\n              exact: true,\r\n            })\r\n          ) {\r\n            setSelectedNavKey(subItem?.key || \"\");\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        if (\r\n          matchPath(history.location.pathname, {\r\n            path: item.url,\r\n            exact: true,\r\n          })\r\n        ) {\r\n          setSelectedNavKey(item?.key || \"\");\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }, [history.location.pathname]);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h1 style={{ color: \"#FFF\" }}>Logo</h1>\r\n      <Nav\r\n        onLinkClick={onLinkClick}\r\n        selectedKey={selectedNavKey}\r\n        ariaLabel=\"Nav basic example\"\r\n        styles={navStyles}\r\n        groups={navLinkGroups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\views\\Admin\\index.tsx",["67","68","69","70","71","72","73","74","75","76"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx",["77"],"import * as React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IDividerAsProps,\r\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\r\nimport { IContextualMenuProps } from \"office-ui-fabric-react\";\r\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\r\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\r\nimport \"./Header.css\";\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"action01\",\r\n      text: \"Action 1\",\r\n      //   iconProps: { iconName: 'Mail' },\r\n    },\r\n    {\r\n      key: \"action02\",\r\n      text: \"Action 2\",\r\n      //   iconProps: { iconName: 'Calendar' },\r\n    },\r\n  ],\r\n};\r\nfunction _onBreadcrumbItemClicked(\r\n  ev?: React.MouseEvent<HTMLElement>,\r\n  item?: IBreadcrumbItem\r\n): void {\r\n  console.log(`Breadcrumb item with key \"${item?.key}\" has been clicked.`);\r\n}\r\nconst itemsWithHeading: IBreadcrumbItem[] = [\r\n  {\r\n    text: \"Claims\",\r\n    key: \"Files\",\r\n    onClick: _onBreadcrumbItemClicked,\r\n    href: \"/claim\",\r\n  },\r\n  { text: \"20192281\", key: \"d1\", isCurrentItem: true },\r\n];\r\nfunction _getCustomOverflowIcon(): JSX.Element {\r\n  return <Icon iconName={\"ChevronDown\"} />;\r\n}\r\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\r\n  const tooltipText = dividerProps.item ? dividerProps.item.text : \"\";\r\n  return (\r\n    <TooltipHost\r\n      content={`Show ${tooltipText} contents`}\r\n      calloutProps={{ gapSpace: 0 }}\r\n    >\r\n      <span aria-hidden=\"true\" style={{ cursor: \"pointer\", padding: 5 }}>\r\n        /\r\n      </span>\r\n    </TooltipHost>\r\n  );\r\n}\r\n\r\nconst breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n  root: {\r\n    margin: \"0px\",\r\n    padding: \"10px\",\r\n  },\r\n  itemLink: {\r\n    fontSize: \"22px\",\r\n  },\r\n};\r\n\r\nfunction Header(props: { item?: IBreadcrumbItem[] }) {\r\n  // const _alertClicked = () => {\r\n  //   console.log(\"clicked==>\")\r\n  // }\r\n  // const horizontalStackProps: IStackProps = {\r\n  //     horizontal: true,\r\n  //     tokens: { childrenGap: 100, },\r\n  // };\r\n  // const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Breadcrumb\r\n        items={itemsWithHeading}\r\n        styles={breadCrumStyle}\r\n        maxDisplayedItems={3}\r\n        ariaLabel=\"With custom rendered divider and overflow icon\"\r\n        dividerAs={_getCustomDivider}\r\n        onRenderOverflowIcon={_getCustomOverflowIcon}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Form.tsx",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  MaskedTextField,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react/lib/TextField\";\r\nimport {\r\n  Stack,\r\n  IStackProps,\r\n  IStackStyles,\r\n} from \"office-ui-fabric-react/lib/Stack\";\r\nimport \"./style.css\";\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  DetailsList,\r\n  Dropdown,\r\n  DropdownMenuItemType,\r\n  FontIcon,\r\n  ICheckboxProps,\r\n  IColumn,\r\n  IDatePickerStrings,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  Label,\r\n  mergeStyles,\r\n  mergeStyleSets,\r\n  PrimaryButton,\r\n} from \"office-ui-fabric-react\";\r\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\r\nimport { useId, useBoolean } from \"@uifabric/react-hooks\";\r\n\r\nconst options: IDropdownOption[] = [\r\n  {\r\n    key: \"key1\",\r\n    text: \"Key 1\",\r\n    itemType: DropdownMenuItemType.Header,\r\n  },\r\n  { key: \"key2\", text: \"Key 2\" },\r\n  { key: \"key3\", text: \"Key 3\" },\r\n  { key: \"key4\", text: \"Key 4\" },\r\n];\r\n\r\nconst formulaList: IDropdownOption[] = [\r\n  {\r\n    key: \"key1\",\r\n    text: \"Formula1\",\r\n    itemType: DropdownMenuItemType.Header,\r\n  },\r\n  { key: \"key2\", text: \"Formula2\" },\r\n  { key: \"key3\", text: \"Formula3\" },\r\n  { key: \"key4\", text: \"Formula4\" },\r\n];\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n  dropdown: {\r\n    width: 170,\r\n    border: \"0px\",\r\n  },\r\n};\r\n\r\nconst typeDropdownStyles: Partial<IDropdownStyles> = {\r\n  dropdown: {\r\n    width: 150,\r\n  },\r\n};\r\n\r\nexport interface ICheckboxInput {\r\n  ID?: number;\r\n  Title: string;\r\n  isChecked?: boolean;\r\n}\r\n\r\nconst checkboxOptions: ICheckboxInput[] = [\r\n  { ID: 1, Title: \"Goals\" },\r\n  { ID: 2, Title: \"Competencies\" },\r\n  { ID: 3, Title: \"Development Plans\" },\r\n  { ID: 4, Title: \"Summary\" },\r\n];\r\n\r\nfunction Form() {\r\n  const stackTokens = { childrenGap: 10 };\r\n  const stackStyles: Partial<IStackStyles> = {\r\n    root: {\r\n      width: 600,\r\n    },\r\n  };\r\n\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      \".ms-TextField-wrapper\": {\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \".ms-TextField-fieldGroup fieldGroup-195\": {\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  };\r\n  const iconProps = { iconName: \"Calendar\" };\r\n  const [isChecked, setIsChecked] = React.useState(true);\r\n  const onChange = React.useCallback(\r\n    (ev?: React.FormEvent<HTMLElement>, checked?: boolean): void => {\r\n      setIsChecked(!!checked);\r\n    },\r\n    []\r\n  );\r\n  // const inputProps: ICheckboxProps[\"inputProps\"] = {\r\n  //   onFocus: () => console.log(\"Checkbox is focused\"),\r\n  //   onBlur: () => console.log(\"Checkbox is blurred\"),\r\n  // };\r\n\r\n  const iconClass = mergeStyles({\r\n    fontSize: 25,\r\n    height: 50,\r\n    width: 50,\r\n    color: \"#ff0000\",\r\n    margin: \"6px 15px\",\r\n  });\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: \"01\",\r\n      name: \"And/Or\",\r\n      fieldName: \"and\",\r\n      minWidth: 10,\r\n      maxWidth: 70,\r\n      isResizable: false,\r\n    },\r\n    {\r\n      key: \"02\",\r\n      name: \"Column\",\r\n      fieldName: \"column\",\r\n      minWidth: 10,\r\n      maxWidth: 150,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n      onRender: (item) => (\r\n        // eslint-disable-next-line react/jsx-no-bind\r\n        <Dropdown placeholder=\"Formula:\" options={formulaList} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"03\",\r\n      name: \"Comparison\",\r\n      fieldName: \"comparison\",\r\n      minWidth: 10,\r\n      maxWidth: 150,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n    },\r\n    {\r\n      key: \"04\",\r\n      name: \"Compare To\",\r\n      fieldName: \"compareto\",\r\n      minWidth: 10,\r\n      maxWidth: 250,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n      onRender: (item) => <TextField multiline autoAdjustHeight />,\r\n    },\r\n    {\r\n      key: \"05\",\r\n      name: \"Action\",\r\n      fieldName: \"action\",\r\n      minWidth: 10,\r\n      maxWidth: 150,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n      onRender: (item) => <FontIcon iconName=\"Accept\" className={iconClass} />,\r\n    },\r\n  ];\r\n\r\n  const itemsToDisplay: any[] = [\r\n    {\r\n      and: \"\",\r\n      column: \"\",\r\n      comparison: \"\",\r\n      compareto: \"Lorem ipsum dolor sit amet,\",\r\n      action: \"20-05-2020\",\r\n    },\r\n  ];\r\n\r\n \r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n\r\n    shortMonths: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n\r\n    days: [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ],\r\n\r\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n\r\n    goToToday: \"Go to today\",\r\n    prevMonthAriaLabel: \"Go to previous month\",\r\n    nextMonthAriaLabel: \"Go to next month\",\r\n    prevYearAriaLabel: \"Go to previous year\",\r\n    nextYearAriaLabel: \"Go to next year\",\r\n    closeButtonAriaLabel: \"Close date picker\",\r\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\r\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      margin: \"0 0 15px 0\",\r\n      maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const [firstDayOfWeek, setFirstDayOfWeek] = React.useState(DayOfWeek.Sunday);\r\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(\r\n    true\r\n  );\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n\r\n  const [claimsData, setClaimsData] = useState({\r\n    id: '',\r\n    description: '',\r\n    owner: '',\r\n    kraSetting: false,\r\n    assessment: false,\r\n  })\r\n\r\n  function onChangeCheckbox(ev?: React.FormEvent<HTMLElement>, isChecked?: boolean) {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setClaimsData({\r\n      ...claimsData,\r\n      [target.name] : isChecked || false\r\n    })\r\n  }\r\n\r\n  const onChangeInput = (ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, text?: string): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setClaimsData({\r\n      ...claimsData,\r\n      [target.name]: target.value || ''\r\n    })\r\n  }\r\n\r\n  const [date, setDate] = useState<Date | null | undefined>(null)\r\n\r\n  const onSelectDate = (date: Date | null | undefined): void => {\r\n    console.log(\"date==>\", date)\r\n    setDate(date);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div className=\"input-form\">\r\n        <TextField\r\n          required\r\n          placeholder=\"ID\"\r\n          name=\"id\"\r\n          onChange = {onChangeInput}\r\n          // styles={textfelidStyle}\r\n        />\r\n        <TextField \r\n          required \r\n          placeholder=\"Description\" \r\n          styles={textfelidStyle} \r\n          name=\"description\"\r\n          onChange = {onChangeInput}\r\n        />\r\n      </div>\r\n      {/* <div className=\"input-form\"></div> */}\r\n      <div className=\"input-form\">\r\n        <DatePicker\r\n          className={controlClass.control}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          strings={DayPickerStrings}\r\n          onSelectDate={onSelectDate}\r\n          placeholder=\"Select a date\"\r\n          ariaLabel=\"Select a date\"\r\n          styles={datePickerStyle}\r\n        />\r\n        <DatePicker\r\n          className={controlClass.control}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          strings={DayPickerStrings}\r\n          styles={datePickerStyle}\r\n          placeholder=\"Select a date\"\r\n          ariaLabel=\"Select a date\"\r\n        />\r\n        <Dropdown\r\n          placeholder=\"Select\"\r\n          options={options}\r\n          styles={dropdownStyles}\r\n        />\r\n      </div>\r\n      <div className=\"input-form\">\r\n        <Dropdown\r\n          placeholder=\"Select Type\"\r\n          options={options}\r\n          styles={typeDropdownStyles}\r\n        />\r\n        <Dropdown\r\n          placeholder=\"Select Formate Type\"\r\n          options={options}\r\n          styles={typeDropdownStyles}\r\n        />\r\n        <TextField \r\n          placeholder=\"Owner\" \r\n          styles={textfelidStyle} \r\n          name=\"owner\"\r\n          onChange = {onChangeInput}  \r\n        />\r\n      </div>\r\n      <div className=\"input-form\">\r\n        <div>\r\n          <Label>KRA Settings Tabs: </Label>\r\n          {checkboxOptions.map((checkBoxItem: ICheckboxInput) => {\r\n            return (\r\n              <Stack tokens={stackTokens}>\r\n                <Checkbox\r\n                  label={checkBoxItem.Title}\r\n                  title={checkBoxItem.Title}\r\n                  name=\"kraSetting\"\r\n                  onChange={onChangeCheckbox}\r\n                />\r\n                <span></span>\r\n              </Stack>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <Label>Assessment Tabs: </Label>\r\n          {checkboxOptions.map((checkBoxItem: ICheckboxInput) => {\r\n            return (\r\n              <Stack tokens={stackTokens}>\r\n                <Checkbox\r\n                  label={checkBoxItem.Title}\r\n                  title={checkBoxItem.Title}\r\n                  name=\"assessment\"\r\n                  onChange={onChangeCheckbox}\r\n                />\r\n                <span></span>\r\n              </Stack>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Form;\r\n",["95","96"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Panel\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\index.tsx",["97"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\auth.tsx",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":152,"column":39,"nodeType":"109","messageId":"110","endLine":152,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":154,"column":34,"nodeType":"109","messageId":"110","endLine":154,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":162,"column":13,"nodeType":"112","messageId":"113","endLine":162,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":173,"column":11,"nodeType":"112","messageId":"113","endLine":173,"endColumn":18},{"ruleId":"103","severity":1,"message":"114","line":26,"column":3,"nodeType":"105","messageId":"106","endLine":26,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":67,"column":16,"nodeType":"105","messageId":"106","endLine":67,"endColumn":23},{"ruleId":"103","severity":1,"message":"116","line":81,"column":5,"nodeType":"105","messageId":"106","endLine":81,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":81,"column":20,"nodeType":"119","endLine":81,"endColumn":64},{"ruleId":"103","severity":1,"message":"120","line":277,"column":10,"nodeType":"105","messageId":"106","endLine":277,"endColumn":16},{"ruleId":"103","severity":1,"message":"121","line":277,"column":29,"nodeType":"105","messageId":"106","endLine":277,"endColumn":38},{"ruleId":"103","severity":1,"message":"122","line":277,"column":50,"nodeType":"105","messageId":"106","endLine":277,"endColumn":62},{"ruleId":"117","severity":1,"message":"123","line":287,"column":6,"nodeType":"124","endLine":287,"endColumn":8,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":412,"column":10,"nodeType":"105","messageId":"106","endLine":412,"endColumn":14},{"ruleId":"103","severity":1,"message":"127","line":432,"column":26,"nodeType":"105","messageId":"106","endLine":432,"endColumn":43},{"ruleId":"103","severity":1,"message":"128","line":13,"column":7,"nodeType":"105","messageId":"106","endLine":13,"endColumn":38},{"ruleId":"103","severity":1,"message":"129","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"103","severity":1,"message":"130","line":9,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"131","line":16,"column":3,"nodeType":"105","messageId":"106","endLine":16,"endColumn":14},{"ruleId":"103","severity":1,"message":"132","line":20,"column":3,"nodeType":"105","messageId":"106","endLine":20,"endColumn":17},{"ruleId":"103","severity":1,"message":"133","line":29,"column":3,"nodeType":"105","messageId":"106","endLine":29,"endColumn":16},{"ruleId":"103","severity":1,"message":"134","line":32,"column":10,"nodeType":"105","messageId":"106","endLine":32,"endColumn":15},{"ruleId":"103","severity":1,"message":"135","line":84,"column":9,"nodeType":"105","messageId":"106","endLine":84,"endColumn":43},{"ruleId":"103","severity":1,"message":"136","line":101,"column":9,"nodeType":"105","messageId":"106","endLine":101,"endColumn":18},{"ruleId":"103","severity":1,"message":"137","line":102,"column":10,"nodeType":"105","messageId":"106","endLine":102,"endColumn":19},{"ruleId":"103","severity":1,"message":"138","line":103,"column":9,"nodeType":"105","messageId":"106","endLine":103,"endColumn":17},{"ruleId":"103","severity":1,"message":"139","line":121,"column":9,"nodeType":"105","messageId":"106","endLine":121,"endColumn":27},{"ruleId":"103","severity":1,"message":"140","line":174,"column":9,"nodeType":"105","messageId":"106","endLine":174,"endColumn":30},{"ruleId":"103","severity":1,"message":"127","line":246,"column":26,"nodeType":"105","messageId":"106","endLine":246,"endColumn":43},{"ruleId":"103","severity":1,"message":"141","line":247,"column":10,"nodeType":"105","messageId":"106","endLine":247,"endColumn":21},{"ruleId":"103","severity":1,"message":"142","line":247,"column":34,"nodeType":"105","messageId":"106","endLine":247,"endColumn":43},{"ruleId":"103","severity":1,"message":"143","line":247,"column":55,"nodeType":"105","messageId":"106","endLine":247,"endColumn":64},{"ruleId":"103","severity":1,"message":"126","line":281,"column":10,"nodeType":"105","messageId":"106","endLine":281,"endColumn":14},{"ruleId":"99","replacedBy":"144"},{"ruleId":"101","replacedBy":"145"},{"ruleId":"103","severity":1,"message":"146","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"146","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'DropdownMenuItemType' is defined but never used.","'setList' is assigned a value but never used.","'focusListner' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'focusListner' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'isOpen' is assigned a value but never used.","'openPanel' is assigned a value but never used.","'dismissPanel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'operations.length'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'date' is assigned a value but never used.","'setFirstDayOfWeek' is assigned a value but never used.","'menuProps' is assigned a value but never used.","'MaskedTextField' is defined but never used.","'IStackProps' is defined but never used.","'DetailsList' is defined but never used.","'ICheckboxProps' is defined but never used.","'PrimaryButton' is defined but never used.","'useId' is defined but never used.","'stackStyles' is assigned a value but never used.","'iconProps' is assigned a value but never used.","'isChecked' is assigned a value but never used.","'onChange' is assigned a value but never used.","'columns' is assigned a value but never used.","'itemsToDisplay' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'hideModal' is assigned a value but never used.",["147"],["148"],"'base64' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [operations.length]",{"range":"152","text":"153"},[7731,7733],"[operations.length]"]