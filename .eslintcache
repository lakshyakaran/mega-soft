[{"/home/pratik/Documents/mega-soft/src/index.tsx":"1","/home/pratik/Documents/mega-soft/src/reportWebVitals.ts":"2","/home/pratik/Documents/mega-soft/src/App.tsx":"3","/home/pratik/Documents/mega-soft/src/redux/index.tsx":"4","/home/pratik/Documents/mega-soft/src/Navigation.tsx":"5","/home/pratik/Documents/mega-soft/src/config.tsx":"6","/home/pratik/Documents/mega-soft/src/SideNavigation/MainHeader.tsx":"7","/home/pratik/Documents/mega-soft/src/redux/actions/auth.tsx":"8","/home/pratik/Documents/mega-soft/src/redux/actions/roleType.tsx":"9","/home/pratik/Documents/mega-soft/src/Views/Home/index.tsx":"10","/home/pratik/Documents/mega-soft/src/Views/Login/index.tsx":"11","/home/pratik/Documents/mega-soft/src/Views/Appraisal/index.tsx":"12","/home/pratik/Documents/mega-soft/src/Views/AddAppraisal/index.tsx":"13","/home/pratik/Documents/mega-soft/src/Views/AppraisalDetail/index.tsx":"14","/home/pratik/Documents/mega-soft/src/Views/GoalSetting/index.tsx":"15","/home/pratik/Documents/mega-soft/src/Views/UpdateAppraisal/index.tsx":"16","/home/pratik/Documents/mega-soft/src/Views/JobHistory/index.tsx":"17","/home/pratik/Documents/mega-soft/src/Views/EmployeeDetails/index.tsx":"18","/home/pratik/Documents/mega-soft/src/Views/UpdateJobHistory/index.tsx":"19","/home/pratik/Documents/mega-soft/src/Views/JobHistoryDetails/index.tsx":"20","/home/pratik/Documents/mega-soft/src/Views/AddGoals/index.tsx":"21","/home/pratik/Documents/mega-soft/src/Views/UpdateGoals/index.tsx":"22","/home/pratik/Documents/mega-soft/src/Views/GoalDetails/index.tsx":"23","/home/pratik/Documents/mega-soft/src/components/ChanageColor/index.tsx":"24","/home/pratik/Documents/mega-soft/src/redux/actions/application.tsx":"25","/home/pratik/Documents/mega-soft/src/i18n.tsx":"26","/home/pratik/Documents/mega-soft/src/SideNavigation/index.tsx":"27","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx":"28","/home/pratik/Documents/mega-soft/src/Header.tsx":"29","/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx":"30","/home/pratik/Documents/mega-soft/src/redux/actions/goal.tsx":"31","/home/pratik/Documents/mega-soft/src/redux/actions/jobHistory.tsx":"32","/home/pratik/Documents/mega-soft/src/redux/actions/developmentPlan.tsx":"33","/home/pratik/Documents/mega-soft/src/redux/actions/employeeData.tsx":"34","/home/pratik/Documents/mega-soft/src/redux/actions/navigation.tsx":"35","/home/pratik/Documents/mega-soft/src/redux/reducers/application.tsx":"36","/home/pratik/Documents/mega-soft/src/redux/reducers/menuType.tsx":"37","/home/pratik/Documents/mega-soft/src/redux/reducers/auth.tsx":"38","/home/pratik/Documents/mega-soft/src/redux/reducers/jobHistory.tsx":"39","/home/pratik/Documents/mega-soft/src/redux/reducers/roleType.tsx":"40","/home/pratik/Documents/mega-soft/src/redux/reducers/navigationData.tsx":"41","/home/pratik/Documents/mega-soft/src/redux/reducers/employeeList.tsx":"42","/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx":"43","/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx":"44","/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx":"45","/home/pratik/Documents/mega-soft/src/Utils/color.tsx":"46"},{"size":643,"mtime":1614409988813,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":1614409988813,"results":"49","hashOfConfig":"48"},{"size":7092,"mtime":1614467941869,"results":"50","hashOfConfig":"48"},{"size":205,"mtime":1614409988813,"results":"51","hashOfConfig":"48"},{"size":4824,"mtime":1614410236152,"results":"52","hashOfConfig":"48"},{"size":463,"mtime":1614410236160,"results":"53","hashOfConfig":"48"},{"size":4608,"mtime":1614410436139,"results":"54","hashOfConfig":"48"},{"size":5125,"mtime":1614494735756,"results":"55","hashOfConfig":"48"},{"size":476,"mtime":1614409988813,"results":"56","hashOfConfig":"48"},{"size":1040,"mtime":1614410236156,"results":"57","hashOfConfig":"48"},{"size":2090,"mtime":1614410236156,"results":"58","hashOfConfig":"48"},{"size":20687,"mtime":1614499087826,"results":"59","hashOfConfig":"48"},{"size":29008,"mtime":1614517396467,"results":"60","hashOfConfig":"48"},{"size":6692,"mtime":1614499022824,"results":"61","hashOfConfig":"48"},{"size":11104,"mtime":1614500258991,"results":"62","hashOfConfig":"48"},{"size":21973,"mtime":1614517509498,"results":"63","hashOfConfig":"48"},{"size":15651,"mtime":1614516373499,"results":"64","hashOfConfig":"48"},{"size":34927,"mtime":1614517149001,"results":"65","hashOfConfig":"48"},{"size":15724,"mtime":1614516635652,"results":"66","hashOfConfig":"48"},{"size":4731,"mtime":1614410236156,"results":"67","hashOfConfig":"48"},{"size":17591,"mtime":1614516898637,"results":"68","hashOfConfig":"48"},{"size":16408,"mtime":1614516930050,"results":"69","hashOfConfig":"48"},{"size":4674,"mtime":1614410236156,"results":"70","hashOfConfig":"48"},{"size":990,"mtime":1614410236160,"results":"71","hashOfConfig":"48"},{"size":468,"mtime":1614409988813,"results":"72","hashOfConfig":"48"},{"size":769,"mtime":1614409988813,"results":"73","hashOfConfig":"48"},{"size":8023,"mtime":1614410236152,"results":"74","hashOfConfig":"48"},{"size":653,"mtime":1614409988813,"results":"75","hashOfConfig":"48"},{"size":1207,"mtime":1614410236152,"results":"76","hashOfConfig":"48"},{"size":7440,"mtime":1614501105177,"results":"77","hashOfConfig":"48"},{"size":3403,"mtime":1614410236160,"results":"78","hashOfConfig":"48"},{"size":7086,"mtime":1614442870188,"results":"79","hashOfConfig":"48"},{"size":1651,"mtime":1614410236160,"results":"80","hashOfConfig":"48"},{"size":4062,"mtime":1614442482228,"results":"81","hashOfConfig":"48"},{"size":1992,"mtime":1614494690939,"results":"82","hashOfConfig":"48"},{"size":553,"mtime":1614409988813,"results":"83","hashOfConfig":"48"},{"size":422,"mtime":1614410236160,"results":"84","hashOfConfig":"48"},{"size":584,"mtime":1614439343457,"results":"85","hashOfConfig":"48"},{"size":750,"mtime":1614409988813,"results":"86","hashOfConfig":"48"},{"size":624,"mtime":1614409988813,"results":"87","hashOfConfig":"48"},{"size":594,"mtime":1614410236160,"results":"88","hashOfConfig":"48"},{"size":772,"mtime":1614409988813,"results":"89","hashOfConfig":"48"},{"size":579,"mtime":1614410236160,"results":"90","hashOfConfig":"48"},{"size":1029,"mtime":1614409988813,"results":"91","hashOfConfig":"48"},{"size":793,"mtime":1614409988813,"results":"92","hashOfConfig":"48"},{"size":332,"mtime":1614409988805,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1fk01iq",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"97"},"/home/pratik/Documents/mega-soft/src/index.tsx",["201"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport i18n from \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["202","203"],"/home/pratik/Documents/mega-soft/src/reportWebVitals.ts",[],"/home/pratik/Documents/mega-soft/src/App.tsx",["204","205","206","207","208","209","210","211"],"import React, { Suspense, useEffect, useState } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n//screens\nimport Navigation from \"./Navigation\";\nimport MainHeader from \"./SideNavigation/MainHeader\";\nimport Login from \"./Views/Login\";\nimport Home from \"./Views/Home\";\nimport Appraisal from \"./Views/Appraisal\";\nimport AddAppraisal from \"./Views/AddAppraisal\";\nimport UpdateAppraisal from \"./Views/UpdateAppraisal\";\nimport AppraisalDetail from \"./Views/AppraisalDetail\";\nimport GoalSetting from \"./Views/GoalSetting\";\nimport EmployeeDetails from \"./Views/EmployeeDetails\";\nimport JobHistory from \"./Views/JobHistory\";\nimport UpdateJobHistory from \"./Views/UpdateJobHistory\";\nimport JobHistoryDetails from \"./Views/JobHistoryDetails\";\nimport AddGoals from \"./Views/AddGoals\";\nimport UpdateGoals from \"./Views/UpdateGoals\";\nimport GoalDetails from \"./Views/GoalDetails\";\nimport ChanageColor from \"./components/ChanageColor\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { validateLogin, login, getAccessToken, handleRefreshToken } from \"./redux/actions/auth\";\n\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/reducers\";\nimport { setCollapedMenu } from \"./redux/actions/roleType\";\nimport { OAuthParameters } from \"./config\";\nimport { Spinner, SpinnerSize } from \"office-ui-fabric-react\";\n\n\nfunction App() {\n\n  const [loading, setLoading] = useState(false);\n  const menuType = useSelector((state: RootState) => state.menuType.menuType);\n\n  const getOAuthCode = () => {\n    const url = window.location.href;\n    const str = url;\n    const param = \"code=\";\n    let res = str.split(\"&\", 1);\n    let n = res[0].search(param);\n    if (n < 0) {\n      return;\n    }\n    n += param.length;\n    let code = res[0].substr(n);\n    return code;\n  };\n  const dispatch = useDispatch();\n  const auth = useSelector((state: RootState) => state.Auth);\n  const selectMenu = useSelector((state: RootState) => state.roleType.menuItem);\n  const [client_id] = useState(OAuthParameters.client_id);\n  const [scope] = useState(\"all\");\n  const code = getOAuthCode();\n\n  const checkAccessToken = () => {\n    const accesstokenData = {\n      client_id: client_id,\n      scope: scope,\n      code: code,\n    };\n    getAccessToken(accesstokenData).then((response: any) => {\n      const access_token = response.data.access_token;\n      const refresh_token = response.data.refresh_token;\n      const expires_in = response.data.expires_in;\n      sessionStorage.setItem('expires_in',expires_in)\n      if (access_token && refresh_token) {\n        dispatch(login(access_token, refresh_token));\n      }\n    });\n    \n  }\n\n\n  useEffect(() => {\n    dispatch(validateLogin());\n    if (code !== undefined) {\n      checkAccessToken();\n    }\n  }, []);\n\n\n  // if (auth.isLoading) {\n  //   console.log(\"isloading\", auth.isLoading);\n  //   return null;\n  // }\n\n  const handlemenuClick = () => {\n    if (selectMenu === false) {\n      dispatch(setCollapedMenu(true));\n    } else {\n      dispatch(setCollapedMenu(false));\n    }\n  };\n\n  // console.log(\"isloading==>\", auth.isLoading)\n  return (\n    <Suspense fallback={null}>\n      <BrowserRouter>\n        {(auth.isLoggedIn === true && auth.isLoading == false )? (\n          <Switch>\n            <div className=\"page-wrapper\">\n              <Navigation />\n              <main>\n                <div className={selectMenu == false ? `view` : `miniSideBar`}>\n                  <MainHeader>\n                    <div onClick={handlemenuClick}>\n                      <ChevronLeftIcon\n                        style={{\n                          color: \"#FFF\",\n                          cursor: \"pointer\",\n                          marginRight: \"10px\",\n                        }}\n                      />\n                    </div>\n                  </MainHeader>\n                  <Route exact path=\"/home\" component={Home} />\n                  <Route exact path=\"/appraisal\" component={Appraisal} />\n                  <Route exact path=\"/addApprisal\" component={AddAppraisal} />\n                  <Route\n                    exact\n                    path=\"/appraisal/update/:appraisalId\"\n                    component={UpdateAppraisal}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/view/:appraisalId\"\n                    component={AppraisalDetail}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting\"\n                    component={GoalSetting}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/:employeeId/:appraisalId\"\n                    component={EmployeeDetails}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/addjobhistory/:employeeId/:appraisalId\"\n                    component={JobHistory}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/jobhistory/updateJobHistory/:name\"\n                    component={UpdateJobHistory}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/jobhistory/jobHistoryDetail/:name\"\n                    component={JobHistoryDetails}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/addgoal/:employeeId/:appraisalId\"\n                    component={AddGoals}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/goals/updategoal/:name\"\n                    component={UpdateGoals}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/goalsetting/view/goal/goaldetail/:name\"\n                    component={GoalDetails}\n                  />\n                  <Route\n                    exact\n                    path=\"/appraisal/changecolor\"\n                    component={ChanageColor}\n                  />\n                  <Route path=\"/*\" render={() => <Redirect to=\"/home\" />} />\n                  <Route\n                    path=\"/appraisal/goalsetting*\"\n                    render={() => <Redirect to=\"/appraisal/goalsetting\" />}\n                  />\n                </div>\n              </main>\n            </div>\n          </Switch>\n        ) : (\n          auth.isLoading == true ? (\n            <Spinner\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                padding: \"50px\",\n                color: \"#00597d\",\n              }}\n              size={SpinnerSize.large}\n            />\n          ):\n          (<Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/*\" render={() => <Redirect to=\"/\" />} />\n          </Switch>)\n        ) }\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","/home/pratik/Documents/mega-soft/src/redux/index.tsx",[],"/home/pratik/Documents/mega-soft/src/Navigation.tsx",["212","213","214","215","216","217"],"import * as React from \"react\";\nimport {\n  INavLink,\n  INavLinkGroup,\n} from \"office-ui-fabric-react/lib/Nav\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { useHistory, matchPath } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/reducers\";\nimport SideNavigation from \"./SideNavigation\";\n\ninitializeIcons();\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: \"Appraisal\",\n        url: \"\",\n        key: \"key01\",\n        // icon: \"UpgradeAnalysis\",\n        links: [\n          {\n            name: \"Setup\",\n            url: \"/\",\n            icon: \"Settings\",\n            key: \"key02\",\n          },\n          // {\n          //   name: \"Ratings\",\n          //   url: \"/apprisal/rating\",\n          //   icon: \"6PointStar\",\n          //   key: \"key03\",\n          // },\n          // {\n          //   name: \"Periods\",\n          //   url: \"/apprisal/periods\",\n          //   icon: \"Timer\",\n          //   key: \"key04\",\n          // },\n          {\n            name: \"Goal Setting\",\n            url: \"/appraisal/goalsetting\",\n            icon: \"6PointStar\",\n            key: \"key05\",\n          },\n          // {\n          //   name: \"Self Assessment\",\n          //   url: \"\",\n          //   icon: \"6PointStar\",\n          //   key: \"key06\",\n          // },\n          // {\n          //   name: \"Development Plan\",\n          //   url: \"/apprisal/developmentPlan\",\n          //   icon: \"TestPlan\",\n          //   key: \"key07\",\n          // },\n          // {\n          //   name: \"Release Appraisal\",\n          //   url: \"/apprisal/releaseApprisal\",\n          //   icon: \"ReleaseGate\",\n          //   key: \"key08\",\n          // },\n          // {\n          //   name: \"Market Bench Marketing\",\n          //   url: \"/apprisal/marketBenchMarketing\",\n          //   icon: \"Market\",\n          //   key: \"key09\",\n          // },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: \"Manage\",\n        url: \"\",\n        key: \"key10\",\n        // icon:'MedicationAdmin',\n        links: [\n          {\n            name: \"Team Goal Setting\",\n            url: \"/manage/teamGoalSetting\",\n            icon: \"Settings\",\n            key: \"key11\",\n          },\n          {\n            name: \"Team assess\",\n            url: \"/manage/teamAssess\",\n            icon: \"AssessmentGroup\",\n            key: \"key12\",\n          },\n        ],\n        isExpanded: false,\n      },\n      {\n        name: \"Confirmation\",\n        url: \"\",\n        key: \"key13\",\n        expandAriaLabel: \"Expand Admin section\",\n        collapseAriaLabel: \"Collapse admin section\",\n        links: [\n          {\n            name: \"Confirmation Status\",\n            url: \"/confirmation/status\",\n            icon: \"SplitObject\",\n            key: \"key14\",\n          },\n          {\n            name: \"Release\",\n            url: \"/confirmation/release\",\n            key: \"key15\",\n            icon: \"ReleaseGate\",\n          },\n          {\n            name: \"Approval\",\n            url: \"/confirmation/approval\",\n            key: \"key16\",\n            icon: \"DocumentApproval\",\n          },\n          {\n            name: \"Letter\",\n            url: \"/confirmation/letter\",\n            key: \"key17\",\n            icon: \"DietPlanNotebook\",\n          },\n          {\n            name: \"Probation Letter\",\n            url: \"/confirmation/probationLetter\",\n            key: \"key18\",\n            icon: \"QuickNote\",\n          },\n        ],\n        isExpanded: false,\n      },\n    ],\n  },\n];\n\n\nfunction Navigation() {\n  const selectMenu = useSelector((state: RootState) => state.roleType.menuItem);\n\n  \n  let history = useHistory();\n  const [selectedNavKey, setSelectedNavKey] = React.useState(\"\");\n  const onLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    setSelectedNavKey(item?.key || \"\");\n  };\n  React.useEffect(() => {\n    navLinkGroups[0].links.map((item) => {\n      if (item.links) {\n        item.links.map((subItem) => {\n          if (\n            matchPath(history.location.pathname, {\n              path: subItem.url,\n              exact: true,\n            })\n          ) {\n            setSelectedNavKey(subItem?.key || \"\");\n            return;\n          }\n        });\n      } else {\n        if (\n          matchPath(history.location.pathname, {\n            path: item.url,\n            exact: true,\n          })\n        ) {\n          setSelectedNavKey(item?.key || \"\");\n          return;\n        }\n      }\n    });\n  }, [history.location.pathname]);\n  return (\n    <div id=\"main-wrapper\">\n      {/* <MainHeader /> */}\n      <div\n        className={\n          selectMenu === false\n            ? `sidebar left-sidebar`\n            : `sidebar left-sidebar-collapsed`\n        }\n      >\n        <SideNavigation />\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","/home/pratik/Documents/mega-soft/src/config.tsx",[],"/home/pratik/Documents/mega-soft/src/SideNavigation/MainHeader.tsx",["218","219","220","221","222","223","224","225","226"],"import React, { useEffect, useState } from \"react\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SmsIcon from \"@material-ui/icons/Sms\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IDropdownStyles,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { logout, revokeToken, userInfo } from \"../redux/actions/auth\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport logo_ms from \"../assets/img/logo_ms.png\";\nimport logo_nuage from \"../assets/img/logo_nuage.png\";\nimport { RootState } from \"../redux/reducers\";\nimport moment from \"moment\";\nimport { onChangeLanguage } from \"../redux/actions/application\";\n\nimport i18n from \"../i18n\";\nimport apiUrl from \"../config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction MainHeader(props: { children: any }) {\n  const { children } = props;\n  const languageOption: IDropdownOption[] = [\n    { key: \"en\", text: \"English\" },\n    { key: \"fr\", text: \"French\" },\n  ];\n  const dispatch = useDispatch();\n  const [userInfoData, setUserInfoData]: any = useState();\n  const selectedLanguage = useSelector(\n    (state: RootState) => state.application.language\n  );\n\n  const userinformation = useSelector(\n    (state: RootState) => state.userData.user\n  );\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      width: 170,\n      border: \"0px\",\n      // color: \"#FFF\",\n      backgroundColor: \"#FFF\",\n    },\n  };\n\n  const handleLanguage = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    // setLanguage(\n    //   item || {\n    //     key: \"\",\n    //     text: \"\",\n    //   }\n    // );\n    let data: any = item?.key || \"\";\n    dispatch(onChangeLanguage(data));\n    i18n.changeLanguage(data);\n\n    // setTimeout(() => {\n    //   Utils.reloadLocale(oldLanguage, languageSelected);\n    //   // history.goBack();\n    // }, 500);\n  };\n\n  const history = useHistory();\n\n  // console.log(\"userInfo\", userinformation);\n\n  const handleLogout = () => {\n    // window.open(`${apiUrl.method}/logout`, \"_self\");\n    logout();\n    dispatch(revokeToken());\n    // window.open(\n    //   `https://id.nuagebiz.tech/auth/realms/megasoft/protocol/openid-connect/logout?redirect_uri=http://localhost:3000`,\n    //   \"_self\"\n    // );\n  };\n\n  // console.log(\"user response==>\", userInfoData);\n  useEffect((): void => {\n    dispatch(userInfo());\n  }, []);\n\n  const userData = useSelector((state: RootState) => state.userData.UserData);\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const handleNewLang = (code: any) => {\n    dispatch(onChangeLanguage(code));\n    i18n.changeLanguage(code);\n\n    console.log(\"code\", code);\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"nav-item d-none d-md-block mr-.5\">{children}</div>\n      <div className=\"main-logo\">\n        <img src={logo_nuage} />\n      </div>\n      <div className=\"mx-auto text-white-50\">\n        <Text style={{ marginRight: \"10px\" }}>\n          {/* {i18n.t(\"main_header.welcome\")} {userData[0].name} ({userData[0].id}) */}\n          {i18n.t(\"main_header.welcome\")} {userinformation.full_name} (\n          {userinformation.employee_id})\n        </Text>\n\n        <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n          {i18n.t(\"main_header.logged_in\")} :\n        </Text>\n        <Text style={{ marginRight: \"5px\" }}>\n          {moment(dateNow).format(\"DD-MM-YYYY\")} {timeNow}\n        </Text>\n      </div>\n      <div>\n        <Dropdown\n          options={languageOption}\n          onChange={handleLanguage}\n          placeholder=\"Select language\"\n          selectedKey={\n            languageOption.find((item) => item.key === selectedLanguage)?.key\n          }\n          className=\"rolesDropDown\"\n          styles={dropdownStyles}\n        />\n      </div>\n      <div style={{ cursor: \"pointer\" }} className=\"link-icons px-2 nav-link\">\n        <NotificationsIcon style={{ fontSize: \"2rem\", color: \"#FFF\" }} />\n      </div>\n      <div style={{ cursor: \"pointer\" }} className=\"link-icons px-2 nav-link\">\n        <SmsIcon style={{ fontSize: \"2rem\", color: \"#FFF\" }} />\n      </div>\n      <div\n        style={{ cursor: \"pointer\", color: \"#FFF\" }}\n        className=\"link-icons px-2 nav-link\"\n        onClick={() => {\n          handleLogout();\n        }}\n      >\n        <PowerSettingsNewIcon style={{ fontSize: \"2rem\" }} />\n      </div>\n      <img src={logo_ms} className=\"ms-logo-center\" />\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(MainHeader);\n","/home/pratik/Documents/mega-soft/src/redux/actions/auth.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/roleType.tsx",[],"/home/pratik/Documents/mega-soft/src/Views/Home/index.tsx",["227","228","229"],"import React from \"react\";\nimport { IBreadcrumbItem, IBreadcrumbStyles } from \"office-ui-fabric-react\";\nimport Header from \"../../Header\";\n\nexport default function Home() {\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Home\", key: \"d1\", isCurrentItem: true, as: \"h4\" },\n  ];\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  return (\n    <div>\n      {/* <Header item={itemsWithHeading} styles={breadCrumStyle} /> */}\n      <div className=\"content\">\n        <div className=\"data-container\">\n          <div className=\"home-banner\">\n            <div className=\"home-banner-text\">\n              <h1>Megasoft  Solutions</h1>\n              <p>Managing Human Resources - from Cost to Asset</p>\n              <p className=\"instruction\">Please select <span>Performance</span> menu option to proceed.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/pratik/Documents/mega-soft/src/Views/Login/index.tsx",["230"],"import { PrimaryButton } from \"office-ui-fabric-react\";\nimport { connect } from \"react-redux\";\nimport logo_ms from \"../../assets/img/logo_ms.png\";\nimport \"./style.css\";\nimport apiUrl, { OAuthParameters } from \"../../config\";\n\nfunction Login() {\n  return (\n    <div className=\"login-section\">\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <div className=\"login-banner-image\">\n            <div className=\"login-banner-image-overlay\">\n              <div className=\"overlay-text-alignment\">\n                <div className=\"login-banner-text\">\n                  <h2>Making</h2>\n                  <p>\n                    Organizations Run Effectively By Providing Innovative HRMS\n                    Solutions Globally\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"text-right pt-3 pr-4\">\n            <img src={logo_ms} className=\"ms-logo-login\" />\n          </div>\n          <div className=\"login-form\">\n            <div className=\"login-form-center\">\n              <div\n                style={{\n                  marginTop: \"3rem\",\n                  justifyContent: \"center\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <PrimaryButton\n                  text=\"Proceed with Megasoft Login\"\n                  style={{ marginTop: \"20px\" }}\n                  allowDisabledFocus\n                  onClick={() => {\n                    window.open(\n                      `${apiUrl.method}/frappe.integrations.oauth2.authorize?client_id=${OAuthParameters.client_id}&state=${OAuthParameters.state}&response_type=code&scope=all&redirect_uri=${apiUrl.applicationHome}`,\n                      \"_self\"\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(Login);\n","/home/pratik/Documents/mega-soft/src/Views/Appraisal/index.tsx",["231","232","233","234","235","236","237","238","239","240"],"import React, { useEffect, useState } from \"react\";\nimport {\n  DetailsList,\n  IColumn,\n  IDetailsListStyles,\n} from \"office-ui-fabric-react/lib/DetailsList\";\nimport \"office-ui-fabric-react/dist/css/fabric.css\";\nimport {\n  PrimaryButton,\n  getTheme,\n  TextField,\n  Dropdown,\n  IDropdownOption,\n  IDropdownStyles,\n  Link,\n  Spinner,\n  SpinnerSize,\n  Modal,\n  IconButton,\n  IModalStyles,\n  IIconProps,\n} from \"office-ui-fabric-react\";\nimport {\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\nimport Header from \"../../Header\";\nimport { Pagination } from \"@uifabric/experiments\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nimport \"./style.css\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  edit_appraisal,\n  fetchAppraisalData,\n  fetchAppraisalDataById,\n} from \"../../redux/actions/apprisal\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ParamTypes {\n  appraisalId: string;\n}\n\nfunction Appraisal(props: any) {\n  const { t, i18n } = useTranslation();\n  const history = useHistory();\n  const [limitStart, setLimitSTart] = useState(0);\n  const [limitPageLength, setLimitPageLength] = useState(5);\n  const [orderBy, setOrderBy] = useState(\"asc\");\n  const [orderByField, setOrderByField] = useState(\"id\");\n  const [filtersById, setFiltersById] = useState(\"\");\n  const [filtersByDescription, setFiltersByDescription] = useState(\"\");\n  const [filtersByReviewFreq, setFiltersByReviewFreq] = useState(\"\");\n  const [filtersByAppraisal, setFiltersByAppraisal] = useState(\"\");\n  const [filtersByFormat, setFiltersByFormat] = useState(\"\");\n  const dispatch = useDispatch();\n  const appraisal = useSelector((state: RootState) => state.appraisal);\n  const { appraisalList, isLoading, count, total_count }: any = appraisal;\n  const [formatDate, setFormatDate] = useState(\"\");\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const params = useParams<ParamTypes>();\n\n  // console.log(\"roletype=>\", roleT);\n  const newAppraisalList = appraisalList.map((element: any) => {\n    const a = {\n      ...element,\n      review_from: moment(element.review_from).format(\"DD-MM-YYYY\"),\n      appraisal_to: moment(element.appraisal_to).format(\"DD-MM-YYYY\"),\n    };\n    return a;\n  });\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    if (filtersByDescription) {\n      filters.push([\"appraisal_description\", \"like\", filtersByDescription]);\n    }\n    if (filtersByReviewFreq) {\n      filters.push([\"review_frequency\", \"=\", filtersByReviewFreq]);\n    }\n    if (filtersByAppraisal) {\n      filters.push([\"type\", \"=\", filtersByAppraisal]);\n    }\n    if (filtersByFormat) {\n      filters.push([\"format_type\", \"=\", filtersByFormat]);\n    }\n    dispatch(\n      fetchAppraisalData(\n        limitStart,\n        limitPageLength,\n        `${orderByField} ${orderBy}`,\n        JSON.stringify(filters),\n        roleType,\n      )\n    );\n  }, [\n    limitStart,\n    limitPageLength,\n    orderBy,\n    filtersById,\n    filtersByDescription,\n    filtersByReviewFreq,\n    filtersByAppraisal,\n    filtersByFormat,\n    roleType\n  ]);\n\n  const columns: IColumn[] = [\n    {\n      key: \"01\",\n      name: i18n.t(\"common.ID\"),\n      fieldName: \"id\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSorted: true,\n      className: \"idColumn\",\n      isSortedDescending: false,\n      sortAscendingAriaLabel: \"Sorted A to Z\",\n      isRowHeader: true,\n      onColumnClick: _onColumnClick,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"02\",\n      name: i18n.t(\"appraisal_form.Description\"),\n      fieldName: \"appraisal_description\",\n      minWidth: 100,\n      maxWidth: 200,\n      isMultiline: true,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"03\",\n      name: i18n.t(\"appraisal_form.Review_From\"),\n      fieldName: \"review_from\",\n      minWidth: 50,\n      maxWidth: 120,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"04\",\n      name: i18n.t(\"appraisal_form.Appraisal_To\"),\n      fieldName: \"appraisal_to\",\n      minWidth: 50,\n      maxWidth: 120,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    // {\n    //   key: \"05\",\n    //   name: i18n.t(\"appraisal_form.department\"),\n    //   fieldName: \"department\",\n    //   minWidth: 50,\n    //   maxWidth: 120,\n    //   isSortedDescending: false,\n    //   isRowHeader: true,\n    //   isResizable: false,\n    // },\n    {\n      key: \"06\",\n      name: i18n.t(\"common.type\"),\n      fieldName: \"type\",\n      minWidth: 50,\n      maxWidth: 160,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"07\",\n      name: i18n.t(\"appraisal_form.Format_Type\"),\n      fieldName: \"format_type\",\n      minWidth: 50,\n      maxWidth: 160,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: i18n.t(\"appraisal_form.Review_Frequency\"),\n      fieldName: \"review_frequency\",\n      minWidth: 50,\n      maxWidth: 160,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"09\",\n      name: i18n.t(\"common.action\"),\n      fieldName: \"action\",\n      minWidth: 110,\n      maxWidth: 110,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              viewAppraisal(item);\n            }}\n          >\n            <VisibilityIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              updateAppriasal(item);\n            }}\n          >\n            <CreateIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons\"\n            onClick={() => {\n              deleteAppraisal(item);\n            }}\n          >\n            <DeleteIcon style={{ color: \"#f04336\" }} />\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const [showDelete, setShowDelete] = useState(false);\n  const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const theme = getTheme();\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const [deleteItemId, setDeleteItemId] = useState(null);\n  const [updateData, setUpdateData]: any = useState({});\n\n  const deleteAppraisal = (item: any) => {\n    setDeleteItemId(item.id);\n    // console.log(\"item id\", item)\n    const filters = [];\n    if (item.name) {\n      filters.push([\"id\", \"like\", item.name]);\n    }\n    fetchAppraisalDataById(\n      limitStart,\n      limitPageLength,\n      `${orderByField} ${orderBy}`,\n      JSON.stringify(filters),\n      roleType\n    ).then((response) => {\n      // console.log(response.data)\n      setUpdateData(response.data[0]);\n    });\n    setShowDelete(true);\n  };\n\n  const handleDeleteAppraisal = () => {\n    const deleteQuery = {\n      id: deleteItemId,\n      is_deleted: 1,\n    };\n    edit_appraisal(deleteQuery).then((response) => {\n      setShowDelete(false);\n      setShowDeleteSuccess(true);\n      setDeleteItemId(null);\n      setUpdateData(null);\n    });\n  };\n\n  const viewAppraisal = (item: any) => {\n    history.push(`/appraisal/view/${item.id}`);\n  };\n\n  const updateAppriasal = (item: any) => {\n    history.push(`/appraisal/update/${item.id}`);\n  };\n\n  const _onBreadcrumbItemClicked = () => {};\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    {\n      text: i18n.t(\"breadcrumb_items.performance\"),\n      key: \"d1\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    {\n      text: i18n.t(\"breadcrumb_items.appraisal\"),\n      key: \"d2\",\n      isCurrentItem: true,\n      as: \"h4\",\n    },\n  ];\n\n  const handleSearchClick = () => {\n    setFiltersById(`${searchById}%`);\n    setFiltersByDescription(`${searchByDescription}%`);\n    setFiltersByReviewFreq(`${reviewSearch?.key || \"\"}`);\n    setFiltersByAppraisal(`${AppraisalSearch?.key || \"\"}`);\n    setFiltersByFormat(`${formatSearch?.key || \"\"}`);\n    setLimitSTart(0);\n    setCurentPage(0);\n  };\n\n  function _onColumnClick(\n    ev?: React.MouseEvent<HTMLElement>,\n    column?: IColumn\n  ): void {\n    // console.log('column', column)\n    if (column?.fieldName === orderByField) {\n      if (orderBy === \"asc\") {\n        setOrderBy(\"desc\");\n      } else {\n        setOrderBy(\"asc\");\n      }\n    } else {\n      setOrderByField(column?.fieldName || \"id\");\n    }\n  }\n\n  const controlStyles = {\n    root: {\n      margin: \"0 10px 20px 0\",\n      maxWidth: \"300px\",\n      // borderRadius: \"20px\",\n    },\n\n    wrapper: {\n      \".ms-TextField-fieldGroup fieldGroup-91\": {\n        borderRadius: \"10px\",\n      },\n    },\n  };\n\n  const [currentPage, setCurentPage] = useState(0);\n\n  const [searchById, setSearchById] = useState(\"\");\n  const [searchByDescription, setSearchByDescription] = useState(\"\");\n\n  const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [AppraisalSearch, setAppraisalSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [formatSearch, setForamtSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const itemSearch = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchById(text || \"\");\n  };\n\n  const itemSearchDescription = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchByDescription(text || \"\");\n  };\n\n  const itemSearchReview = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const itemSearchAppraisal = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setAppraisalSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const itemSearchFormatType = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setForamtSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        backgroundColor: \"#344f84\",\n      },\n    },\n    root: {\n      backgroundColor: \"#344f84\",\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const searchOptions: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Yearly\", text: \"Yearly\" },\n    { key: \"Monthly\", text: \"Monthly\" },\n  ];\n\n  const searchFormatType: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Sales Employees\", text: \"Sales Employees\" },\n    { key: \"Non Sales Employees\", text: \"Non Sales Employees\" },\n  ];\n\n  const searchAppraisal: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Annual Appraisal\", text: \"Annual Appraisal\" },\n    { key: \"Confirmation Appraisal\", text: \"Confirmation Appraisal\" },\n  ];\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      // width: 170,\n      border: \"0px\",\n    },\n  };\n\n  const [advanceSearch, setAdvanceSearch] = useState(false);\n\n  const handleAdvanceSearch = () => {\n    if (advanceSearch == false) {\n      setAdvanceSearch(true);\n    }\n    if (advanceSearch == true) {\n      setAdvanceSearch(false);\n    }\n  };\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const renderNoData = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Text\n          style={{\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: 50,\n            fontSize: 30,\n          }}\n        >\n          No Appraisal Data Found\n        </Text>\n      </div>\n    );\n  };\n\n  const renderData = () => {\n    return (\n      <React.Fragment>\n        <div className=\"card advance-search-section\">\n          <div className=\"searchBarClass\">\n            <TextField\n              label={t(\"common.ID\")}\n              onChange={itemSearch}\n              placeholder={t(\"appraisal_form.field_place_holders.id\")}\n              className=\"searchInput\"\n              styles={controlStyles}\n            />\n            <TextField\n              placeholder={t(\"appraisal_form.field_place_holders.description\")}\n              label={t(\"appraisal_form.Description\")}\n              className=\"searchInput\"\n              onChange={itemSearchDescription}\n              styles={controlStyles}\n            />\n            <Dropdown\n              label={t(\"appraisal_form.Review_Frequency\")}\n              placeholder={t(\"appraisal_form.field_place_holders.select\")}\n              options={searchOptions}\n              className=\"reviewFrequency\"\n              onChange={itemSearchReview}\n              style={{ padding: \"0px\" }}\n              styles={dropdownStyles}\n            />\n            <div\n              style={{\n                marginTop: \"1.8rem\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {\n                handleAdvanceSearch();\n              }}\n            >\n              <MoreHorizIcon style={{ color: \"#344f84\", marginLeft: \"20px\" }} />\n            </div>\n            <PrimaryButton\n              iconProps={{ iconName: \"Search\" }}\n              onClick={handleSearchClick}\n              style={{\n                marginLeft: \"10px\",\n                alignSelf: \"center\",\n                marginTop: \"14px\",\n              }}\n            />\n            <PrimaryButton\n              text={t(\"appraisal_form.buttons.new\")}\n              iconProps={{ iconName: \"Add\" }}\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\"/addApprisal\");\n              }}\n              style={{\n                marginLeft: \"auto\",\n                alignSelf: \"center\",\n                marginTop: \"14px\",\n              }}\n              disabled={false}\n              checked={false}\n            />\n          </div>\n          <div\n            className={\n              advanceSearch == true ? `advanceSearch` : `advanceSearchNull`\n            }\n          >\n            <Dropdown\n              label={t(\"appraisal_form.Appraisal_To\")}\n              placeholder={t(\"appraisal_form.field_place_holders.select\")}\n              options={searchAppraisal}\n              className=\"reviewFrequency\"\n              onChange={itemSearchAppraisal}\n              style={{ padding: \"0px\", marginRight: \"10px\" }}\n              styles={dropdownStyles}\n            />\n            <Dropdown\n              label={t(\"appraisal_form.Review_From\")}\n              placeholder={t(\"appraisal_form.field_place_holders.select\")}\n              options={searchFormatType}\n              className=\"reviewFrequency\"\n              onChange={itemSearchFormatType}\n              style={{ padding: \"0px\" }}\n              styles={dropdownStyles}\n            />\n          </div>\n        </div>\n\n        {isLoading ? (\n          <Spinner\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"50px\",\n              color: \"#00597d\",\n            }}\n            size={SpinnerSize.large}\n          />\n        ) : appraisalList.length === 0 ? (\n          renderNoData()\n        ) : (\n          <div className=\"card\">\n            <DetailsList\n              styles={listStyle}\n              items={newAppraisalList}\n              className=\"detail-list\"\n              columns={columns}\n              selectionMode={0}\n            />\n            <div className=\"pagination-style\">\n              <Pagination\n                format=\"buttons\"\n                selectedPageIndex={currentPage}\n                pageCount={Math.ceil(total_count / limitPageLength)}\n                itemsPerPage={limitPageLength}\n                totalItemCount={total_count}\n                onPageChange={(page) => {\n                  setLimitSTart(page * limitPageLength);\n                  setCurentPage(page);\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDelete}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header-local\">\n              <div className=\"modal-title\">{t(\"pop_up.delete.heading\")}</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              {t(\"pop_up.delete.confirmation_message\")}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text={t(\"pop_up.delete.heading\")}\n                allowDisabledFocus\n                onClick={handleDeleteAppraisal}\n                disabled={false}\n                checked={false}\n              />\n              <PrimaryButton\n                text={t(\"appraisal_form.buttons.cancel\")}\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDeleteSuccess}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header-local\">\n              <div className=\"modal-title\">{t(\"pop_up.success.heading\")}</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDeleteSuccess(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              {t(\"pop_up.delete.success_message\")}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text={t(\"appraisal_form.buttons.ok\")}\n                allowDisabledFocus\n                onClick={() => {\n                  handleSearchClick();\n                  setShowDeleteSuccess(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderData()}</div>\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(Appraisal);\n","/home/pratik/Documents/mega-soft/src/Views/AddAppraisal/index.tsx",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"/home/pratik/Documents/mega-soft/src/Views/AppraisalDetail/index.tsx",["256","257"],"import {\n  Checkbox,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  Label,\n  PrimaryButton,\n  Separator,\n  Stack,\n} from \"office-ui-fabric-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { fetchAppraisalDataById } from \"../../redux/actions/apprisal\";\nimport Header from \"../../Header\";\nimport moment from \"moment\";\nimport { setCollapedMenu } from \"../../redux/actions/roleType\";\nimport { RootState } from \"../../redux/reducers\";\nimport { useTranslation } from \"react-i18next/\";\n\ninterface ParamTypes {\n  appraisalId: string;\n}\n\nconst stackTokens = { childrenGap: 10 };\n\nfunction AppraisalDetail(props: any) {\n  const params = useParams<ParamTypes>();\n\n  const { t, i18n } = useTranslation();\n\n  const [limitStart] = useState(0);\n  const [limitPageLength] = useState(5);\n  const [orderBy] = useState(\"asc\");\n  const [orderByField] = useState(\"id\");\n  const [filtersById] = useState(params.appraisalId);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n\n  const [appraisalDetail, setAppraisalDetail]: any = useState({});\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    fetchAppraisalDataById(\n      limitStart,\n      limitPageLength,\n      `${orderByField} ${orderBy}`,\n      JSON.stringify(filters),\n      roleType\n    ).then((response) => {\n      setAppraisalDetail(response.data[0]);\n    });\n  }, []);\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      marginTop: \"-1rem\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/appraisal\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: i18n.t(\"breadcrumb_items.performance\"), key: \"d1\" },\n    {\n      text: i18n.t(\"breadcrumb_items.appraisal\"),\n      key: \"d2\",\n      isCurrentItem: true,\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    { text: i18n.t(\"breadcrumb_items.appraisal_details\"), key: \"d3\", as: \"h4\" },\n  ];\n\n  const reviewDate = moment(appraisalDetail.review_from).format(\"DD-MM-YYYY\");\n  const appraisalTo = moment(appraisalDetail.appraisal_to).format(\"DD-MM-YYYY\");\n\n  const renderData = () => {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"emp-details-section\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <span>{i18n.t(\"common.ID\")}</span> : {appraisalDetail.id}\n              </div>\n              <div className=\"col-md-8\">\n                <span>{i18n.t(\"appraisal_form.Description\")}</span> :{\" \"}\n                {appraisalDetail.appraisal_description}\n              </div>\n              <div className=\"col-md-4\">\n                <span>{i18n.t(\"appraisal_form.Review_From\")}</span> :{\" \"}\n                {reviewDate}\n              </div>\n              <div className=\"col-md-8\">\n                <span>{i18n.t(\"appraisal_form.Appraisal_To\")}</span> :{\" \"}\n                {appraisalTo}\n              </div>\n              <div className=\"col-md-4\">\n                <span>{i18n.t(\"appraisal_form.Review_Frequency\")}</span> :{\" \"}\n                {appraisalDetail.review_frequency}\n              </div>\n              <div className=\"col-md-8\">\n                <span>{i18n.t(\"common.type\")}</span> : {appraisalDetail.type}\n              </div>\n              <div className=\"col-md-4\">\n                <span>{i18n.t(\"appraisal_form.Format_Type\")}</span> :{\" \"}\n                {appraisalDetail.format_type}\n              </div>\n              <div className=\"col-md-8\">\n                <span>{i18n.t(\"appraisal_form.Owner\")}</span> :{\" \"}\n                {appraisalDetail.appraisal_owner}\n              </div> \n              <div className=\"col-md-8\">\n                <span>{i18n.t(\"appraisal_form.department\")}</span> :{\" \"}\n                {appraisalDetail.department}\n              </div>\n            </div>\n          </div>\n          <Separator />\n          <div className=\"rowCheckBox\">\n            <div>\n              <Label>{i18n.t(\"appraisal_form.KRA_Settings_Tabs\")}</Label>\n              <Checkbox\n                disabled={true}\n                label={i18n.t(\"goal_setting_form.job_history\")}\n                title={\"Competencies\"}\n                checked={appraisalDetail.kra_settings_tab_competencies}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_competencies\"\n              />\n              <Checkbox\n                disabled={true}\n                label={i18n.t(\"goal_setting_form.goals\")}\n                title={\"Goals\"}\n                checked={appraisalDetail.kra_settings_tab_goals}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_goals\"\n              />\n              <Checkbox\n                disabled={true}\n                // label={i18n.t(\"goal_setting_form.training_and_development\")}\n                label=\"Training/Development Plans\"\n                title={\"Development Plans\"}\n                checked={appraisalDetail.kra_settings_tab_development_plan}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_development_plan\"\n              />\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            ></div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text={t(\"appraisal_form.buttons.back\")}\n                allowDisabledFocus\n                disabled={false}\n                onClick={() => {\n                  history.push(\"/appraisal\");\n                }}\n                checked={false}\n              />\n            </div>\n          </Stack>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  const dispatch = useDispatch();\n  const selectMenu = useSelector((state: RootState) => state.roleType.menuItem);\n  const handlemenuClick = () => {\n    if (selectMenu === false) {\n      dispatch(setCollapedMenu(true));\n    } else {\n      dispatch(setCollapedMenu(false));\n    }\n  };\n\n  return (\n    <div>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderData()} </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(AppraisalDetail);\n","/home/pratik/Documents/mega-soft/src/Views/GoalSetting/index.tsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../Header\";\nimport {\n  ComboBox,\n  DetailsList,\n  Dropdown,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IColumn,\n  IComboBox,\n  IComboBoxOption,\n  IDetailsListStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  PrimaryButton,\n  Spinner,\n  SpinnerSize,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchEmployeeData } from \"../../redux/actions/employeeData\";\nimport { RootState } from \"../../redux/reducers\";\nimport { Pagination } from \"@uifabric/experiments\";\nimport { useTranslation } from \"react-i18next/\";\nimport { filterByEmployee } from \"../../redux/actions/apprisal\";\nimport { setCollapedMenu } from \"../../redux/actions/roleType\";\n\nfunction GoalSetting(props: any) {\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation();\n  const [doctype, setDoctype] = useState(\"EmployeeAppraisal\");\n  const [limit_start, setLimitStart] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [role, setRole] = useState(\"Employee\");\n  const [currentPage, setCurentPage] = useState(0);\n  const [limitPageLength, setLimitPageLength] = useState(3);\n  const [limitStart, setLimitSTart] = useState(0);\n  const [filterByStatus, setFilterByStatus] = useState(\"\");\n  const [filterByName, setFilterByName] = useState(\"\");\n  const [order_by] = useState(\"employee_name asc\");\n\n  const employee = useSelector((state: RootState): any => state.employeeList);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const { employeeList, isLoading, total_count, count } = employee;\n  const comboBoxRef = useRef<IComboBox>(null);\n  const [filterOption, setFilterOption] = useState([]);\n\n\n  // employee name list==>\n  // useEffect((): void => {\n  //   filterByEmployee(order_by).then((response) => {\n  //     setFilterOption(response.data);\n  //   });\n  // }, []);\n\n  const comboBoxBasicOptions: IComboBoxOption[] = filterOption.map(\n    (element: any) => ({\n      key: element.employee_id,\n      text: element.employee_name,\n    })\n  );\n\n  const [searchByName, setSearchByName]: any = useState(\"\");\n\n  const handleEmployeeName = (\n    event: React.FormEvent<IComboBox>,\n    option?: IComboBoxOption,\n    index?: number,\n    value?: string\n  ) => {\n    // console.log(\"option.key\", option?.key);\n    setSearchByName(option?.key || \"\");\n  };\n\n  useEffect((): void => {\n    const filters = [];\n    if (filterByStatus) {\n      filters.push([\"status\", \"like\", filterByStatus]);\n    }\n    if (filterByName) {\n      filters.push([\"employee_id\", \"like\", filterByName]);\n    }\n    dispatch(\n      fetchEmployeeData(\n        doctype,\n        limit_start,\n        limit,\n        roleType,\n        JSON.stringify(filters)\n      )\n    );\n  }, [doctype, limit_start, limit, filterByStatus, roleType, filterByName]);\n\n  const [status, setStatus] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n  const history = useHistory();\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      width: 250,\n      border: \"0px\",\n    },\n  };\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        backgroundColor: \"#344f84\",\n      },\n    },\n    root: {\n      backgroundColor: \"#344f84\",\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const statusOption: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Pending with Employee\", text: \"Pending with Employee\" },\n    { key: \"Pending with Reviewer\", text: \"Pending with Reviewer\" },\n    { key: \"Pending Counter Signing\", text: \"Pending Counter Signing\" },\n    { key: \"Complete\", text: \"Complete\" },\n  ];\n\n  const columns: IColumn[] = [\n    // {\n    //   key: \"01\",\n    //   name: \"S.No\",\n    //   fieldName: \"sno\",\n    //   minWidth: 50,\n    //   maxWidth: 50,\n    //   isSorted: true,\n    //   className: \"idColumn\",\n    //   isSortedDescending: false,\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\n    //   isRowHeader: true,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"02\",\n      name: i18n.t(\"common.action\"),\n      fieldName: \"action\",\n      minWidth: 80,\n      maxWidth: 110,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <PrimaryButton\n            text=\"KRA Setting\"\n            allowDisabledFocus\n            onClick={() => {\n              handleKraData(item);\n            }}\n            className=\"action-btn\"\n            style={{\n              padding: \"0px\",\n              fontSize: \"0.75rem\",\n              height: \"24px\",\n              borderRadius: \"3px\",\n            }}\n            disabled={false}\n            checked={false}\n          />\n        </div>\n      ),\n    },\n\n    {\n      key: \"03\",\n      name: i18n.t(\"goal_setting_form.employee_id\"),\n      fieldName: \"employee_id\",\n      minWidth: 50,\n      maxWidth: 90,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"04\",\n      name: i18n.t(\"goal_setting_form.employee_name\"),\n      fieldName: \"employee_name\",\n      minWidth: 50,\n      maxWidth: 120,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    // {\n    //   key: \"05\",\n    //   name: \"Manager ID\",\n    //   fieldName: \"manager_id\",\n    //   minWidth: 50,\n    //   maxWidth: 100,\n    //   isSortedDescending: false,\n    //   isRowHeader: true,\n    //   isResizable: false,\n    // },\n    {\n      key: \"06\",\n      name: i18n.t(\"goal_setting_form.manager_name\"),\n      fieldName: \"manager_name\",\n      minWidth: 50,\n      maxWidth: 140,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"07\",\n      name: i18n.t(\"goal_setting_form.status\"),\n      fieldName: \"status\",\n      minWidth: 50,\n      maxWidth: 170,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: i18n.t(\"goal_setting_form.appraisal_type\"),\n      fieldName: \"appraisal_type\",\n      minWidth: 50,\n      maxWidth: 260,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n  ];\n\n  const handleKraData = (item: any) => {\n    history.push(\n      `/appraisal/goalsetting/view/${item.employee_id}/${item.appraisal_id}`\n    );\n    // history.push(\"/appraisal/goalsetting/view\");\n  };\n\n  const handleSearch = () => {\n    setFilterByStatus(`${status?.key || \"\"}`);\n    setFilterByName(`${searchByName || \"\"}`);\n  };\n\n  const onChangeStatus = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setStatus(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/appraisal\");\n  };\n\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: i18n.t(\"breadcrumb_items.performance\"), key: \"d1\" },\n    {\n      text: i18n.t(\"breadcrumb_items.appraisal\"),\n      key: \"d2\",\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    // { text: \"Employee\", key: \"d3\", as: \"h4\" },\n    {\n      text: i18n.t(\"breadcrumb_items.goal_setting\"),\n      key: \"d4\",\n      isCurrentItem: true,\n      as: \"h4\",\n    },\n  ];\n\n  const renderNoData = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Text\n          style={{\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: 50,\n            fontSize: 30,\n          }}\n        >\n          No Data Found.\n        </Text>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">\n          <div className=\"card advance-search-section\">\n            <div\n              // className=\"card\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <Dropdown\n                label={i18n.t(\"goal_setting_form.status\")}\n                placeholder=\"Select\"\n                options={statusOption}\n                className=\"reviewFrequency\"\n                onChange={onChangeStatus}\n                style={{ padding: \"0px\" }}\n                styles={dropdownStyles}\n              />\n              {/* {roleType === \"Manager\" ? (\n                <ComboBox\n                  componentRef={comboBoxRef}\n                  className=\"reviewFrequency\"\n                  placeholder=\"Enter Employee Name\"\n                  label=\"Employee Name\"\n                  onChange={handleEmployeeName}\n                  allowFreeform\n                  style={{ marginLeft: \"10px\" }}\n                  autoComplete=\"on\"\n                  options={comboBoxBasicOptions}\n                />\n              ) : null} */}\n              <PrimaryButton\n                iconProps={{ iconName: \"Search\" }}\n                style={{\n                  marginLeft: \"20px\",\n                  alignSelf: \"center\",\n                  marginTop: \"24px\",\n                }}\n                onClick={handleSearch}\n              />\n            </div>\n          </div>\n          {isLoading ? (\n            <Spinner\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                padding: \"50px\",\n                color: \"#00597d\",\n              }}\n              size={SpinnerSize.large}\n            />\n          ) : employeeList.length === 0 ? (\n            renderNoData()\n          ) : (\n                <div className=\"card\">\n                  <DetailsList\n                    styles={listStyle}\n                    items={employeeList}\n                    className=\"detail-list\"\n                    columns={columns}\n                    selectionMode={0}\n                  />\n                  <div className=\"pagination-style\">\n                    <Pagination\n                      format=\"buttons\"\n                      selectedPageIndex={currentPage}\n                      pageCount={Math.ceil(total_count / limitPageLength)}\n                      itemsPerPage={limitPageLength}\n                      totalItemCount={total_count}\n                      onPageChange={(page) => {\n                        setLimitSTart(page * limitPageLength);\n                        setCurentPage(page);\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(GoalSetting);\n","/home/pratik/Documents/mega-soft/src/Views/UpdateAppraisal/index.tsx",["276","277","278","279","280","281","282"],"/home/pratik/Documents/mega-soft/src/Views/JobHistory/index.tsx",["283","284"],"/home/pratik/Documents/mega-soft/src/Views/EmployeeDetails/index.tsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"/home/pratik/Documents/mega-soft/src/Views/UpdateJobHistory/index.tsx",["301","302","303","304","305","306","307","308","309","310","311","312"],"/home/pratik/Documents/mega-soft/src/Views/JobHistoryDetails/index.tsx",["313","314","315","316","317","318","319","320"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  fetchJobHistoryByName,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  PrimaryButton,\n  Stack,\n} from \"office-ui-fabric-react\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  employeeId: string;\n  name: string;\n}\n\nfunction JobHistoryDetails(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const [filtersByName] = useState(params.name);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\n  const [jobHistoryData, setJobHistoryData] = useState({\n    position: \"\",\n    place: \"\",\n    responsibilities: \"\",\n    qualifications: \"\",\n  });\n  const [toDate, setToDate] = useState<Date | undefined>();\n  const [fromDate, setFromDate] = useState<Date | undefined>();\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersByName) {\n      filters.push([\"name\", \"=\", filtersByName]);\n    }\n    fetchJobHistoryByName(roleType, JSON.stringify(filters)).then(\n      (response) => {\n        setEmployeeDetails(response.data[0]);\n      }\n    );\n  }, []);\n\n\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setJobHistoryData({\n      ...jobHistoryData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onchangeToDate = (date: Date | null | undefined): void => {\n    setToDate(date || undefined);\n  };\n  const onchangeFromDate = (date: Date | null | undefined): void => {\n    setFromDate(date || undefined);\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/appraisal\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Job History\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const fromDateFormat = moment(employeeDetails.from_date).format(\"DD-MM-YYYY\");\n  const toDateFormat = moment(employeeDetails.to_date).format(\"DD-MM-YYYY\");\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"emp-details-section\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <span>Position Held</span> : {employeeDetails.position_held}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Place of Posting</span> : {employeeDetails.place_of_posting}\n            </div>\n            <div className=\"col-md-4\">\n              <span>From Date</span> : {fromDateFormat}\n            </div>\n            <div className=\"col-md-8\">\n              <span>To Date</span> : {toDateFormat}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Key Responsibilities</span> :{\" \"}\n              {employeeDetails.key_responsibilities}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Qualifications</span> : {employeeDetails.qualifications}\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n      </div>\n    );\n  };\n\n\n  return (\n    <div>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(JobHistoryDetails);\n","/home/pratik/Documents/mega-soft/src/Views/AddGoals/index.tsx",["321","322","323","324","325","326","327","328","329","330"],"/home/pratik/Documents/mega-soft/src/Views/UpdateGoals/index.tsx",["331","332"],"/home/pratik/Documents/mega-soft/src/Views/GoalDetails/index.tsx",["333","334","335","336","337"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IDropdownOption,\n  PrimaryButton,\n  Stack,\n} from \"office-ui-fabric-react\";\nimport { fetchGoalDataName } from \"../../redux/actions/goal\";\n\ninterface ParamTypes {\n  employeeId: string;\n  name: string;\n}\n\n\nfunction GoalDetails(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const [filtersByName] = useState(params.name);\n  const [limitPageLength] = useState(5);\n  //   console.log(params.name);\n  const [limit_start] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\n\n  const [goalDetails, setGoalDetails]: any = useState({});\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersByName) {\n      filters.push([\"name\", \"=\", filtersByName]);\n    }\n    fetchGoalDataName(\n      limit_start,\n      limitPageLength,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response) => {\n      setGoalDetails(response.data[0]);\n    });\n  }, []);\n\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setGoalDetails({\n      ...goalDetails,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/appraisal\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Goals Details\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"emp-details-section\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <span>ID</span> : {params.name}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Order Number</span> : {goalDetails.order_no}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Goal Type</span> : {goalDetails.goal_type}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Parent Goal</span> : {goalDetails.parent_goal_id}\n            </div>\n            <div className=\"col-md-4\">\n              <span>KRA</span> : {goalDetails.kra}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Goal</span> : {goalDetails.goal}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Measure</span> : {goalDetails.measure}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Weightage</span> : {goalDetails.weightage}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Target</span> : {goalDetails.target}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Threshold</span> : {goalDetails.threshold}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Stretch</span> :{\" \"}\n              {/* {goalDetails.stretch == \"\" ? \"N/A\" : goalDetails.stretch} */}\n              {goalDetails.stretch}\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(GoalDetails);\n","/home/pratik/Documents/mega-soft/src/components/ChanageColor/index.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/application.tsx",[],"/home/pratik/Documents/mega-soft/src/i18n.tsx",[],"/home/pratik/Documents/mega-soft/src/SideNavigation/index.tsx",["338","339","340"],"import React, { useEffect } from \"react\";\nimport \"./style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducers\";\nimport { setMenuType, setRoleType } from \"../redux/actions/roleType\";\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarHeader } from \"react-pro-sidebar\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\n//icons\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\n\nimport { DefaultTheme } from \"../../src/Utils/color\";\nimport { useTranslation } from \"react-i18next/\";\nimport { sideNavigationData } from \"../redux/actions/navigation\";\nimport { Spinner, SpinnerSize } from \"office-ui-fabric-react\";\n\nfunction SideNavigation() {\n  const { t, i18n } = useTranslation();\n  const menuType = useSelector((state: RootState) => state.menuType.menuType);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const selectMenu = useSelector((state: RootState) => state.roleType.menuItem);\n  const sideMenuData = useSelector((state: RootState) => state.navigationData);\n  const menuData = sideMenuData.navigationData;\n  const isLoading = sideMenuData.isLoading;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect((): void => {\n    dispatch(sideNavigationData(menuType));\n  }, [menuType]);\n\n  const handleRoleMenu = (e: any, item: any) => {\n    dispatch(setRoleType(item));\n  };\n\n  const checkMenuPermission = (role: any, menuType: any): boolean => {\n    for (let i = 0; i < menuData[\"ms-menu\"].length; i++) {\n      if (menuData[\"ms-menu\"][i].role === role) {\n        let menu = menuData[\"ms-menu\"];\n        for (let j = 0; j < menu[i][\"menu-items\"].length; j++) {\n          if (menu[i][\"menu-items\"][j] === menuType) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const menu: any = [];\n\n  if (!isLoading) {\n    for (let i = 0; i < menuData[\"ms-menu\"].length; i++) {\n      menu.push(\n        <button\n          onClick={(event) => {\n            handleRoleMenu(event, menuData[\"ms-menu\"][i].role);\n          }}\n        >\n          {menuData[\"ms-menu\"][i].role}\n        </button>\n      );\n      menu.push(\n        <Menu\n          style={\n            roleType !== menuData[\"ms-menu\"][i].role ? { display: \"none\" } : {}\n          }\n          popperArrow={true}\n          iconShape=\"circle\"\n        >\n          <SubMenu\n            title={i18n.t(\"nav.performance.appraisal-menu\")}\n            icon={<BarChartIcon />}\n          >\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.appraisal.setup\"\n            ) === true ? (\n                <MenuItem icon={<SettingsIcon />}>\n                  {i18n.t(\"nav.performance.appraisal.Setup\")}\n                  <Link to=\"/appraisal\" />\n                </MenuItem>\n              ) : null}\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.appraisal.goal-setting\"\n            ) === true ? (\n                <MenuItem icon={<ListIcon />}>\n                  {i18n.t(\"nav.performance.appraisal.goal-setting\")}\n                  <Link to=\"/appraisal/goalsetting\" />\n                </MenuItem>\n              ) : null}\n\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.appraisal.self-assessment\"\n            ) === true ? (\n                <MenuItem icon={<AssessmentIcon />}>\n                  {i18n.t(\"nav.performance.appraisal.self-assessment\")}\n                </MenuItem>\n              ) : null}\n\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.appraisal.team-goal-setting\"\n            ) === true ? (\n                <MenuItem icon={<ListIcon />}>\n                  {i18n.t(\"nav.performance.appraisal.team-goal-setting\")}\n                  <Link to=\"/appraisal/goalsetting\" />\n                </MenuItem>\n              ) : null}\n\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.appraisal.team-assessment\"\n            ) === true ? (\n                <MenuItem icon={<AssessmentIcon />}>\n                  {i18n.t(\"nav.performance.appraisal.team-assessment\")}\n                </MenuItem>\n              ) : null}\n          </SubMenu>\n          <SubMenu\n            title={i18n.t(\"nav.performance.confirmation-menu\")}\n            icon={<AssignmentTurnedInIcon />}\n          >\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.confirmation.letter\"\n            ) === true ? (\n                <MenuItem icon={<CachedIcon />}>\n                  {i18n.t(\"nav.performance.confirmation.confirmation-letter\")}\n                </MenuItem>\n              ) : null}\n\n            {checkMenuPermission(\n              menuData[\"ms-menu\"][i].role,\n              \"nav.performance.confirmation-status\"\n            ) === true ? (\n                <MenuItem icon={<CachedIcon />}>\n                  {i18n.t(\"nav.performance.confirmation.confirmation-status\")}\n                </MenuItem>\n              ) : null}\n          </SubMenu>\n        </Menu>\n      );\n    }\n  }\n\n  const menuItem = () => {\n    return (\n      <ProSidebar\n        collapsed={selectMenu}\n        style={{ backgroundColor: DefaultTheme.colors.primary }}\n      >\n        <SidebarHeader\n          className=\"sidebar-ell\"\n        >\n          <HomeIcon\n            onClick={() => {\n              dispatch(setMenuType(\"1\"));\n              history.push('/home');\n            }}\n\n          /> <span>Performance</span>\n        </SidebarHeader>\n        {menu}\n      </ProSidebar>\n    );\n  };\n\n\n\n  const handleOtherMenu = (event: any, item: any) => {\n    dispatch(setMenuType(\"0\"));\n    history.push('/appraisal')\n  };\n\n  const localMenuItem = () => {\n    return !isLoading ? (\n      <ProSidebar\n        collapsed={selectMenu}\n        style={{ backgroundColor: DefaultTheme.colors.primary }}\n      >\n        <SidebarHeader\n        // onClick={() => {\n        //   dispatch(setMenuType(\"0\"));\n        // }}\n        >\n          <HomeIcon />\n          HRMS\n        </SidebarHeader>\n        <Menu popperArrow={true} iconShape=\"circle\" style={{}}>\n          <MenuItem icon={<PersonIcon />} style={{ marginBottom: \"20px\" }}>\n            {i18n.t(menuData[\"ms-menu\"][0][\"menu-items\"][0])}\n          </MenuItem>\n          <MenuItem icon={<BarChartIcon />} style={{ marginBottom: \"20px\" }}>\n            {i18n.t(menuData[\"ms-menu\"][0][\"menu-items\"][1])}\n          </MenuItem>\n          <MenuItem\n            icon={<AssignmentTurnedInIcon />}\n            style={{ marginBottom: \"20px\" }}\n            onClick={(event) => {\n              handleOtherMenu(event, \"Performance\");\n            }}\n          >\n            {i18n.t(menuData[\"ms-menu\"][0][\"menu-items\"][2])}\n          </MenuItem>\n          <MenuItem\n            icon={<ImportExportIcon />}\n            style={{ marginBottom: \"20px\" }}\n          >\n            {i18n.t(menuData[\"ms-menu\"][0][\"menu-items\"][3])}\n          </MenuItem>\n        </Menu>\n      </ProSidebar>\n    ) : (\n        <Spinner\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: \"50px\",\n            color: \"#00597d\",\n          }}\n          size={SpinnerSize.large}\n        />\n      );\n  };\n\n  return (\n    <React.Fragment>\n      {menuType == 0 ? menuItem() : localMenuItem()}\n    </React.Fragment>\n  );\n}\n\nexport default SideNavigation;\n","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx",[],"/home/pratik/Documents/mega-soft/src/Header.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx",["341"],"import axios from \"axios\";\nimport apiUrl, { OAuthParameters } from \"../../config\";\nimport { handleRefreshToken, logout } from \"./auth\";\n\nconst client_id = OAuthParameters.client_id;\n\nexport const fetchAppraisalData = (\n  limit_start = 0,\n  limit_page_length = 10,\n  order_by = \"id asc\",\n  filters: any,\n  role:any\n) => async (dispatch: any): Promise<any> => {\n  const token = sessionStorage.getItem(\"access_token\");\n  if (token === null) {\n    dispatch({\n      type: \"LOGOUT_SUCCESS\",\n    });\n    return false;\n  }\n  const accessToken = \"bearer \" + token;\n  try {\n    dispatch({\n      type: \"FETCH_APPRAISAL_LIST_START\",\n    });\n    const response = await axios({\n      url: `${apiUrl.resource}/Appraisal`,\n      params: {\n        limit_start,\n        limit_page_length,\n        order_by,\n        filters,\n        role,\n        fields: JSON.stringify([\n          \"name\",\n          \"id\",\n          \"appraisal_description\",\n          \"review_from\",\n          \"appraisal_to\",\n          \"review_frequency\",\n          \"type\",\n          \"format_type\",\n          \"format_type\",\n          \"appraisal_owner\",\n          \"kra_settings_tab_goals\",\n          \"kra_settings_tab_competencies\",\n          \"kra_settings_tab_development_plan\",\n          \"kra_settings_tab_summary\",\n          \"assessment_tab_goals\",\n          \"assessment_tab_competencies\",\n          \"assessment_tab_development_plan\",\n          \"assessment_tab_summary\",\n          \"is_deleted\",\n          \"department\"\n        ]),\n      },\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n    });\n    const responseBody = response.data;\n    // console.log(\"Appraisal api response =>\", responseBody);\n    dispatch({\n      type: \"FETCH_APPRAISAL_LIST_SUCCESS\",\n      payload: responseBody,\n    });\n    return responseBody;\n  } catch (error) {\n    if (error.response) {\n      if (error.response.status === 403) {\n        console.log(\"inside 403 error block\", JSON.stringify(error.response));\n        const refresh_token = sessionStorage.getItem(\"refresh_token\");\n        const data = {\n          refresh_token: refresh_token,\n          client_id: client_id,\n        };\n        handleRefreshToken(data)\n          .then((response: any) => {\n            console.log(\"response of refresh token \", response);\n            console.log(\"calling handle appraisal again.\");\n            console.log(\"indise response of if condtion==>\")\n              fetchAppraisalData(\n                limit_start,\n                limit_page_length,\n                order_by,\n                filters,\n                role\n              );\n          })\n          .catch((error) => {\n            console.log(\n              \"ERROR: 2. unable to refresh access_token logging out.\",\n              error.response\n            );\n            dispatch({\n              type: \"LOGOUT_SUCCESS\",\n            });\n          });\n      }\n    }\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const fetchAppraisalDataById = async (\n  limit_start = 0,\n  limit_page_length = 10,\n  order_by = \"id asc\",\n  filters: any,\n  role:any\n) => {\n  try {\n    const token = sessionStorage.getItem(\"access_token\");\n    if (token === null) {\n      return false;\n    }\n    const accessToken = \"bearer \" + token;\n    const response = await axios({\n      url: `${apiUrl.resource}/Appraisal`,\n      params: {\n        limit_start,\n        limit_page_length,\n        order_by,\n        filters,\n        role,\n        fields: JSON.stringify([\n          \"name\",\n          \"id\",\n          \"appraisal_description\",\n          \"review_from\",\n          \"appraisal_to\",\n          \"review_frequency\",\n          \"type\",\n          \"format_type\",\n          \"format_type\",\n          \"appraisal_owner\",\n          \"kra_settings_tab_goals\",\n          \"kra_settings_tab_competencies\",\n          \"kra_settings_tab_development_plan\",\n          \"kra_settings_tab_summary\",\n          \"assessment_tab_goals\",\n          \"assessment_tab_competencies\",\n          \"assessment_tab_development_plan\",\n          \"assessment_tab_summary\",\n          \"is_deleted\",\n          \"department\"\n        ]),\n      },\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n    });\n    const responseBody = response.data;\n    // console.log(\"api data by id\", responseBody)\n    return responseBody;\n  } catch (error) {\n    if (error.response) {\n      if (error.response.status === 403) {\n        console.log(\"inside 403 error block\", JSON.stringify(error.response));\n        const refresh_token = sessionStorage.getItem(\"refresh_token\");\n        const data = {\n          refresh_token: refresh_token,\n          client_id: client_id,\n        };\n        handleRefreshToken(data)\n          .then((response: any) => {\n            console.log(\"response of refresh token \", response);\n            console.log(\"calling handle appraisal again.\");\n            fetchAppraisalDataById(\n                limit_start,\n                limit_page_length,\n                order_by,\n                filters,\n                role\n              );\n            \n          })\n          .catch((error) => {\n            console.log(\n              \"ERROR: 2. unable to refresh access_token logging out.\",\n              error.response\n            );\n            // dispatch(logout());\n          });\n      }\n    }\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const add_apprisal = async (data: any, role:any) => {\n  const token = sessionStorage.getItem(\"access_token\");\n  if (token === null) {\n    return false;\n  }\n  const accessToken = \"bearer \" + token;\n  const items = {\n    data: data,\n    role\n  }\n  console.log(\"itmes to add==>\", items)\n  const response = await axios({\n    url: `${apiUrl.resource}/Appraisal`,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: accessToken,\n    },\n    data: JSON.stringify(items)\n  });\n  return response;\n};\nexport const edit_appraisal = async (data: any) => {\n  const token = sessionStorage.getItem(\"access_token\");\n  if (token === null) {\n    return false;\n  }\n  const accessToken = \"bearer \" + token;\n  const response = await axios({\n    url: `${apiUrl.resource}/Appraisal/${data.id}`,\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: accessToken,\n    },\n    data: JSON.stringify(data),\n  });\n  // console.log(\"api response ==>\", response)\n  return response;\n};\n\nexport const filterByEmployee = async (order_by = \"employee_name asc\") => {\n  try {\n    const token = sessionStorage.getItem(\"access_token\");\n    if (token === null) {\n      return false;\n    }\n    const accessToken = \"bearer \" + token;\n    const response = await axios({\n      url: `${apiUrl.resource}/Employee`,\n      params: {\n        order_by,\n        fields: JSON.stringify([\"employee_id\", \"employee_name\"]),\n      },\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n    });\n    // console.log(\"Api filter by employee==>\", response);\n    const responseBody = response.data;\n    return responseBody;\n  } catch (error) {\n    // console.log(\"error in getting data\", error);\n    return {\n      ...error,\n    };\n  }\n};\n","/home/pratik/Documents/mega-soft/src/redux/actions/goal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/jobHistory.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/developmentPlan.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/employeeData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/navigation.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/application.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/menuType.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/auth.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/jobHistory.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/roleType.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/navigationData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/employeeList.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx",[],"/home/pratik/Documents/mega-soft/src/Utils/color.tsx",["342","343"],"import { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducers\";\n\n// const colorsList = useSelector((state: RootState) => state.application);\n\n// console.log(\"colorsList\", colorsList);\n\nexport const DefaultTheme = {\n  colors: {\n    primary: \"#00597d\",\n    primaryDark: \"006994 \",\n    white: \"#FFF\",\n  },\n};\n",{"ruleId":"344","severity":1,"message":"345","line":8,"column":8,"nodeType":"346","messageId":"347","endLine":8,"endColumn":12},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"344","severity":1,"message":"352","line":23,"column":48,"nodeType":"346","messageId":"347","endLine":23,"endColumn":66},{"ruleId":"344","severity":1,"message":"353","line":35,"column":10,"nodeType":"346","messageId":"347","endLine":35,"endColumn":17},{"ruleId":"344","severity":1,"message":"354","line":35,"column":19,"nodeType":"346","messageId":"347","endLine":35,"endColumn":29},{"ruleId":"344","severity":1,"message":"355","line":36,"column":9,"nodeType":"346","messageId":"347","endLine":36,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":82,"column":6,"nodeType":"358","endLine":82,"endColumn":8,"suggestions":"359"},{"ruleId":"360","severity":1,"message":"361","line":102,"column":54,"nodeType":"362","messageId":"363","endLine":102,"endColumn":56},{"ruleId":"360","severity":1,"message":"361","line":107,"column":44,"nodeType":"362","messageId":"363","endLine":107,"endColumn":46},{"ruleId":"360","severity":1,"message":"361","line":187,"column":26,"nodeType":"362","messageId":"363","endLine":187,"endColumn":28},{"ruleId":"344","severity":1,"message":"364","line":145,"column":10,"nodeType":"346","messageId":"347","endLine":145,"endColumn":24},{"ruleId":"344","severity":1,"message":"365","line":146,"column":9,"nodeType":"346","messageId":"347","endLine":146,"endColumn":20},{"ruleId":"366","severity":1,"message":"367","line":150,"column":39,"nodeType":"368","messageId":"369","endLine":150,"endColumn":41},{"ruleId":"366","severity":1,"message":"367","line":152,"column":34,"nodeType":"368","messageId":"369","endLine":152,"endColumn":36},{"ruleId":"366","severity":1,"message":"370","line":160,"column":13,"nodeType":"371","messageId":"372","endLine":160,"endColumn":20},{"ruleId":"366","severity":1,"message":"370","line":171,"column":11,"nodeType":"371","messageId":"372","endLine":171,"endColumn":18},{"ruleId":"344","severity":1,"message":"373","line":21,"column":8,"nodeType":"346","messageId":"347","endLine":21,"endColumn":14},{"ruleId":"344","severity":1,"message":"374","line":31,"column":10,"nodeType":"346","messageId":"347","endLine":31,"endColumn":22},{"ruleId":"344","severity":1,"message":"375","line":31,"column":24,"nodeType":"346","messageId":"347","endLine":31,"endColumn":39},{"ruleId":"344","severity":1,"message":"376","line":69,"column":9,"nodeType":"346","messageId":"347","endLine":69,"endColumn":16},{"ruleId":"356","severity":1,"message":"377","line":86,"column":6,"nodeType":"358","endLine":86,"endColumn":8,"suggestions":"378"},{"ruleId":"344","severity":1,"message":"379","line":88,"column":9,"nodeType":"346","messageId":"347","endLine":88,"endColumn":17},{"ruleId":"344","severity":1,"message":"380","line":93,"column":9,"nodeType":"346","messageId":"347","endLine":93,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":104,"column":9,"nodeType":"383","endLine":104,"endColumn":33},{"ruleId":"381","severity":1,"message":"382","line":147,"column":7,"nodeType":"383","endLine":147,"endColumn":55},{"ruleId":"344","severity":1,"message":"384","line":3,"column":8,"nodeType":"346","messageId":"347","endLine":3,"endColumn":14},{"ruleId":"344","severity":1,"message":"385","line":6,"column":9,"nodeType":"346","messageId":"347","endLine":6,"endColumn":44},{"ruleId":"344","severity":1,"message":"386","line":10,"column":9,"nodeType":"346","messageId":"347","endLine":10,"endColumn":51},{"ruleId":"381","severity":1,"message":"382","line":28,"column":13,"nodeType":"383","endLine":28,"endColumn":60},{"ruleId":"344","severity":1,"message":"387","line":55,"column":27,"nodeType":"346","messageId":"347","endLine":55,"endColumn":45},{"ruleId":"344","severity":1,"message":"388","line":65,"column":37,"nodeType":"346","messageId":"347","endLine":65,"endColumn":42},{"ruleId":"344","severity":1,"message":"389","line":66,"column":10,"nodeType":"346","messageId":"347","endLine":66,"endColumn":20},{"ruleId":"344","severity":1,"message":"390","line":66,"column":22,"nodeType":"346","messageId":"347","endLine":66,"endColumn":35},{"ruleId":"344","severity":1,"message":"391","line":68,"column":9,"nodeType":"346","messageId":"347","endLine":68,"endColumn":15},{"ruleId":"356","severity":1,"message":"392","line":106,"column":6,"nodeType":"358","endLine":116,"endColumn":4,"suggestions":"393"},{"ruleId":"344","severity":1,"message":"394","line":269,"column":10,"nodeType":"346","messageId":"347","endLine":269,"endColumn":20},{"ruleId":"360","severity":1,"message":"361","line":484,"column":23,"nodeType":"362","messageId":"363","endLine":484,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":487,"column":23,"nodeType":"362","messageId":"363","endLine":487,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":594,"column":29,"nodeType":"362","messageId":"363","endLine":594,"endColumn":31},{"ruleId":"344","severity":1,"message":"395","line":25,"column":3,"nodeType":"346","messageId":"347","endLine":25,"endColumn":14},{"ruleId":"344","severity":1,"message":"396","line":27,"column":3,"nodeType":"346","messageId":"347","endLine":27,"endColumn":11},{"ruleId":"344","severity":1,"message":"397","line":75,"column":9,"nodeType":"346","messageId":"347","endLine":75,"endColumn":20},{"ruleId":"344","severity":1,"message":"398","line":79,"column":10,"nodeType":"346","messageId":"347","endLine":79,"endColumn":21},{"ruleId":"344","severity":1,"message":"399","line":79,"column":23,"nodeType":"346","messageId":"347","endLine":79,"endColumn":37},{"ruleId":"344","severity":1,"message":"400","line":80,"column":10,"nodeType":"346","messageId":"347","endLine":80,"endColumn":19},{"ruleId":"344","severity":1,"message":"401","line":80,"column":21,"nodeType":"346","messageId":"347","endLine":80,"endColumn":33},{"ruleId":"344","severity":1,"message":"402","line":355,"column":10,"nodeType":"346","messageId":"347","endLine":355,"endColumn":18},{"ruleId":"344","severity":1,"message":"403","line":355,"column":20,"nodeType":"346","messageId":"347","endLine":355,"endColumn":31},{"ruleId":"344","severity":1,"message":"404","line":356,"column":10,"nodeType":"346","messageId":"347","endLine":356,"endColumn":18},{"ruleId":"344","severity":1,"message":"405","line":356,"column":20,"nodeType":"346","messageId":"347","endLine":356,"endColumn":31},{"ruleId":"344","severity":1,"message":"353","line":357,"column":10,"nodeType":"346","messageId":"347","endLine":357,"endColumn":17},{"ruleId":"344","severity":1,"message":"406","line":358,"column":10,"nodeType":"346","messageId":"347","endLine":358,"endColumn":17},{"ruleId":"344","severity":1,"message":"407","line":358,"column":19,"nodeType":"346","messageId":"347","endLine":358,"endColumn":29},{"ruleId":"344","severity":1,"message":"408","line":907,"column":9,"nodeType":"346","messageId":"347","endLine":907,"endColumn":24},{"ruleId":"356","severity":1,"message":"409","line":56,"column":6,"nodeType":"358","endLine":56,"endColumn":8,"suggestions":"410"},{"ruleId":"344","severity":1,"message":"408","line":191,"column":9,"nodeType":"346","messageId":"347","endLine":191,"endColumn":24},{"ruleId":"344","severity":1,"message":"411","line":5,"column":3,"nodeType":"346","messageId":"347","endLine":5,"endColumn":11},{"ruleId":"344","severity":1,"message":"412","line":26,"column":10,"nodeType":"346","messageId":"347","endLine":26,"endColumn":26},{"ruleId":"344","severity":1,"message":"413","line":27,"column":10,"nodeType":"346","messageId":"347","endLine":27,"endColumn":25},{"ruleId":"344","severity":1,"message":"414","line":31,"column":11,"nodeType":"346","messageId":"347","endLine":31,"endColumn":12},{"ruleId":"344","severity":1,"message":"415","line":32,"column":19,"nodeType":"346","messageId":"347","endLine":32,"endColumn":29},{"ruleId":"344","severity":1,"message":"416","line":33,"column":23,"nodeType":"346","messageId":"347","endLine":33,"endColumn":36},{"ruleId":"344","severity":1,"message":"417","line":34,"column":17,"nodeType":"346","messageId":"347","endLine":34,"endColumn":25},{"ruleId":"344","severity":1,"message":"418","line":35,"column":10,"nodeType":"346","messageId":"347","endLine":35,"endColumn":14},{"ruleId":"344","severity":1,"message":"419","line":35,"column":16,"nodeType":"346","messageId":"347","endLine":35,"endColumn":23},{"ruleId":"344","severity":1,"message":"387","line":37,"column":27,"nodeType":"346","messageId":"347","endLine":37,"endColumn":45},{"ruleId":"344","severity":1,"message":"420","line":38,"column":10,"nodeType":"346","messageId":"347","endLine":38,"endColumn":20},{"ruleId":"344","severity":1,"message":"421","line":41,"column":10,"nodeType":"346","messageId":"347","endLine":41,"endColumn":18},{"ruleId":"344","severity":1,"message":"388","line":45,"column":49,"nodeType":"346","messageId":"347","endLine":45,"endColumn":54},{"ruleId":"344","severity":1,"message":"422","line":46,"column":9,"nodeType":"346","messageId":"347","endLine":46,"endColumn":20},{"ruleId":"344","severity":1,"message":"423","line":47,"column":24,"nodeType":"346","messageId":"347","endLine":47,"endColumn":39},{"ruleId":"344","severity":1,"message":"424","line":57,"column":9,"nodeType":"346","messageId":"347","endLine":57,"endColumn":48},{"ruleId":"344","severity":1,"message":"425","line":66,"column":9,"nodeType":"346","messageId":"347","endLine":66,"endColumn":27},{"ruleId":"356","severity":1,"message":"377","line":93,"column":6,"nodeType":"358","endLine":93,"endColumn":75,"suggestions":"426"},{"ruleId":"344","severity":1,"message":"396","line":9,"column":3,"nodeType":"346","messageId":"347","endLine":9,"endColumn":11},{"ruleId":"356","severity":1,"message":"409","line":96,"column":6,"nodeType":"358","endLine":96,"endColumn":8,"suggestions":"427"},{"ruleId":"344","severity":1,"message":"428","line":170,"column":26,"nodeType":"346","messageId":"347","endLine":170,"endColumn":43},{"ruleId":"344","severity":1,"message":"429","line":181,"column":10,"nodeType":"346","messageId":"347","endLine":181,"endColumn":21},{"ruleId":"344","severity":1,"message":"430","line":208,"column":9,"nodeType":"346","messageId":"347","endLine":208,"endColumn":28},{"ruleId":"344","severity":1,"message":"353","line":251,"column":10,"nodeType":"346","messageId":"347","endLine":251,"endColumn":17},{"ruleId":"344","severity":1,"message":"354","line":251,"column":19,"nodeType":"346","messageId":"347","endLine":251,"endColumn":29},{"ruleId":"344","severity":1,"message":"431","line":40,"column":10,"nodeType":"346","messageId":"347","endLine":40,"endColumn":25},{"ruleId":"356","severity":1,"message":"432","line":60,"column":6,"nodeType":"358","endLine":60,"endColumn":8,"suggestions":"433"},{"ruleId":"344","severity":1,"message":"434","line":77,"column":33,"nodeType":"346","messageId":"347","endLine":77,"endColumn":57},{"ruleId":"344","severity":1,"message":"435","line":78,"column":30,"nodeType":"346","messageId":"347","endLine":78,"endColumn":51},{"ruleId":"344","severity":1,"message":"388","line":79,"column":10,"nodeType":"346","messageId":"347","endLine":79,"endColumn":15},{"ruleId":"344","severity":1,"message":"436","line":79,"column":17,"nodeType":"346","messageId":"347","endLine":79,"endColumn":25},{"ruleId":"344","severity":1,"message":"437","line":81,"column":22,"nodeType":"346","messageId":"347","endLine":81,"endColumn":35},{"ruleId":"344","severity":1,"message":"438","line":82,"column":19,"nodeType":"346","messageId":"347","endLine":82,"endColumn":29},{"ruleId":"344","severity":1,"message":"439","line":91,"column":10,"nodeType":"346","messageId":"347","endLine":91,"endColumn":26},{"ruleId":"344","severity":1,"message":"440","line":97,"column":34,"nodeType":"346","messageId":"347","endLine":97,"endColumn":45},{"ruleId":"356","severity":1,"message":"441","line":121,"column":6,"nodeType":"358","endLine":121,"endColumn":45,"suggestions":"442"},{"ruleId":"356","severity":1,"message":"443","line":137,"column":6,"nodeType":"358","endLine":137,"endColumn":64,"suggestions":"444"},{"ruleId":"356","severity":1,"message":"445","line":163,"column":6,"nodeType":"358","endLine":163,"endColumn":43,"suggestions":"446"},{"ruleId":"356","severity":1,"message":"447","line":193,"column":6,"nodeType":"358","endLine":193,"endColumn":43,"suggestions":"448"},{"ruleId":"344","severity":1,"message":"449","line":227,"column":9,"nodeType":"346","messageId":"347","endLine":227,"endColumn":50},{"ruleId":"344","severity":1,"message":"450","line":369,"column":10,"nodeType":"346","messageId":"347","endLine":369,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":506,"column":27,"nodeType":"362","messageId":"363","endLine":506,"endColumn":29},{"ruleId":"344","severity":1,"message":"451","line":637,"column":10,"nodeType":"346","messageId":"347","endLine":637,"endColumn":22},{"ruleId":"344","severity":1,"message":"452","line":29,"column":8,"nodeType":"346","messageId":"347","endLine":29,"endColumn":24},{"ruleId":"344","severity":1,"message":"431","line":39,"column":10,"nodeType":"346","messageId":"347","endLine":39,"endColumn":25},{"ruleId":"344","severity":1,"message":"453","line":39,"column":27,"nodeType":"346","messageId":"347","endLine":39,"endColumn":45},{"ruleId":"344","severity":1,"message":"454","line":40,"column":10,"nodeType":"346","messageId":"347","endLine":40,"endColumn":24},{"ruleId":"344","severity":1,"message":"455","line":40,"column":26,"nodeType":"346","messageId":"347","endLine":40,"endColumn":43},{"ruleId":"344","severity":1,"message":"456","line":46,"column":10,"nodeType":"346","messageId":"347","endLine":46,"endColumn":16},{"ruleId":"344","severity":1,"message":"457","line":47,"column":10,"nodeType":"346","messageId":"347","endLine":47,"endColumn":18},{"ruleId":"356","severity":1,"message":"432","line":61,"column":6,"nodeType":"358","endLine":61,"endColumn":8,"suggestions":"458"},{"ruleId":"344","severity":1,"message":"459","line":115,"column":9,"nodeType":"346","messageId":"347","endLine":115,"endColumn":23},{"ruleId":"344","severity":1,"message":"460","line":118,"column":9,"nodeType":"346","messageId":"347","endLine":118,"endColumn":25},{"ruleId":"344","severity":1,"message":"353","line":163,"column":10,"nodeType":"346","messageId":"347","endLine":163,"endColumn":17},{"ruleId":"344","severity":1,"message":"354","line":163,"column":19,"nodeType":"346","messageId":"347","endLine":163,"endColumn":29},{"ruleId":"344","severity":1,"message":"461","line":2,"column":32,"nodeType":"346","messageId":"347","endLine":2,"endColumn":43},{"ruleId":"344","severity":1,"message":"462","line":24,"column":10,"nodeType":"346","messageId":"347","endLine":24,"endColumn":21},{"ruleId":"344","severity":1,"message":"456","line":34,"column":10,"nodeType":"346","messageId":"347","endLine":34,"endColumn":16},{"ruleId":"344","severity":1,"message":"457","line":35,"column":10,"nodeType":"346","messageId":"347","endLine":35,"endColumn":18},{"ruleId":"356","severity":1,"message":"463","line":47,"column":6,"nodeType":"358","endLine":47,"endColumn":8,"suggestions":"464"},{"ruleId":"344","severity":1,"message":"465","line":51,"column":9,"nodeType":"346","messageId":"347","endLine":51,"endColumn":22},{"ruleId":"344","severity":1,"message":"459","line":62,"column":9,"nodeType":"346","messageId":"347","endLine":62,"endColumn":23},{"ruleId":"344","severity":1,"message":"460","line":65,"column":9,"nodeType":"346","messageId":"347","endLine":65,"endColumn":25},{"ruleId":"344","severity":1,"message":"466","line":7,"column":3,"nodeType":"346","messageId":"347","endLine":7,"endColumn":13},{"ruleId":"344","severity":1,"message":"452","line":25,"column":8,"nodeType":"346","messageId":"347","endLine":25,"endColumn":24},{"ruleId":"344","severity":1,"message":"467","line":40,"column":9,"nodeType":"346","messageId":"347","endLine":40,"endColumn":17},{"ruleId":"344","severity":1,"message":"438","line":43,"column":19,"nodeType":"346","messageId":"347","endLine":43,"endColumn":29},{"ruleId":"344","severity":1,"message":"456","line":56,"column":10,"nodeType":"346","messageId":"347","endLine":56,"endColumn":16},{"ruleId":"344","severity":1,"message":"457","line":57,"column":10,"nodeType":"346","messageId":"347","endLine":57,"endColumn":18},{"ruleId":"344","severity":1,"message":"468","line":60,"column":10,"nodeType":"346","messageId":"347","endLine":60,"endColumn":18},{"ruleId":"356","severity":1,"message":"469","line":76,"column":6,"nodeType":"358","endLine":76,"endColumn":8,"suggestions":"470"},{"ruleId":"344","severity":1,"message":"459","line":118,"column":9,"nodeType":"346","messageId":"347","endLine":118,"endColumn":23},{"ruleId":"344","severity":1,"message":"460","line":121,"column":9,"nodeType":"346","messageId":"347","endLine":121,"endColumn":25},{"ruleId":"356","severity":1,"message":"471","line":59,"column":6,"nodeType":"358","endLine":59,"endColumn":8,"suggestions":"472"},{"ruleId":"344","severity":1,"message":"473","line":137,"column":26,"nodeType":"346","messageId":"347","endLine":137,"endColumn":43},{"ruleId":"344","severity":1,"message":"474","line":8,"column":3,"nodeType":"346","messageId":"347","endLine":8,"endColumn":18},{"ruleId":"344","severity":1,"message":"462","line":22,"column":10,"nodeType":"346","messageId":"347","endLine":22,"endColumn":21},{"ruleId":"344","severity":1,"message":"438","line":27,"column":19,"nodeType":"346","messageId":"347","endLine":27,"endColumn":29},{"ruleId":"356","severity":1,"message":"471","line":44,"column":6,"nodeType":"358","endLine":44,"endColumn":8,"suggestions":"475"},{"ruleId":"344","severity":1,"message":"465","line":47,"column":9,"nodeType":"346","messageId":"347","endLine":47,"endColumn":22},{"ruleId":"344","severity":1,"message":"414","line":26,"column":11,"nodeType":"346","messageId":"347","endLine":26,"endColumn":12},{"ruleId":"356","severity":1,"message":"377","line":38,"column":6,"nodeType":"358","endLine":38,"endColumn":16,"suggestions":"476"},{"ruleId":"360","severity":1,"message":"361","line":240,"column":17,"nodeType":"362","messageId":"363","endLine":240,"endColumn":19},{"ruleId":"344","severity":1,"message":"477","line":3,"column":30,"nodeType":"346","messageId":"347","endLine":3,"endColumn":36},{"ruleId":"344","severity":1,"message":"478","line":1,"column":10,"nodeType":"346","messageId":"347","endLine":1,"endColumn":21},{"ruleId":"344","severity":1,"message":"479","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":19},"@typescript-eslint/no-unused-vars","'i18n' is defined but never used.","Identifier","unusedVar","no-native-reassign",["480"],"no-negated-in-lhs",["481"],"'handleRefreshToken' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'menuType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAccessToken', 'code', and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["482"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedNavKey' is assigned a value but never used.","'onLinkClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'apiUrl' is defined but never used.","'userInfoData' is assigned a value but never used.","'setUserInfoData' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["483"],"'userData' is assigned a value but never used.","'handleNewLang' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Header' is defined but never used.","'itemsWithHeading' is assigned a value but never used.","'breadCrumStyle' is assigned a value but never used.","'setLimitPageLength' is assigned a value but never used.","'count' is assigned a value but never used.","'formatDate' is assigned a value but never used.","'setFormatDate' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderByField'. Either include them or remove the dependency array.",["484"],"'updateData' is assigned a value but never used.","'ColorPicker' is defined but never used.","'addYears' is defined but never used.","'updateColor' is assigned a value but never used.","'showPreview' is assigned a value but never used.","'setShowPreview' is assigned a value but never used.","'alphaType' is assigned a value but never used.","'setAlphaType' is assigned a value but never used.","'error400' is assigned a value but never used.","'setError400' is assigned a value but never used.","'error500' is assigned a value but never used.","'setError500' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'handlemenuClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limitStart', 'orderBy', 'orderByField', and 'roleType'. Either include them or remove the dependency array.",["485"],"'ComboBox' is defined but never used.","'filterByEmployee' is defined but never used.","'setCollapedMenu' is defined but never used.","'t' is assigned a value but never used.","'setDoctype' is assigned a value but never used.","'setLimitStart' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","'limitStart' is assigned a value but never used.","'order_by' is assigned a value but never used.","'comboBoxRef' is assigned a value but never used.","'setFilterOption' is assigned a value but never used.","'comboBoxBasicOptions' is assigned a value but never used.","'handleEmployeeName' is assigned a value but never used.",["486"],["487"],"'setFirstDayOfWeek' is assigned a value but never used.","'formateType' is assigned a value but never used.","'onChangeFormateType' is assigned a value but never used.","'employeeDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById' and 'roleType'. Either include them or remove the dependency array.",["488"],"'setLimitStartDevelopment' is assigned a value but never used.","'setOrderByDevelopment' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setTotalCount' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'developmentCount' is assigned a value but never used.","'total_count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByApprisal' and 'filtersById'. Either include them or remove the dependency array.",["489"],"React Hook useEffect has missing dependencies: 'dispatch' and 'filtersById'. Either include them or remove the dependency array.",["490"],"React Hook useEffect has missing dependencies: 'filtersById' and 'orderBy'. Either include them or remove the dependency array.",["491"],"React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLengthDevelopment', 'limitStartDevelopment', 'orderByDevelopment', 'params.appraisalId', and 'params.employeeId'. Either include them or remove the dependency array.",["492"],"'textfelidStyle' is assigned a value but never used.","'deleteItemJobName' is assigned a value but never used.","'deleteItemId' is assigned a value but never used.","'applicationError' is defined but never used.","'setEmployeeDetails' is assigned a value but never used.","'jobHistoryData' is assigned a value but never used.","'setJobHistoryData' is assigned a value but never used.","'toDate' is assigned a value but never used.","'fromDate' is assigned a value but never used.",["493"],"'onchangeToDate' is assigned a value but never used.","'onchangeFromDate' is assigned a value but never used.","'useDispatch' is defined but never used.","'filtersById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByName' and 'roleType'. Either include them or remove the dependency array.",["494"],"'onChangeInput' is assigned a value but never used.","'DatePicker' is defined but never used.","'roleType' is assigned a value but never used.","'goalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["495"],"React Hook useEffect has missing dependencies: 'filtersByName', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["496"],"'setErrMsgGoalType' is assigned a value but never used.","'IDropdownOption' is defined but never used.",["497"],["498"],"'logout' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"505","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"510","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"525","fix":"527"},{"desc":"528","fix":"529"},"Update the dependencies array to be: [checkAccessToken, code, dispatch]",{"range":"530","text":"531"},"Update the dependencies array to be: [dispatch]",{"range":"532","text":"533"},"Update the dependencies array to be: [limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, roleType, dispatch, orderByField]",{"range":"534","text":"535"},"Update the dependencies array to be: [filtersById, limitPageLength, limitStart, orderBy, orderByField, roleType]",{"range":"536","text":"537"},"Update the dependencies array to be: [doctype, limit_start, limit, filterByStatus, roleType, filterByName, dispatch]",{"range":"538","text":"539"},{"range":"540","text":"537"},"Update the dependencies array to be: [filtersById, roleType]",{"range":"541","text":"542"},"Update the dependencies array to be: [doctype, limit_start, limit, roleType, filtersById, filtersByApprisal]",{"range":"543","text":"544"},"Update the dependencies array to be: [roleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",{"range":"545","text":"546"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",{"range":"547","text":"548"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]",{"range":"549","text":"550"},{"range":"551","text":"542"},"Update the dependencies array to be: [filtersByName, roleType]",{"range":"552","text":"553"},"Update the dependencies array to be: [filtersById, limitPageLength, limit_start, orderBy]",{"range":"554","text":"555"},"Update the dependencies array to be: [filtersByName, limitPageLength, limit_start, orderBy]",{"range":"556","text":"557"},{"range":"558","text":"557"},"Update the dependencies array to be: [dispatch, menuType]",{"range":"559","text":"560"},[2822,2824],"[checkAccessToken, code, dispatch]",[2440,2442],"[dispatch]",[3367,3548],"[limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, roleType, dispatch, orderByField]",[1577,1579],"[filtersById, limitPageLength, limitStart, orderBy, orderByField, roleType]",[2853,2922],"[doctype, limit_start, limit, filterByStatus, roleType, filterByName, dispatch]",[2717,2719],[1809,1811],"[filtersById, roleType]",[3914,3953],"[doctype, limit_start, limit, roleType, filtersById, filtersByApprisal]",[4269,4327],"[roleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",[5041,5078],"[limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",[5916,5953],"[limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]",[1924,1926],[1425,1427],"[filtersByName, roleType]",[2187,2189],"[filtersById, limitPageLength, limit_start, orderBy]",[1632,1634],"[filtersByName, limitPageLength, limit_start, orderBy]",[1169,1171],[1801,1811],"[dispatch, menuType]"]