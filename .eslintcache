[{"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx":"1","C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts":"2","C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx":"3","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx":"4","C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx":"5","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\sideBar.tsx":"6","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\custom.tsx":"7","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\auth.tsx":"8","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Login\\index.tsx":"9","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\JobHistoryDetails\\index.tsx":"10","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AppraisalDetail\\index.tsx":"11","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalDetails\\index.tsx":"12","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalSetting\\index.tsx":"13","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateJobHistory\\index.tsx":"14","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\JobHistory\\index.tsx":"15","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateGoals\\index.tsx":"16","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddGoals\\index.tsx":"17","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddAppraisal\\index.tsx":"18","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateAppraisal\\index.tsx":"19","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\MainHeader.tsx":"20","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Appraisal\\index.tsx":"21","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx":"22","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\EmployeeDetails\\index.tsx":"23","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\index.tsx":"24","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\apprisal.tsx":"25","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\employeeData.tsx":"26","C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx":"27","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\jobHistory.tsx":"28","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\goal.tsx":"29","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\roleType.tsx":"30","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\application.tsx":"31","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\apprisal.tsx":"32","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\userData.tsx":"33","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\roleType.tsx":"34","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\employeeList.tsx":"35","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\navigationData.tsx":"36","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx":"37","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\jobHistory.tsx":"38","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\menuType.tsx":"39","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\application.tsx":"40","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\auth.tsx":"41","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\developmentPlan.tsx":"42","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\navigation.tsx":"43","C:\\Users\\acer\\Documents\\mega-soft\\src\\Utils\\index.tsx":"44","C:\\Users\\acer\\Documents\\mega-soft\\src\\i18n.tsx":"45","C:\\Users\\acer\\Documents\\mega-soft\\src\\menuData.tsx":"46","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\ChanageColor\\index.tsx":"47","C:\\Users\\acer\\Documents\\mega-soft\\src\\Utils\\color.tsx":"48"},{"size":665,"mtime":1613382293081,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":6360,"mtime":1613626029851,"results":"52","hashOfConfig":"50"},{"size":212,"mtime":1611031594119,"results":"53","hashOfConfig":"50"},{"size":7407,"mtime":1613658517066,"results":"54","hashOfConfig":"50"},{"size":3188,"mtime":1612854212511,"results":"55","hashOfConfig":"50"},{"size":5133,"mtime":1613045021842,"results":"56","hashOfConfig":"50"},{"size":3530,"mtime":1612867356769,"results":"57","hashOfConfig":"50"},{"size":3927,"mtime":1612782972637,"results":"58","hashOfConfig":"50"},{"size":7120,"mtime":1613367762433,"results":"59","hashOfConfig":"50"},{"size":7197,"mtime":1613367270080,"results":"60","hashOfConfig":"50"},{"size":6891,"mtime":1612957821759,"results":"61","hashOfConfig":"50"},{"size":12319,"mtime":1613655427119,"results":"62","hashOfConfig":"50"},{"size":13294,"mtime":1613024308956,"results":"63","hashOfConfig":"50"},{"size":12765,"mtime":1613024187545,"results":"64","hashOfConfig":"50"},{"size":14809,"mtime":1613024258491,"results":"65","hashOfConfig":"50"},{"size":15467,"mtime":1613024145722,"results":"66","hashOfConfig":"50"},{"size":24224,"mtime":1613633052172,"results":"67","hashOfConfig":"50"},{"size":20911,"mtime":1613368818949,"results":"68","hashOfConfig":"50"},{"size":13094,"mtime":1613650022215,"results":"69","hashOfConfig":"50"},{"size":26854,"mtime":1613659327189,"results":"70","hashOfConfig":"50"},{"size":680,"mtime":1613379571993,"results":"71","hashOfConfig":"50"},{"size":43945,"mtime":1613655808001,"results":"72","hashOfConfig":"50"},{"size":17964,"mtime":1613655658749,"results":"73","hashOfConfig":"50"},{"size":6607,"mtime":1613644331502,"results":"74","hashOfConfig":"50"},{"size":2244,"mtime":1613644335997,"results":"75","hashOfConfig":"50"},{"size":2548,"mtime":1611747265015,"results":"76","hashOfConfig":"50"},{"size":4688,"mtime":1613386396101,"results":"77","hashOfConfig":"50"},{"size":3576,"mtime":1612867822771,"results":"78","hashOfConfig":"50"},{"size":499,"mtime":1613651637361,"results":"79","hashOfConfig":"50"},{"size":487,"mtime":1613627600047,"results":"80","hashOfConfig":"50"},{"size":1078,"mtime":1613038172357,"results":"81","hashOfConfig":"50"},{"size":468,"mtime":1611837747887,"results":"82","hashOfConfig":"50"},{"size":658,"mtime":1613654882015,"results":"83","hashOfConfig":"50"},{"size":812,"mtime":1611815621575,"results":"84","hashOfConfig":"50"},{"size":443,"mtime":1611820350797,"results":"85","hashOfConfig":"50"},{"size":832,"mtime":1611030790303,"results":"86","hashOfConfig":"50"},{"size":790,"mtime":1611916486585,"results":"87","hashOfConfig":"50"},{"size":447,"mtime":1612856508092,"results":"88","hashOfConfig":"50"},{"size":577,"mtime":1613627606920,"results":"89","hashOfConfig":"50"},{"size":614,"mtime":1612414011899,"results":"90","hashOfConfig":"50"},{"size":1719,"mtime":1612939602739,"results":"91","hashOfConfig":"50"},{"size":1479,"mtime":1612846278845,"results":"92","hashOfConfig":"50"},{"size":1178,"mtime":1613394959947,"results":"93","hashOfConfig":"50"},{"size":799,"mtime":1613541614786,"results":"94","hashOfConfig":"50"},{"size":563,"mtime":1613560992993,"results":"95","hashOfConfig":"50"},{"size":1023,"mtime":1613626592040,"results":"96","hashOfConfig":"50"},{"size":346,"mtime":1613630689993,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"1jqg13p",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"113","usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"101"},"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx",["216"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux\";\r\nimport i18n from \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["217","218"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx",["219","220","221","222","223","224","225"],"import React, { Suspense, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\nimport Appraisal from \"./Views/Appraisal\";\r\nimport AddAppraisal from \"./Views/AddAppraisal\";\r\nimport UpdateAppraisal from \"./Views/UpdateAppraisal\";\r\nimport AppraisalDetail from \"./Views/AppraisalDetail\";\r\nimport GoalSetting from \"./Views/GoalSetting\";\r\nimport EmployeeDetails from \"./Views/EmployeeDetails\";\r\nimport JobHistory from \"./Views/JobHistory\";\r\nimport UpdateJobHistory from \"./Views/UpdateJobHistory\";\r\nimport JobHistoryDetails from \"./Views/JobHistoryDetails\";\r\nimport AddGoals from \"./Views/AddGoals\";\r\nimport UpdateGoals from \"./Views/UpdateGoals\";\r\nimport GoalDetails from \"./Views/GoalDetails\";\r\nimport Login from \"./Views/Login\";\r\nimport ChanageColor from \"./components/ChanageColor\";\r\nimport { initSideBar } from \"./SideNavigation/sideBar\";\r\nimport { customSideBar } from \"./SideNavigation/custom\";\r\n\r\nimport $ from \"jquery\";\r\n\r\nimport { validateLogin, login } from \"./redux/actions/auth\";\r\n\r\nimport \"./App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"./redux/reducers\";\r\nimport roleType from \"./redux/reducers/roleType\";\r\n\r\nconst getQueryParms = () => {\r\n  const url = window.location.href;\r\n  const str = url;\r\n  const param = \"access_token=\";\r\n  let res = str.split(\"&\", 1);\r\n  let n = res[0].search(param);\r\n\r\n  if (n < 0) {\r\n    return;\r\n  }\r\n  n += param.length;\r\n  let access_token = res[0].substr(n);\r\n  return access_token;\r\n};\r\n\r\nfunction App(props: any) {\r\n  // console.log(\"props==>\", props.Auth.isLoggedIn);\r\n  // const getAccessToken = () => {\r\n  //   const url = window.location.href;\r\n  //   console.log(\"url ==\", url);\r\n  //   const str = url;\r\n  //   const param = \"access_token=\";\r\n  //   let res = str.split(\"&\", 1);\r\n  //   let n = res[0].search(param);\r\n\r\n  //   if (n < 0) {\r\n  //     return;\r\n  //   }\r\n  //   n += param.length;\r\n  //   let access_token = res[0].substr(n);\r\n  //   console.log(\"access_token on load==>\", access_token);\r\n  //   sessionStorage.setItem(\"access_token\", access_token);\r\n  // };\r\n  // useEffect(() => {\r\n  //   getAccessToken();\r\n  // }, []);\r\n  const hist = useHistory();\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state: RootState) => state.Auth);\r\n\r\n  // const msRoute = () => {\r\n  //   $(\"a.sidebar-link\").on(\"click\", function () {\r\n  //     const route = String($(this).attr(\"href\"));\r\n  //     console.log(\"Menu Option selected ==>\", route);\r\n  //     alert(route);\r\n  //     // React routing code:\r\n\r\n  //     hist.push(route);\r\n\r\n  //     return false;\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    initSideBar();\r\n    customSideBar();\r\n\r\n    dispatch(validateLogin());\r\n  }, []);\r\n\r\n  // sessionStorage.setItem(\"roleType\", \"Employee\");\r\n  // sessionStorage.setItem(\"menuType\", \"0\");\r\n\r\n  useEffect(() => {\r\n    // const stateValue = getQueryParms(\"state\");\r\n    // const sessionStateValue = getQueryParms(\"session_state\");\r\n    const access_token = getQueryParms();\r\n    // console.log(\"access_token main==>\", access_token);\r\n    // if (stateValue && sessionStateValue && access_token) {\r\n    //   dispatch(login(sessionStateValue, stateValue, access_token));\r\n    // }\r\n\r\n    if (access_token) {\r\n      dispatch(login(access_token));\r\n    }\r\n  }, []);\r\n\r\n  if (auth.isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <BrowserRouter>\r\n        {auth.isLoggedIn == true ? (\r\n          <Switch>\r\n            <div className=\"page-wrapper\">\r\n              <Navigation />\r\n              {/* <Route exact path=\"/\" component={Login} /> */}\r\n              <Route exact path=\"/home\" component={Appraisal} />\r\n              <Route exact path=\"/addApprisal\" component={AddAppraisal} />\r\n              {/* <Route exact path=\"/appraisal/add\" component={Form} /> */}\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/update/:appraisalId\"\r\n                component={UpdateAppraisal}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/view/:appraisalId\"\r\n                component={AppraisalDetail}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting\"\r\n                component={GoalSetting}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/:employeeId/:appraisalId\"\r\n                component={EmployeeDetails}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/addjobhistory/:employeeId/:appraisalId\"\r\n                component={JobHistory}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/jobhistory/updateJobHistory/:name\"\r\n                component={UpdateJobHistory}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/jobhistory/jobHistoryDetail/:name\"\r\n                component={JobHistoryDetails}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/addgoal/:employeeId/:appraisalId\"\r\n                component={AddGoals}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/goals/updategoal/:name\"\r\n                component={UpdateGoals}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appraisal/goalsetting/view/goal/goaldetail/:name\"\r\n                component={GoalDetails}\r\n              />\r\n              <Route exact path=\"/home/changecolor\" component={ChanageColor} />\r\n              <Route path=\"/*\" render={() => <Redirect to=\"/home\" />} />\r\n              <Route\r\n                path=\"/appraisal/goalsetting*\"\r\n                render={() => <Redirect to=\"/appraisal/goalsetting\" />}\r\n              />\r\n            </div>\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route path=\"/*\" render={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\sideBar.tsx",["247","248","249","250","251"],"/*\r\nTemplate Name: Admin Template\r\nAuthor: Wrappixel\r\n\r\nFile: js\r\n*/\r\n// ==============================================================\r\n// Auto select left navbar\r\n// ==============================================================\r\nimport $ from \"jquery\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/reducers\";\r\n\r\nexport const initSideBar = function () {\r\n  (\"use strict\");\r\n  var url = window.location + \"\";\r\n  var path = url.replace(\r\n    window.location.protocol + \"//\" + window.location.host + \"/\",\r\n    \"\"\r\n  );\r\n  var element = $(\"ul#sidebarnav a\").filter(function () {\r\n    // return this.href === url || this.href === path; // || url.href.indexOf(this.href) === 0;\r\n    return true;\r\n  });\r\n  element.parentsUntil(\".sidebar-nav\").each(function (index) {\r\n    if ($(this).is(\"li\") && $(this).children(\"a\").length !== 0) {\r\n      $(this).children(\"a\").addClass(\"active\");\r\n      $(this).parent(\"ul#sidebarnav\").length === 0\r\n        ? $(this).addClass(\"active\")\r\n        : $(this).addClass(\"selected\");\r\n    } else if (!$(this).is(\"ul\") && $(this).children(\"a\").length === 0) {\r\n      $(this).addClass(\"selected\");\r\n    } else if ($(this).is(\"ul\")) {\r\n      $(this).addClass(\"in\");\r\n    }\r\n  });\r\n\r\n  element.addClass(\"active\");\r\n  $(\"#sidebarnav a\").on(\"click\", function (e) {\r\n    // console.log(\"side nav clicked==>\");\r\n\r\n    if (!$(this).hasClass(\"active\")) {\r\n      // hide any open menus and remove all other classes\r\n      $(\"ul\", $(this).parents(\"ul:first\")).removeClass(\"in\");\r\n      $(\"a\", $(this).parents(\"ul:first\")).removeClass(\"active\");\r\n\r\n      // open our new menu and add the open class\r\n      $(this).next(\"ul\").addClass(\"in\");\r\n      $(this).addClass(\"active\");\r\n    } else if ($(this).hasClass(\"active\")) {\r\n      $(this).removeClass(\"active\");\r\n      $(this).parents(\"ul:first\").removeClass(\"active\");\r\n      $(this).next(\"ul\").removeClass(\"in\");\r\n    }\r\n  });\r\n  $(\"#sidebarnav >li >a.has-arrow\").on(\"click\", function (e) {\r\n    e.preventDefault();\r\n  });\r\n\r\n  // JQuery function\r\n  $(\".nav_employee\").show();\r\n  $(\".nav_manager\").hide();\r\n  $(\".nav_hr_contact\").hide();\r\n\r\n  $(\"#nav_employee\").click(function () {\r\n    $(\".nav_employee\").show();\r\n    $(\".nav_manager\").hide();\r\n    $(\".nav_hr_contact\").hide();\r\n\r\n    sessionStorage.setItem(\"roleType\", \"Employee\");\r\n\r\n    // $(\"#nav_employee\").addClass(\"active\");\r\n    // $(\"#nav_manager\").removeClass(\"active\");\r\n    // $(\"#nav_hr\").removeClass(\"active\");\r\n  });\r\n\r\n  $(\"#nav_manager\").click(function () {\r\n    $(\".nav_employee\").hide();\r\n    $(\".nav_manager\").show();\r\n    $(\".nav_hr_contact\").hide();\r\n    // $(\"#nav_manager\").addClass(\"active\");\r\n    // $(\"#nav_employee\").removeClass(\"active\");\r\n    // $(\"#nav_hr\").removeClass(\"active\");\r\n\r\n    sessionStorage.setItem(\"roleType\", \"Manager\");\r\n  });\r\n\r\n  $(\"#nav_hr_contact\").click(function () {\r\n    $(\".nav_employee\").hide();\r\n    $(\".nav_manager\").hide();\r\n    $(\".nav_hr_contact\").show();\r\n    // $(\"#nav_hr\").addClass(\"active\");\r\n    // $(\"#nav_employee\").removeClass(\"active\");\r\n    // $(\"#nav_manager\").removeClass(\"active\");\r\n\r\n    sessionStorage.setItem(\"roleType\", \"HR Contact\");\r\n  });\r\n};\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\custom.tsx",["252","253"],"import $ from \"jquery\";\r\n\r\nexport const customSideBar = function () {\r\n  (\"use strict\");\r\n  // console.log(\"inside customside bar==>\");\r\n\r\n  $(\".preloader\").fadeOut();\r\n  // ==============================================================\r\n  // Theme options\r\n  // ==============================================================\r\n  // ==============================================================\r\n  // sidebar-hover\r\n  // ==============================================================\r\n\r\n  $(\".left-sidebar\").hover(\r\n    function () {\r\n      $(\".navbar-header\").addClass(\"expand-logo\");\r\n    },\r\n    function () {\r\n      $(\".navbar-header\").removeClass(\"expand-logo\");\r\n    }\r\n  );\r\n  // this is for close icon when navigation open in mobile view\r\n  $(\".nav-toggler\").on(\"click\", function () {\r\n    $(\"#main-wrapper\").toggleClass(\"show-sidebar\");\r\n    $(\".nav-toggler i\").toggleClass(\"ti-menu\");\r\n  });\r\n  $(\".nav-lock\").on(\"click\", function () {\r\n    $(\"body\").toggleClass(\"lock-nav\");\r\n    $(\".nav-lock i\").toggleClass(\"mdi-toggle-switch-off\");\r\n    $(\"body, .page-wrapper\").trigger(\"resize\");\r\n  });\r\n  $(\".search-box a, .search-box .app-search .srh-btn\").on(\"click\", function () {\r\n    $(\".app-search\").toggle(200);\r\n    $(\".app-search input\").focus();\r\n  });\r\n\r\n  // ==============================================================\r\n  // Right sidebar options\r\n  // ==============================================================\r\n  // console.log(\"custom side bar2==>\");\r\n  $(function () {\r\n    $(\".service-panel-toggle\").on(\"click\", function () {\r\n      $(\".customizer\").toggleClass(\"show-service-panel\");\r\n    });\r\n    $(\".page-wrapper\").on(\"click\", function () {\r\n      $(\".customizer\").removeClass(\"show-service-panel\");\r\n    });\r\n  });\r\n  // ==============================================================\r\n  // This is for the floating labels\r\n  // ==============================================================\r\n  //   $(\".floating-labels .form-control\")\r\n  //     .on(\"focus blur\", function (e) {\r\n  //       $(this)\r\n  //         .parents(\".form-group\")\r\n  //         .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\r\n  //     })\r\n  //     .trigger(\"blur\");\r\n\r\n  // ==============================================================\r\n  //tooltip\r\n  // ==============================================================\r\n  //   $(function () {\r\n  //     $('[data-toggle=\"tooltip\"]').tooltip();\r\n  //   });\r\n  // ==============================================================\r\n  //Popover\r\n  // ==============================================================\r\n  //   $(function () {\r\n  //     $('[data-toggle=\"popover\"]').popover();\r\n  //   });\r\n\r\n  // ==============================================================\r\n  // Perfact scrollbar\r\n  // ==============================================================\r\n  //   $(\".message-center, .customizer-body, .scrollable\").perfectScrollbar({\r\n  //     wheelPropagation: !0,\r\n  //   });\r\n\r\n  /*var ps = new PerfectScrollbar('.message-body');\r\n      var ps = new PerfectScrollbar('.notifications');\r\n      var ps = new PerfectScrollbar('.scroll-sidebar');\r\n      var ps = new PerfectScrollbar('.customizer-body');*/\r\n\r\n  // ==============================================================\r\n  // Resize all elements\r\n  // ==============================================================\r\n  $(\"body, .page-wrapper\").trigger(\"resize\");\r\n  $(\".page-wrapper\").show();\r\n  // ==============================================================\r\n  // To do list\r\n  // ==============================================================\r\n  $(\".list-task li label\").click(function () {\r\n    $(this).toggleClass(\"task-done\");\r\n  });\r\n\r\n  //****************************\r\n  /* This is for the mini-sidebar if width is less then 1170*/\r\n  //****************************\r\n  // console.log(\"custom side bar3==>\");\r\n  var setsidebartype = function () {\r\n    // var width = (window.innerWidth > 0) ? window.innerWidth : this.screen.width;\r\n    // if (width < 1170) {\r\n    //     $(\"#main-wrapper\").attr(\"data-sidebartype\", \"mini-sidebar\");\r\n    // } else {\r\n    //     $(\"#main-wrapper\").attr(\"data-sidebartype\", \"full\");\r\n    // }\r\n  };\r\n  // $(window).ready(setsidebartype);\r\n  // $(window).on(\"resize\", setsidebartype);\r\n  //****************************\r\n  /* This is for sidebartoggler*/\r\n  //****************************\r\n  // var i = 0;\r\n  $(\".sidebartoggler\").on(\"click\", function () {\r\n    // console.log(\"Sidebar toggle inner function ==>\", i++);\r\n    $(\"#main-wrapper\").toggleClass(\"mini-sidebar\");\r\n    if ($(\"#main-wrapper\").hasClass(\"mini-sidebar\")) {\r\n      $(\".sidebartoggler\").prop(\"checked\", !0);\r\n      $(\"#main-wrapper\").attr(\"data-sidebartype\", \"mini-sidebar\");\r\n    } else {\r\n      $(\".sidebartoggler\").prop(\"checked\", !1);\r\n      $(\"#main-wrapper\").attr(\"data-sidebartype\", \"full\");\r\n    }\r\n  });\r\n\r\n  // Use react routes instead of href from the menu\r\n  // $(\"a.sidebar-link\").on(\"click\", function () {\r\n  //   const route = $(this).attr(\"href\");\r\n  //   // console.log(\"Menu Option selected ==>\", route);\r\n\r\n  //   // React routing code:\r\n\r\n  //   return false;\r\n  // });\r\n};\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\auth.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Login\\index.tsx",["254","255","256","257","258","259","260","261"],"import {\r\n  ITextFieldStyles,\r\n  PrimaryButton,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/auth\";\r\nimport logo_ms from \"../../assets/img/logo_ms.png\";\r\nimport banner_main from \"../../assets/img/megasoft_hrms.jpg\";\r\nimport \"./style.css\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      width: \"300px\",\r\n    },\r\n  };\r\n\r\n  // const handleLogin = () => {\r\n  //   login().then((response) => {\r\n  //     if (response.message == true) {\r\n  //       dispatch(auth('uayuyauyuyauyuay', {}));\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // const handleLogin = () => {\r\n  //    window.open( 'https://id.nuagebiz.tech/auth/realms/megasoft/protocol/openid-connect/auth?redirect_uri=http%3A%2F%2Flocalhost%3A3000&state=eyJzaXRlIjogImh0dHA6Ly81Mi4xNDYuMC4xNTQ6ODAwMSIsICJ0b2tlbiI6ICIzNWQxYTc3MDk4MGNiODY3Yzg2ZjM3ZTllNDlkYWM3YTc2MTM4Y2FhYzM4YTI2OTc3MTQzNDhjYiIsICJyZWRpcmVjdF90byI6IG51bGx9&scope=openid&response_type=code&client_id=ms-hrms')}\r\n  // };\r\n\r\n  return (\r\n    <div className=\"login-section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <div className=\"login-banner-image\">\r\n            <div className=\"login-banner-image-overlay\">\r\n              <div className=\"overlay-text-alignment\">\r\n                <div className=\"login-banner-text\">\r\n                  <h2>Making</h2>\r\n                  <p>\r\n                    Organizations Run Effectively By Providing Innovative HRMS\r\n                    Solutions Globally\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"text-right pt-3 pr-4\">\r\n            <img src={logo_ms} className=\"ms-logo-login\" />\r\n          </div>\r\n          <div className=\"login-form\">\r\n            <div className=\"login-form-center\">\r\n              <div\r\n                style={{\r\n                  marginTop: \"3rem\",\r\n                  justifyContent: \"center\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <PrimaryButton\r\n                  text=\"Proceed with Megasoft Login\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                  allowDisabledFocus\r\n                  onClick={() => {\r\n                    window.open(\r\n                      \"http://52.146.0.154/api/method/frappe.integrations.oauth2.authorize?client_id=3b9ea85aeb&state=12345&response_type=token&scope=all&redirect_uri=http://localhost:3000/home\",\r\n                      \"_self\"\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div\r\n        style={{\r\n          display: \"flex\",\r\n          padding: \"10px\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        <img src={logo_ms} className=\"ms-logo\" />\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: \"10rem\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <PrimaryButton\r\n          text=\"Login\"\r\n          style={{ marginTop: \"20px\" }}\r\n          allowDisabledFocus\r\n          onClick={() => {\r\n            window.open(\r\n              \"http://52.146.0.154/api/method/frappe.integrations.oauth2.authorize?client_id=3b9ea85aeb&state=12345&response_type=token&scope=all&redirect_uri=http://localhost:3000/home\",\r\n              \"_self\"\r\n            );\r\n          }}\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(Login);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\JobHistoryDetails\\index.tsx",["262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  add_JobHistory,\r\n  fetchJobHistory,\r\n  fetchJobHistoryByName,\r\n} from \"../../redux/actions/jobHistory\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  DatePicker,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport moment from \"moment\";\r\n\r\ninterface ParamTypes {\r\n  employeeId: string;\r\n  name: string;\r\n}\r\n\r\nfunction JobHistoryDetails(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.employeeId);\r\n  const [filtersByName] = useState(params.name);\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\r\n  const [jobHistoryData, setJobHistoryData] = useState({\r\n    position: \"\",\r\n    place: \"\",\r\n    responsibilities: \"\",\r\n    qualifications: \"\",\r\n  });\r\n  const [toDate, setToDate] = useState<Date | undefined>();\r\n  const [fromDate, setFromDate] = useState<Date | undefined>();\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersByName) {\r\n      filters.push([\"name\", \"=\", filtersByName]);\r\n    }\r\n    fetchJobHistoryByName(roleType, JSON.stringify(filters)).then(\r\n      (response) => {\r\n        setEmployeeDetails(response.data[0]);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   width: \"250px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setJobHistoryData({\r\n      ...jobHistoryData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onchangeToDate = (date: Date | null | undefined): void => {\r\n    setToDate(date || undefined);\r\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n  const onchangeFromDate = (date: Date | null | undefined): void => {\r\n    setFromDate(date || undefined);\r\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Job History\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n\r\n  const fromDateFormat = moment(employeeDetails.from_date).format(\"DD-MM-YYYY\");\r\n  const toDateFormat = moment(employeeDetails.to_date).format(\"DD-MM-YYYY\");\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"emp-details-section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <span>Position Held</span> : {employeeDetails.position_held}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <span>Place of Posting</span> : {employeeDetails.place_of_posting}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>From Date</span> : {fromDateFormat}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <span>To Date</span> : {toDateFormat}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Key Responsibilities</span> :{\" \"}\r\n              {employeeDetails.key_responsibilities}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <span>Qualifications</span> : {employeeDetails.qualifications}\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(JobHistoryDetails);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AppraisalDetail\\index.tsx",["284","285","286","287","288","289","290","291","292","293","294"],"import {\r\n  Checkbox,\r\n  DatePicker,\r\n  Dropdown,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  ITextFieldStyles,\r\n  Label,\r\n  mergeStyleSets,\r\n  PrimaryButton,\r\n  Separator,\r\n  Stack,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport { fetchAppraisalDataById } from \"../../redux/actions/apprisal\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport Header from \"../../Header\";\r\nimport moment from \"moment\";\r\n\r\ninterface ParamTypes {\r\n  appraisalId: string;\r\n}\r\n\r\nconst stackTokens = { childrenGap: 10 };\r\n\r\nfunction AppraisalDetail(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n\r\n  const [limitStart] = useState(0);\r\n  const [limitPageLength] = useState(5);\r\n  const [orderBy] = useState(\"asc\");\r\n  const [orderByField] = useState(\"id\");\r\n  const [filtersById] = useState(params.appraisalId);\r\n\r\n  const [appraisalDetail, setAppraisalDetail]: any = useState({});\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"id\", \"like\", filtersById]);\r\n    }\r\n    fetchAppraisalDataById(\r\n      limitStart,\r\n      limitPageLength,\r\n      `${orderByField} ${orderBy}`,\r\n      JSON.stringify(filters)\r\n    ).then((response) => {\r\n      setAppraisalDetail(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      marginTop: \"-1rem\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n\r\n  const _onBreadcrumbItemClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      isCurrentItem: true,\r\n      as: \"h4\",\r\n      onClick: _onBreadcrumbItemClicked,\r\n    },\r\n    { text: \"Appraisal Details\", key: \"d3\", as: \"h4\" },\r\n  ];\r\n\r\n  const reviewDate = moment(appraisalDetail.review_from).format(\"DD-MM-YYYY\");\r\n  const appraisalTo = moment(appraisalDetail.appraisal_to).format(\"DD-MM-YYYY\");\r\n\r\n  const renderData = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"emp-details-section\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <span>ID</span> : {appraisalDetail.id}\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <span>Description</span> :{\" \"}\r\n                {appraisalDetail.appraisal_description}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <span>Review From</span> : {reviewDate}\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <span>Appraisal To</span> : {appraisalTo}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <span>Review Frequency</span> :{\" \"}\r\n                {appraisalDetail.review_frequency}\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <span>Type</span> : {appraisalDetail.type}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <span>Format Type</span> : {appraisalDetail.format_type}\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <span>Owner</span> : {appraisalDetail.appraisal_owner}\r\n              </div>\r\n              {/* <div className=\"col-md-4\">\r\n                <span>Counter signing</span> :{\" \"}\r\n                {appraisalDetail.counter_signing_name}\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <Separator />\r\n          <div className=\"rowCheckBox\">\r\n            <div>\r\n              <Label>KRA/ Goal </Label>\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Job History\"}\r\n                title={\"Competencies\"}\r\n                checked={appraisalDetail.kra_settings_tab_competencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_competencies\"\r\n              />\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={appraisalDetail.kra_settings_tab_goals}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_goals\"\r\n              />\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Training/ Development Plan\"}\r\n                title={\"Development Plans\"}\r\n                checked={appraisalDetail.kra_settings_tab_development_plan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_development_plan\"\r\n              />\r\n              {/* <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={updateData.kra_settings_tab_summary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_summary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            ></div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Back\"\r\n                allowDisabledFocus\r\n                disabled={false}\r\n                onClick={() => {\r\n                  history.push(\"/home\");\r\n                }}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            \r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderData()} </div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(AppraisalDetail);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalDetails\\index.tsx",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  Dropdown,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport { fetchGoalData, fetchGoalDataName } from \"../../redux/actions/goal\";\r\n\r\ninterface ParamTypes {\r\n  employeeId: string;\r\n  name: string;\r\n}\r\n\r\nconst goalOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Goal\" },\r\n  { key: \"key2\", text: \"Sub-Goal\" },\r\n];\r\n\r\nfunction GoalDetails(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.employeeId);\r\n  const [filtersByName] = useState(params.name);\r\n  const [limitPageLength] = useState(5);\r\n  //   console.log(params.name);\r\n  const [limit_start] = useState(0);\r\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\r\n\r\n  const [goalDetails, setGoalDetails]: any = useState({});\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersByName) {\r\n      filters.push([\"name\", \"=\", filtersByName]);\r\n    }\r\n    fetchGoalDataName(\r\n      limit_start,\r\n      limitPageLength,\r\n      orderBy,\r\n      JSON.stringify(filters)\r\n    ).then((response) => {\r\n      // console.log(\"response of Goal===>\", response.data);\r\n      setGoalDetails(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setGoalDetails({\r\n      ...goalDetails,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Goals Details\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n\r\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\r\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\r\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\r\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\r\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\r\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"emp-details-section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <span>ID</span> : {params.name}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Order Number</span> : {goalDetails.order_no}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Goal Type</span> : {goalDetails.goal_type}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Parent Goal</span> : {goalDetails.parent_goal_id}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>KRA</span> : {goalDetails.kra}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Goal</span> : {goalDetails.goal}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Measure</span> : {goalDetails.measure}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Weightage</span> : {goalDetails.weightage}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Target</span> : {goalDetails.target}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <span>Threshold</span> : {goalDetails.threshold}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <span>Stretch</span> :{\" \"}\r\n              {/* {goalDetails.stretch == \"\" ? \"N/A\" : goalDetails.stretch} */}\r\n              {goalDetails.stretch}\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(GoalDetails);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalSetting\\index.tsx",["332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateJobHistory\\index.tsx",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  add_JobHistory,\r\n  fetchJobHistory,\r\n  update_JobHistory,\r\n} from \"../../redux/actions/jobHistory\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  DatePicker,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport moment from \"moment\";\r\n\r\ninterface ParamTypes {\r\n  name: string;\r\n}\r\n\r\nfunction UpdateJobHistory(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.name);\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\r\n  const [jobHistoryData, setJobHistoryData] = useState({\r\n    position: \"\",\r\n    place: \"\",\r\n    responsibilities: \"\",\r\n    qualifications: \"\",\r\n  });\r\n  const [toDate, setToDate] = useState<Date | undefined>();\r\n  const [fromDate, setFromDate] = useState<Date | undefined>();\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n  const [jobHistoryUpdateData, setJobHistoryUpdateData]: any = useState({});\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"name\", \"=\", filtersById]);\r\n    }\r\n    fetchJobHistory(roleType, JSON.stringify(filters)).then((response) => {\r\n      //   console.log(\"update response =>.>>>\", response.data);\r\n      setJobHistoryUpdateData(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   width: \"250px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setJobHistoryUpdateData({\r\n      ...jobHistoryUpdateData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onchangeToDate = (date: Date | null | undefined): void => {\r\n    setToDate(date || undefined);\r\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n  const onchangeFromDate = (date: Date | null | undefined): void => {\r\n    setFromDate(date || undefined);\r\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const jobHistoryClicked = () => {\r\n    history.goBack();\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Job History\", key: \"d4\", as: \"h4\", onClick: jobHistoryClicked },\r\n    { text: \"Update Job History\", key: \"d5\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n\r\n  const [errMsgResponsibility, setErrMsgResponsibility] = useState(\"\");\r\n  const [errMsgPlace, setErrMsgPlace] = useState(\"\");\r\n  const [errMsgPosition, setErrMsgPosition] = useState(\"\");\r\n  const [errMsgQualifications, setErrMsgQualifications] = useState(\"\");\r\n\r\n  const handleUpdateJobHistory = () => {\r\n    if (jobHistoryUpdateData.responsibilities === \"\") {\r\n      setErrMsgResponsibility(\"Key Responsibilities is required\");\r\n    }\r\n    if (jobHistoryUpdateData.place === \"\") {\r\n      setErrMsgPlace(\"Place of Posting is required\");\r\n    }\r\n    if (jobHistoryUpdateData.position === \"\") {\r\n      setErrMsgPosition(\"Position Held is required\");\r\n    }\r\n    if (jobHistoryUpdateData.qualifications === \"\") {\r\n      setErrMsgQualifications(\"Qualifications is required\");\r\n    }\r\n    const updateQuery = {\r\n      ...jobHistoryUpdateData,\r\n      from_date: moment(jobHistoryUpdateData.from_date).format(\"YYYY-MM-DD\"),\r\n      to_date: moment(jobHistoryUpdateData.to_date).format(\"YYYY-MM-DD\"),\r\n    };\r\n    update_JobHistory(updateQuery).then((response: any) => {\r\n      if (response.status === 200) {\r\n        setSuccessModal(true);\r\n      } else {\r\n        setFailedModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"form-conatiner\">\r\n        <div className=\"card jobHistory-details\">\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgPosition}\r\n            label=\"Position Held\"\r\n            value={jobHistoryUpdateData.position_held}\r\n            placeholder=\"Enter your job position\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"position_held\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgPlace}\r\n              label=\"Place of Posting\"\r\n              value={jobHistoryUpdateData.place_of_posting}\r\n              placeholder=\"Enter your place of posting\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"place_of_posting\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <DatePicker\r\n              isRequired={true}\r\n              label=\"From Date\"\r\n              placeholder=\"Select a date\"\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              value={new Date(jobHistoryUpdateData.from_date)}\r\n              onSelectDate={(date) =>\r\n                setJobHistoryUpdateData({\r\n                  ...jobHistoryUpdateData,\r\n                  from_date: date,\r\n                })\r\n              }\r\n              styles={datePickerStyle}\r\n              // textField={{ errorMessage: \"Form date is required\" }}\r\n            />\r\n            <DatePicker\r\n              isRequired={true}\r\n              label=\"To Date\"\r\n              placeholder=\"Select a date\"\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              value={new Date(jobHistoryUpdateData.to_date)}\r\n              onSelectDate={(date) =>\r\n                setJobHistoryUpdateData({\r\n                  ...jobHistoryUpdateData,\r\n                  to_date: date,\r\n                })\r\n              }\r\n              // textField={{ errorMessage = { errMsgPlace } }}\r\n              styles={datePickerStyle}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgResponsibility}\r\n            label=\"Key Responsibilities\"\r\n            value={jobHistoryUpdateData.key_responsibilities}\r\n            placeholder=\"Describe your key responsibilities\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"key_responsibilities\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgQualifications}\r\n            label=\"Qualifications\"\r\n            value={jobHistoryUpdateData.qualifications}\r\n            placeholder=\"Qualifications\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"qualifications\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Update\"\r\n                allowDisabledFocus\r\n                onClick={handleUpdateJobHistory}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Cancel\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            titleAriaId={\"Title\"}\r\n            isOpen={successModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Success</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setSuccessModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content-success\">\r\n              Job History updated successfully.{\" \"}\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"OK\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            titleAriaId={\"Title failed\"}\r\n            isOpen={failedModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Error</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              Somthing went wrong. Please try again.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"Go Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(UpdateJobHistory);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\JobHistory\\index.tsx",["365","366","367","368","369","370","371","372","373"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  add_JobHistory,\r\n  fetchJobHistory,\r\n} from \"../../redux/actions/jobHistory\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  DatePicker,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport moment from \"moment\";\r\n\r\ninterface ParamTypes {\r\n  employeeId: string;\r\n  appraisalId: string;\r\n}\r\n\r\nfunction JobHistory(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.employeeId);\r\n  const [appraisalId] = useState(params.appraisalId);\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\r\n  const [jobHistoryData, setJobHistoryData] = useState({\r\n    position: \"\",\r\n    place: \"\",\r\n    responsibilities: \"\",\r\n    qualifications: \"\",\r\n  });\r\n  const [toDate, setToDate] = useState<Date | undefined>();\r\n  const [fromDate, setFromDate] = useState<Date | undefined>();\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"employee_id\", \"=\", filtersById]);\r\n    }\r\n    fetchJobHistory(roleType, JSON.stringify(filters)).then((response) => {\r\n      setEmployeeDetails(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   width: \"250px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setJobHistoryData({\r\n      ...jobHistoryData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onchangeToDate = (date: Date | null | undefined): void => {\r\n    setToDate(date || undefined);\r\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n  const onchangeFromDate = (date: Date | null | undefined): void => {\r\n    setFromDate(date || undefined);\r\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Job History\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n\r\n  const [errMsgResponsibility, setErrMsgResponsibility] = useState(\"\");\r\n  const [errMsgPlace, setErrMsgPlace] = useState(\"\");\r\n  const [errMsgPosition, setErrMsgPosition] = useState(\"\");\r\n  const [errMsgQualifications, setErrMsgQualifications] = useState(\"\");\r\n\r\n  const handleAddJobHistory = () => {\r\n    if (jobHistoryData.responsibilities === \"\") {\r\n      setErrMsgResponsibility(\"Key Responsibilities is required\");\r\n    }\r\n    if (jobHistoryData.place === \"\") {\r\n      setErrMsgPlace(\"Place of posting is required\");\r\n    }\r\n    if (jobHistoryData.position === \"\") {\r\n      setErrMsgPosition(\"Position held is required\");\r\n    }\r\n    if (jobHistoryData.qualifications === \"\") {\r\n      setErrMsgQualifications(\"Qualifications is required\");\r\n    }\r\n    const addQuery = {\r\n      appraisal_id: appraisalId,\r\n      employee_id: filtersById,\r\n      key_responsibilities: jobHistoryData.responsibilities,\r\n      place_of_posting: jobHistoryData.place,\r\n      position_held: jobHistoryData.position,\r\n      qualifications: jobHistoryData.qualifications,\r\n      from_date: moment(fromDate).format(\"YYYY-MM-DD\"),\r\n      to_date: moment(toDate).format(\"YYYY-MM-DD\"),\r\n    };\r\n    add_JobHistory(addQuery).then((response: any) => {\r\n      if (response.status === 200) {\r\n        setSuccessModal(true);\r\n      } else {\r\n        setFailedModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"form-conatiner\">\r\n        <div className=\"jobHistory-details card\">\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgPosition}\r\n            label=\"Position Held\"\r\n            value={jobHistoryData.position}\r\n            placeholder=\"Enter your job position\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"position\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgPlace}\r\n              label=\"Place of Posting\"\r\n              value={jobHistoryData.place}\r\n              placeholder=\"Enter your place of posting\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"place\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <DatePicker\r\n              isRequired={true}\r\n              label=\"From Date\"\r\n              placeholder=\"Select a date\"\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              onSelectDate={onchangeFromDate}\r\n              value={fromDate}\r\n              styles={datePickerStyle}\r\n              // textField={{ errorMessage: \"Form date is required\" }}\r\n            />\r\n            <DatePicker\r\n              isRequired={true}\r\n              label=\"To Date\"\r\n              placeholder=\"Select a date\"\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              onSelectDate={onchangeToDate}\r\n              value={toDate}\r\n              // textField={{ errorMessage = { errMsgPlace } }}\r\n              styles={datePickerStyle}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgResponsibility}\r\n            label=\"Key Responsibilities\"\r\n            value={jobHistoryData.responsibilities}\r\n            placeholder=\"Describe your key responsibilities\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"responsibilities\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <TextField\r\n            required\r\n            errorMessage={errMsgQualifications}\r\n            label=\"Qualifications\"\r\n            value={jobHistoryData.qualifications}\r\n            placeholder=\"Qualifications\"\r\n            styles={textfelidStyle}\r\n            className=\"flexGrow w100\"\r\n            name=\"qualifications\"\r\n            onChange={onChangeInput}\r\n          />\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Add\"\r\n                allowDisabledFocus\r\n                onClick={handleAddJobHistory}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Cancel\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            titleAriaId={\"Title\"}\r\n            isOpen={successModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Success</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setSuccessModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content-success\">\r\n              Job History added successfully.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"OK\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            titleAriaId={\"Title failed\"}\r\n            isOpen={failedModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Error</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              Somthing went wrong. Please try again.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"Go Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(JobHistory);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateGoals\\index.tsx",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  Dropdown,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport {\r\n  fetchGoalData,\r\n  fetchGoalDataName,\r\n  update_goals,\r\n} from \"../../redux/actions/goal\";\r\n\r\ninterface ParamTypes {\r\n  employeeId: string;\r\n  name: string;\r\n}\r\n\r\nconst goalOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Goal\" },\r\n  { key: \"key2\", text: \"Sub-Goal\" },\r\n];\r\n\r\nfunction UpdateGoals(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.employeeId);\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  const [limitPageLength] = useState(5);\r\n  const [limit_start] = useState(0);\r\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\r\n  const [filtersByName] = useState(params.name);\r\n\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n  const [goalData, setGoalData]: any = useState({});\r\n  const [updateGoalData, setUpdateGoalData]: any = useState({});\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersByName) {\r\n      filters.push([\"name\", \"=\", filtersByName]);\r\n    }\r\n    fetchGoalDataName(\r\n      limit_start,\r\n      limitPageLength,\r\n      orderBy,\r\n      JSON.stringify(filters)\r\n    ).then((response: any) => {\r\n      console.log(\"response of Goal===>\", response.data);\r\n      setUpdateGoalData(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   width: \"250px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setUpdateGoalData({\r\n      ...updateGoalData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Update Goals\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n\r\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\r\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\r\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\r\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\r\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\r\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\r\n\r\n  const [goalType, setGoalType] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const onChangeGoalType = (\r\n    event?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setGoalType(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleUpdateGoal = () => {\r\n    // if (goalInputData.order_no === \"\") {\r\n    //   setErrMsgOrder(\"Order number is required\");\r\n    // }\r\n    // if (goalInputData.kra === \"\") {\r\n    //   setErrMsgKra(\"KRA is required\");\r\n    // }\r\n    // if (goalInputData.goal === \"\") {\r\n    //   setErrMsgGoal(\"Goal is required\");\r\n    // }\r\n    // if (goalInputData.measure === \"\") {\r\n    //   setErrMsgMeasure(\"Measure is required\");\r\n    // }\r\n    // if (goalInputData.weightage === \"\") {\r\n    //   setErrMsgWeightage(\"Weightage is required\");\r\n    // }\r\n    // if (goalType.text === \"\") {\r\n    //   setErrMsgGoalType(\"Select goal type\");\r\n    // }\r\n    const addQuery = {\r\n      ...updateGoalData,\r\n    };\r\n    update_goals(addQuery).then((response: any) => {\r\n      if (response.status === 200) {\r\n        setSuccessModal(true);\r\n      } else {\r\n        setFailedModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"form-conatiner\">\r\n        <div className=\"card\">\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              readOnly={true}\r\n              label=\"ID\"\r\n              value={params.name}\r\n              placeholder=\"Enter your job position\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrowTextInput\"\r\n              name=\"position\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgOrder}\r\n              label=\"Order Number\"\r\n              value={updateGoalData.order_no}\r\n              placeholder=\"Enter order number\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w25\"\r\n              name=\"order_no\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <Dropdown\r\n              required\r\n              errorMessage={errMsgGoalType}\r\n              label=\"Goal Type\"\r\n              placeholder=\"Select goal type\"\r\n              className=\"flexGrow w25\"\r\n              selectedKey={\r\n                goalOptions.find(\r\n                  (item) => item.text === updateGoalData.goal_type\r\n                )?.key\r\n              }\r\n              onChange={(ev, item) =>\r\n                setUpdateGoalData({\r\n                  ...updateGoalData,\r\n                  goal_type: item?.text,\r\n                })\r\n              }\r\n              options={goalOptions}\r\n              // styles={dropdownStyles}\r\n            />\r\n            <TextField\r\n              disabled={updateGoalData.goal_type === \"Goal\" ? true : false}\r\n              label=\"Parent Goal\"\r\n              value={updateGoalData.parent_goal_id}\r\n              placeholder=\"Enter KRA\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w25\"\r\n              name=\"parent_goal_id\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\"></div>\r\n          <div>\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgKra}\r\n              label=\"KRA\"\r\n              value={updateGoalData.kra}\r\n              placeholder=\"Enter KRA\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w100\"\r\n              name=\"kra\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <div className=\"goal-details\"></div>\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgGoal}\r\n              label=\"Goal\"\r\n              value={updateGoalData.goal}\r\n              placeholder=\"Enter Goal\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w100\"\r\n              name=\"goal\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgMeasure}\r\n              label=\"Measure\"\r\n              value={updateGoalData.measure}\r\n              placeholder=\"Enter Measure\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w50\"\r\n              name=\"measure\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgWeightage}\r\n              label=\"Weightage\"\r\n              value={updateGoalData.weightage}\r\n              placeholder=\"Enter Weightage\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w50\"\r\n              name=\"weightage\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              label=\"Target\"\r\n              value={updateGoalData.target}\r\n              placeholder=\"Enter Target\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"target\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              label=\"Threshold\"\r\n              value={updateGoalData.threshold}\r\n              placeholder=\"Enter Threshold\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"threshold\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              label=\"Stretch\"\r\n              value={updateGoalData.stretch}\r\n              placeholder=\"Enter Stretch\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"stretch\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Update\"\r\n                allowDisabledFocus\r\n                onClick={handleUpdateGoal}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Cancel\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            titleAriaId={\"Title\"}\r\n            isOpen={successModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Success</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setSuccessModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content-success\">\r\n              Goal updated successfully.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"OK\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            titleAriaId={\"Title failed\"}\r\n            isOpen={failedModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Error</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              Somthing went wrong. Please try again.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"Go Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(UpdateGoals);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddGoals\\index.tsx",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport Header from \"../../Header\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  add_JobHistory,\r\n  fetchJobHistory,\r\n} from \"../../redux/actions/jobHistory\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport {\r\n  DatePicker,\r\n  Dropdown,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IIconProps,\r\n  IModalStyles,\r\n  ITextFieldStyles,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport moment from \"moment\";\r\nimport { add_goals, fetchGoalData } from \"../../redux/actions/goal\";\r\n\r\ninterface ParamTypes {\r\n  employeeId: string;\r\n  appraisalId: string;\r\n}\r\n\r\nconst goalOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Goal\" },\r\n  { key: \"key2\", text: \"Sub-Goal\" },\r\n];\r\n\r\nfunction AddGoals(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const [filtersById] = useState(params.employeeId);\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  const [limitPageLength] = useState(5);\r\n  const [limit_start] = useState(0);\r\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\r\n  const [goalInputData, setGoalInputData] = useState({\r\n    goal: \"\",\r\n    goal_type: \"\",\r\n    kra: \"\",\r\n    measure: \"\",\r\n    order_no: \"\",\r\n    parent_goal_id: \"\",\r\n    stretch: \"\",\r\n    target: \"\",\r\n    threshold: \"\",\r\n    weightage: \"\",\r\n  });\r\n  const [toDate, setToDate] = useState<Date | undefined>();\r\n  const [fromDate, setFromDate] = useState<Date | undefined>();\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n  const [goalData, setGoalData]: any = useState({});\r\n\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"employee_id\", \"=\", filtersById]);\r\n    }\r\n    fetchGoalData(\r\n      limit_start,\r\n      limitPageLength,\r\n      orderBy,\r\n      JSON.stringify(filters)\r\n    ).then((response) => {\r\n      // console.log(\"response of Goal===>\", response);\r\n      setGoalData(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   width: \"250px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      //   width: \"50px\",\r\n    },\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setGoalInputData({\r\n      ...goalInputData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onchangeToDate = (date: Date | null | undefined): void => {\r\n    setToDate(date || undefined);\r\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n  const onchangeFromDate = (date: Date | null | undefined): void => {\r\n    setFromDate(date || undefined);\r\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  const history = useHistory();\r\n  const onBreadcrumbAppraisalClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const onBreadcrumbGoalsettingClicked = () => {\r\n    history.push(\"/appraisal/goalsetting\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbAppraisalClicked,\r\n    },\r\n    {\r\n      text: \"Goal Setting\",\r\n      key: \"d3\",\r\n      as: \"h4\",\r\n      onClick: onBreadcrumbGoalsettingClicked,\r\n    },\r\n    { text: \"Add Goals\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n\r\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\r\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\r\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\r\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\r\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\r\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\r\n\r\n  const [goalType, setGoalType] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const onChangeGoalType = (\r\n    event?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setGoalType(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleAddJobHistory = () => {\r\n    if (goalInputData.order_no === \"\") {\r\n      setErrMsgOrder(\"Order number is required\");\r\n    }\r\n    if (goalInputData.kra === \"\") {\r\n      setErrMsgKra(\"KRA is required\");\r\n    }\r\n    if (goalInputData.goal === \"\") {\r\n      setErrMsgGoal(\"Goal is required\");\r\n    }\r\n    if (goalInputData.measure === \"\") {\r\n      setErrMsgMeasure(\"Measure is required\");\r\n    }\r\n    if (goalInputData.weightage === \"\") {\r\n      setErrMsgWeightage(\"Weightage is required\");\r\n    }\r\n    if (goalType.text === \"\") {\r\n      setErrMsgGoalType(\"Select goal type\");\r\n    }\r\n    const addQuery = {\r\n      appraisal_id: params.appraisalId,\r\n      employee_id: params.employeeId,\r\n      goal_type: goalType.text,\r\n      goal: goalInputData.goal,\r\n      kra: goalInputData.kra,\r\n      order_no: goalInputData.order_no,\r\n      measure: goalInputData.measure,\r\n      parent_goal_id: goalInputData.parent_goal_id,\r\n      stretch: goalInputData.stretch,\r\n      target: goalInputData.target,\r\n      threshold: goalInputData.threshold,\r\n      weightage: goalInputData.weightage,\r\n    };\r\n    add_goals(addQuery).then((response: any) => {\r\n      if (response.status === 200) {\r\n        setSuccessModal(true);\r\n      } else {\r\n        setFailedModal(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const stackTokens = { childrenGap: 10 };\r\n  const renderJobHistoryForm = () => {\r\n    return (\r\n      <div className=\"form-conatiner\">\r\n        <div className=\"card\">\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              disabled={true}\r\n              label=\"ID\"\r\n              // value={goalData.name}\r\n              placeholder=\"New\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrowTextInput\"\r\n              name=\"position\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgOrder}\r\n              label=\"Order Number\"\r\n              value={goalInputData.order_no}\r\n              placeholder=\"Enter order number\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w25\"\r\n              name=\"order_no\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <Dropdown\r\n              required\r\n              errorMessage={errMsgGoalType}\r\n              label=\"Goal Type\"\r\n              placeholder=\"Select goal type\"\r\n              className=\"flexGrow w25\"\r\n              onChange={onChangeGoalType}\r\n              options={goalOptions}\r\n              // styles={dropdownStyles}\r\n            />\r\n            <TextField\r\n              disabled={goalType.text === \"Goal\" ? true : false}\r\n              label=\"Parent Goal\"\r\n              value={goalInputData.parent_goal_id}\r\n              placeholder=\"Enter parent goal ID \"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w25\"\r\n              name=\"parent_goal_id\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgKra}\r\n              label=\"KRA\"\r\n              value={goalInputData.kra}\r\n              placeholder=\"Enter KRA\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w100\"\r\n              name=\"kra\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgGoal}\r\n              label=\"Goal\"\r\n              value={goalInputData.goal}\r\n              placeholder=\"Enter Goal\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w100\"\r\n              name=\"goal\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgMeasure}\r\n              label=\"Measure\"\r\n              value={goalInputData.measure}\r\n              placeholder=\"Enter Measure\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w50\"\r\n              name=\"measure\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              required\r\n              errorMessage={errMsgWeightage}\r\n              label=\"Weightage\"\r\n              value={goalInputData.weightage}\r\n              placeholder=\"Enter Weightage\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w50\"\r\n              name=\"weightage\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              label=\"Target\"\r\n              value={goalInputData.target}\r\n              placeholder=\"Enter Target\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"target\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              label=\"Threshold\"\r\n              value={goalInputData.threshold}\r\n              placeholder=\"Enter Threshold\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"threshold\"\r\n              onChange={onChangeInput}\r\n            />\r\n            <TextField\r\n              label=\"Stretch\"\r\n              value={goalInputData.stretch}\r\n              placeholder=\"Enter Stretch\"\r\n              styles={textfelidStyle}\r\n              className=\"flexGrow w33\"\r\n              name=\"stretch\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Add\"\r\n                allowDisabledFocus\r\n                onClick={handleAddJobHistory}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Cancel\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            titleAriaId={\"Title\"}\r\n            isOpen={successModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Success</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setSuccessModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content-success\">\r\n              Goal added successfully.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"OK\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            titleAriaId={\"Title failed\"}\r\n            isOpen={failedModal}\r\n            isBlocking={false}\r\n            styles={modalStyle}\r\n            // containerClassName={contentStyles.container}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">Error</div>\r\n              <IconButton\r\n                styles={iconButtonStyles}\r\n                iconProps={cancelIcon}\r\n                ariaLabel=\"Close popup modal\"\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              Somthing went wrong. Please try again.\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <PrimaryButton\r\n                text=\"Go Back\"\r\n                allowDisabledFocus\r\n                onClick={() => {\r\n                  setFailedModal(false);\r\n                }}\r\n                disabled={false}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(AddGoals);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddAppraisal\\index.tsx",["419","420","421","422","423","424","425","426","427","428","429","430","431"],"import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react/lib/TextField\";\r\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\r\nimport \"./style.css\";\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  Dropdown,\r\n  getColorFromString,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IColor,\r\n  IColorPickerProps,\r\n  IconButton,\r\n  IDatePickerStrings,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  IIconProps,\r\n  IModalStyles,\r\n  Label,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  ColorPicker,\r\n  Separator,\r\n} from \"office-ui-fabric-react\";\r\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport Header from \"../../Header\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport \"./style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { add_apprisal } from \"../../redux/actions/apprisal\";\r\n\r\nconst formateTypeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Sales Employees\" },\r\n  { key: \"key3\", text: \"Non Sales Employees\" },\r\n  // { key: \"key4\", text: \"Management\" },\r\n];\r\n\r\nconst reviewFrequencyOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Monthly\" },\r\n  { key: \"key2\", text: \"Yearly\" },\r\n];\r\n\r\nconst typeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Annual Appraisal\" },\r\n  { key: \"key2\", text: \"Confirmation Appraisal\" },\r\n];\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n  dropdown: {\r\n    width: 170,\r\n    border: \"0px\",\r\n  },\r\n};\r\n\r\n// interface ParamTypes {\r\n//   id: string\r\n// }\r\n\r\nconst white = getColorFromString(\"#006994\")!;\r\n\r\nfunction AddAppraisal(props: any) {\r\n  const { t, i18n } = useTranslation();\r\n  // const params = useParams<ParamTypes>();\r\n  // console.log(\"id => \", params.id);\r\n  const stackTokens = { childrenGap: 10 };\r\n  const [color, setColor] = useState(white);\r\n\r\n  // const updateColor = React.useCallback(\r\n  //   (ev: any, colorObj: IColor) => setColor(colorObj),\r\n  //   []\r\n  // );\r\n\r\n  const updateColor = (ev: any, colorObj: IColor) => {\r\n    setColor(colorObj);\r\n  };\r\n\r\n  const [showPreview, setShowPreview] = useState(true);\r\n  const [alphaType, setAlphaType] = React.useState<\r\n    IColorPickerProps[\"alphaType\"]\r\n  >(\"alpha\");\r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n\r\n    shortMonths: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n\r\n    days: [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ],\r\n\r\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n\r\n    goToToday: \"Go to today\",\r\n    prevMonthAriaLabel: \"Go to previous month\",\r\n    nextMonthAriaLabel: \"Go to next month\",\r\n    prevYearAriaLabel: \"Go to previous year\",\r\n    nextYearAriaLabel: \"Go to next year\",\r\n    closeButtonAriaLabel: \"Close date picker\",\r\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\r\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\r\n  };\r\n  const DayPickerStringsAppraisal: IDatePickerStrings = {\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n\r\n    shortMonths: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n\r\n    days: [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ],\r\n\r\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n\r\n    goToToday: \"Go to today\",\r\n    prevMonthAriaLabel: \"Go to previous month\",\r\n    nextMonthAriaLabel: \"Go to next month\",\r\n    prevYearAriaLabel: \"Go to previous year\",\r\n    nextYearAriaLabel: \"Go to next year\",\r\n    closeButtonAriaLabel: \"Close date picker\",\r\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\r\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const [firstDayOfWeek] = React.useState(DayOfWeek.Sunday);\r\n  const [firstDayOfWeekAppraisal] = React.useState(DayOfWeek.Sunday);\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    icon: {\r\n      color: \"#344f84\",\r\n    },\r\n  };\r\n\r\n  const [claimsData, setClaimsData] = useState({\r\n    id: \"\",\r\n    description: \"\",\r\n    owner: \"\",\r\n    kraSettingGoal: false,\r\n    kraSettingCompetencies: false,\r\n    kraSettingDevelopmentPlan: false,\r\n    kraSettingSummary: false,\r\n    assessmentGoal: false,\r\n    assessmentCompetencies: false,\r\n    assessmentDevelopmentPlan: false,\r\n    assessmentSummary: false,\r\n  });\r\n\r\n  const [selectedType, setSelectedType] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const [reviewFrequency, setReviewFrequency] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const [formateType, setFormateType] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  function onChangeCheckbox(\r\n    ev?: React.FormEvent<HTMLElement>,\r\n    isChecked?: boolean\r\n  ) {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setClaimsData({\r\n      ...claimsData,\r\n      [target.name]: isChecked || false,\r\n    });\r\n  }\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setClaimsData({\r\n      ...claimsData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onChangeType = (\r\n    ev?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setSelectedType(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n  // console.log(\"type==>\", selectedType.text )\r\n\r\n  const onChangeReviewFrequency = (\r\n    event?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setReviewFrequency(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const onChangeFormateType = (\r\n    event?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setFormateType(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const _onBreadcrumbItemClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: i18n.t(\"breadcrumb_itmes.performance\"), key: \"d1\" },\r\n    {\r\n      text: i18n.t(\"breadcrumb_itmes.appraisal\"),\r\n      key: \"d2\",\r\n      isCurrentItem: true,\r\n      as: \"h4\",\r\n      onClick: _onBreadcrumbItemClicked,\r\n    },\r\n    { text: i18n.t(\"breadcrumb_itmes.add_appraisal\"), key: \"d3\", as: \"h4\" },\r\n  ];\r\n\r\n  const [dateReview, setDateReview] = useState<Date | undefined>();\r\n  const [dateAppraisal, setdDateAppraisal] = useState<Date | undefined>();\r\n\r\n  const reviewFromDate = (date: Date | null | undefined): void => {\r\n    setDateReview(date || undefined);\r\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n  const appraisalToDate = (date: Date | null | undefined): void => {\r\n    setdDateAppraisal(date || undefined);\r\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      marginTop: \"-1rem\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n\r\n  // // const rolesOption: IDropdownOption[] = [\r\n  // //   { key: \"employee\", text: \"Employee\" },\r\n  // //   { key: \"manager\", text: \"Manager\" },\r\n  // //   { key: \"hrContent\", text: \"HR content\" },\r\n  // // ];\r\n\r\n  // const [roles, setRoles] = useState<IDropdownOption>({\r\n  //   key: \"employee\",\r\n  //   text: \"\",\r\n  // });\r\n\r\n  // const handleRoles = (\r\n  //   ev?: React.FormEvent<HTMLDivElement>,\r\n  //   item?: IDropdownOption\r\n  // ): void => {\r\n  //   setRoles(\r\n  //     item || {\r\n  //       key: \"\",\r\n  //       text: \"\",\r\n  //     }\r\n  //   );\r\n  // };\r\n  // const dispatch = useDispatch();\r\n\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [errMsgDescription, setErrMsgDescription] = useState(\"\");\r\n  const [errMsgOwner, setErrMsgOwner] = useState(\"\");\r\n  const [errMsgFormatType, setErrMsgFormatType] = useState(\"\");\r\n  const [errMsgType, setErrMsgType] = useState(\"\");\r\n  const [errMsgReviewFrequency, setErrMsgReviewFrequency] = useState(\"\");\r\n  const [errMsgReviewDate, setErrMsgReviewDate] = useState(\"\");\r\n  const [errMsgAppraisalDate, setErrMsgAppraisalDate] = useState(\"\");\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const handleAddApprisal = () => {\r\n    let pattern = /^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$/;\r\n    if (claimsData.id === \"\" || claimsData.id.length > 5) {\r\n      setErrMsg(i18n.t(\"errorMsg.please_enter_id\"));\r\n    }\r\n    if (claimsData.description === \"\") {\r\n      setErrMsgDescription(i18n.t(\"errorMsg.please_enter_description\"));\r\n    }\r\n    if (!pattern.test(claimsData.owner)) {\r\n      setErrMsgOwner(\"Please give currect pattern \");\r\n    }\r\n    if (claimsData.owner === \"\") {\r\n      setErrMsgOwner(i18n.t(\"errorMsg.please_enter_owner_name\"));\r\n    }\r\n    if (formateType.text === \"\") {\r\n      setErrMsgFormatType(\"Select format Type\");\r\n    }\r\n    if (reviewFrequency.text === \"\") {\r\n      setErrMsgReviewFrequency(\"Select review Frequency\");\r\n    }\r\n    if (selectedType.text === \"\") {\r\n      setErrMsgType(\"Select type\");\r\n    }\r\n    if (dateReview === null) {\r\n      setErrMsgReviewDate(\"Select review date\");\r\n    }\r\n    const addQuery = {\r\n      id: claimsData.id,\r\n      appraisal_description: claimsData.description,\r\n      description: \"22\",\r\n      format_type: formateType.text,\r\n      review_frequency: reviewFrequency.text,\r\n      type: selectedType.text,\r\n      kra_settings_tab_goals: claimsData.kraSettingGoal,\r\n      kra_settings_tab_competencies: claimsData.kraSettingCompetencies,\r\n      kra_settings_tab_development_plan: claimsData.kraSettingDevelopmentPlan,\r\n      kra_settings_tab_summary: claimsData.kraSettingSummary,\r\n      assessment_tab_goals: claimsData.assessmentGoal,\r\n      assessment_tab_competencies: claimsData.assessmentCompetencies,\r\n      assessment_tab_development_plan: claimsData.assessmentCompetencies,\r\n      assessment_tab_summary: claimsData.assessmentSummary,\r\n      route: \"appraisal/BB00002\",\r\n      review_from: moment(dateReview).format(\"YYYY-MM-DD\"),\r\n      appraisal_to: moment(dateAppraisal).format(\"YYYY-MM-DD\"),\r\n      appraisal_owner: claimsData.owner,\r\n    };\r\n    // console.log(\"addQueary=>\", addQuery);\r\n    add_apprisal(addQuery).then((response) => {\r\n      // console.log(\"response=>\", response.data);\r\n      if (response?.status === 200) {\r\n        setSuccessModal(true);\r\n        // history.push(\"/home\");\r\n      } else {\r\n        // console.log(\"failed==>\", failedModal);\r\n        setFailedModal(true);\r\n      }\r\n\r\n      // else {\r\n      //   console.log(\"then error msg btnClick==>\", response);\r\n      // }\r\n    });\r\n    // .catch((err) => {\r\n    //   console.log(\"Error in btnClick=>\", err);\r\n    // });\r\n  };\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <ColorPicker\r\n          color={color}\r\n          onChange={updateColor}\r\n          alphaType={alphaType}\r\n          showPreview={showPreview}\r\n          // styles={colorPickerStyles}\r\n        /> */}\r\n        <div className=\"form-container card\">\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              required\r\n              placeholder={t(\"placeholder.id\")}\r\n              value={claimsData.id}\r\n              errorMessage={errMsg}\r\n              name=\"id\"\r\n              label={t(\"form.ID\")}\r\n              onChange={onChangeInput}\r\n              className=\"flexGrowTextInput\"\r\n            />\r\n            <TextField\r\n              required\r\n              placeholder={t(\"placeholder.description\")}\r\n              label={t(\"form.Description\")}\r\n              value={claimsData.description}\r\n              errorMessage={errMsgDescription}\r\n              // styles={textfelidStyle}\r\n              className=\"flexGrow\"\r\n              name=\"description\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          {/* <div className=\"input-form\"></div> */}\r\n          <div className=\"goal-details\">\r\n            <DatePicker\r\n              isRequired={true}\r\n              label={t(\"form.Review_From\")}\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              firstDayOfWeek={firstDayOfWeek}\r\n              strings={DayPickerStrings}\r\n              value={dateReview}\r\n              onSelectDate={reviewFromDate}\r\n              placeholder={t(\"placeholder.select_a_date\")}\r\n              ariaLabel=\"Select a date\"\r\n              styles={datePickerStyle}\r\n            />\r\n            <DatePicker\r\n              isRequired={true}\r\n              label={t(\"form.Appraisal_To\")}\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              firstDayOfWeek={firstDayOfWeekAppraisal}\r\n              strings={DayPickerStringsAppraisal}\r\n              onSelectDate={appraisalToDate}\r\n              styles={datePickerStyle}\r\n              value={dateAppraisal}\r\n              placeholder={t(\"placeholder.select_a_date\")}\r\n              ariaLabel=\"Select a date\"\r\n            />\r\n            <Dropdown\r\n              required\r\n              errorMessage={errMsgReviewFrequency}\r\n              label={t(\"form.Review_Frequency\")}\r\n              placeholder={t(\"placeholder.select\")}\r\n              className=\"flexGrow w33\"\r\n              onChange={onChangeReviewFrequency}\r\n              options={reviewFrequencyOptions}\r\n              // styles={dropdownStyles}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"goal-details\">\r\n            <Dropdown\r\n              required\r\n              label={t(\"form.Type\")}\r\n              errorMessage={errMsgType}\r\n              placeholder={t(\"placeholder.select_type\")}\r\n              className=\"flexGrow w33\"\r\n              options={typeOptions}\r\n              onChange={onChangeType}\r\n              // styles={typeDropdownStyles}\r\n            />\r\n            <Dropdown\r\n              required\r\n              label={t(\"form.Format_Type\")}\r\n              errorMessage={errMsgFormatType}\r\n              className=\"flexGrow w33\"\r\n              onChange={onChangeFormateType}\r\n              placeholder={t(\"placeholder.select_format_type\")}\r\n              options={formateTypeOptions}\r\n              // styles={typeDropdownStyles}\r\n            />\r\n            <TextField\r\n              required\r\n              label={t(\"form.Owner\")}\r\n              placeholder={t(\"placeholder.owner\")}\r\n              pattern={\"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"}\r\n              // onGetErrorMessage={(v) =>\r\n              //   new RegExp(\r\n              //     \"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"\r\n              //   ).test(v)\r\n              //     ? \"\"\r\n              //     : \"Please give currect pattern\"\r\n              // }\r\n              value={claimsData.owner}\r\n              className=\"flexGrow w33\"\r\n              // styles={textfelidStyle}\r\n              errorMessage={errMsgOwner}\r\n              name=\"owner\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <Separator />\r\n          <div className=\"rowCheckBox\">\r\n            <div>\r\n              <Label>{t(\"form.KRA_Settings_Tabs\")} </Label>\r\n              <Checkbox\r\n                label={t(\"job_history\")}\r\n                title={\"Competencies\"}\r\n                checked={claimsData.kraSettingCompetencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kraSettingCompetencies\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={t(\"goals\")}\r\n                title={\"Goals\"}\r\n                checked={claimsData.kraSettingGoal}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kraSettingGoal\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={t(\"training_and_development\")}\r\n                title={\"Development Plans\"}\r\n                checked={claimsData.kraSettingDevelopmentPlan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kraSettingDevelopmentPlan\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              {/* <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={claimsData.kraSettingSummary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kraSettingSummary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              {/* <Label>Assessment Tabs: </Label>\r\n              <Checkbox\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={claimsData.assessmentGoal}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessmentGoal\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Competencies\"}\r\n                title={\"Competencies\"}\r\n                checked={claimsData.assessmentCompetencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessmentCompetencies\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Development Plans\"}\r\n                title={\"Development Plans\"}\r\n                checked={claimsData.assessmentDevelopmentPlan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessmentSummary\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={claimsData.assessmentSummary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessmentSummary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              <Modal\r\n                titleAriaId={\"Title\"}\r\n                isOpen={successModal}\r\n                isBlocking={false}\r\n                styles={modalStyle}\r\n                // containerClassName={contentStyles.container}\r\n              >\r\n                <div className=\"modal-header-local\">\r\n                  <div className=\"modal-title\">\r\n                    {t(\"success_popup.heading\")}\r\n                  </div>\r\n                  <IconButton\r\n                    styles={iconButtonStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close popup modal\"\r\n                    onClick={() => {\r\n                      setSuccessModal(false);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-content-success\">\r\n                  {t(\"success_popup.appraisal_success\")}\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <PrimaryButton\r\n                    text={t(\"buttons.ok\")}\r\n                    allowDisabledFocus\r\n                    onClick={() => {\r\n                      history.push(\"/home\");\r\n                    }}\r\n                    disabled={false}\r\n                    checked={false}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n              <Modal\r\n                titleAriaId={\"Title failed\"}\r\n                isOpen={failedModal}\r\n                isBlocking={false}\r\n                styles={modalStyle}\r\n                // containerClassName={contentStyles.container}\r\n              >\r\n                <div className=\"modal-header-local\">\r\n                  <div className=\"modal-title\">{t(\"delete_popup.heading\")}</div>\r\n                  <IconButton\r\n                    styles={iconButtonStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close popup modal\"\r\n                    onClick={() => {\r\n                      setFailedModal(false);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-content\">{t(\"delete_popup.message\")}</div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <PrimaryButton\r\n                    text={t(\"buttons.go_back\")}\r\n                    allowDisabledFocus\r\n                    onClick={() => {\r\n                      setFailedModal(false);\r\n                    }}\r\n                    disabled={false}\r\n                    checked={false}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\", marginBottom: \"1rem\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text={t(\"buttons.add\")}\r\n                allowDisabledFocus\r\n                style={{ backgroundColor: color.str }}\r\n                onClick={handleAddApprisal}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text={t(\"buttons.cancel\")}\r\n                allowDisabledFocus\r\n                disabled={false}\r\n                onClick={() => {\r\n                  history.push(\"/home\");\r\n                }}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(AddAppraisal);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateAppraisal\\index.tsx",["432","433","434","435","436","437","438","439","440","441","442"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  ITextFieldStyles,\r\n} from \"office-ui-fabric-react/lib/TextField\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\r\nimport \"./style.css\";\r\nimport {\r\n  DatePicker,\r\n  DayOfWeek,\r\n  Dropdown,\r\n  getTheme,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IconButton,\r\n  IDatePickerStrings,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  IIconProps,\r\n  IModalStyles,\r\n  Label,\r\n  mergeStyleSets,\r\n  Modal,\r\n  PrimaryButton,\r\n  Separator,\r\n} from \"office-ui-fabric-react\";\r\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport Header from \"../../Header\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { edit_appraisal } from \"../../redux/actions/apprisal\";\r\nimport { fetchAppraisalDataById } from \"../../redux/actions/apprisal\";\r\n\r\nconst formateTypeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Sales Employees\" },\r\n  { key: \"key3\", text: \"Non Sales Employees\" },\r\n  // { key: \"key4\", text: \"Management\" },\r\n];\r\nconst reviewFrequencyOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Monthly\" },\r\n  { key: \"key2\", text: \"Yearly\" },\r\n];\r\n\r\nconst typeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Annual Appraisal\" },\r\n  { key: \"key2\", text: \"Confirmation Appraisal\" },\r\n];\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n  dropdown: {\r\n    width: 170,\r\n    border: \"0px\",\r\n  },\r\n};\r\n\r\ninterface ParamTypes {\r\n  appraisalId: string;\r\n}\r\n\r\nfunction UpdateAppraisal(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n  const stackTokens = { childrenGap: 10 };\r\n\r\n  const [limitStart] = useState(0);\r\n  const [limitPageLength] = useState(5);\r\n  const [orderBy] = useState(\"asc\");\r\n  const [orderByField] = useState(\"id\");\r\n  const [filtersById] = useState(params.appraisalId);\r\n\r\n  const [updateData, setUpdateData]: any = useState({});\r\n\r\n  useEffect(() => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"id\", \"like\", filtersById]);\r\n    }\r\n    fetchAppraisalDataById(\r\n      limitStart,\r\n      limitPageLength,\r\n      `${orderByField} ${orderBy}`,\r\n      JSON.stringify(filters)\r\n    ).then((response) => {\r\n      setUpdateData(response.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  // console.log(\"upadetdata==>\", updateData);\r\n\r\n  // const appraisalList = useSelector((state: RootState) => state.appraisal.appraisalList) || [];\r\n  //   const updateData = appraisalList.find(item => item.id === params.appraisalId);\r\n\r\n  const textfelidStyle: Partial<ITextFieldStyles> = {\r\n    root: {\r\n      \".ms-TextField-wrapper\": {\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \".ms-TextField-fieldGroup fieldGroup-195\": {\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n\r\n    shortMonths: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n\r\n    days: [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ],\r\n\r\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n\r\n    goToToday: \"Go to today\",\r\n    prevMonthAriaLabel: \"Go to previous month\",\r\n    nextMonthAriaLabel: \"Go to next month\",\r\n    prevYearAriaLabel: \"Go to previous year\",\r\n    nextYearAriaLabel: \"Go to next year\",\r\n    closeButtonAriaLabel: \"Close date picker\",\r\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\r\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\r\n  };\r\n\r\n  const controlClass = mergeStyleSets({\r\n    control: {\r\n      // margin: \"0 0 15px 0\",\r\n      // maxWidth: \"150px\",\r\n    },\r\n  });\r\n\r\n  const [firstDayOfWeek, setFirstDayOfWeek] = React.useState(DayOfWeek.Sunday);\r\n\r\n  const datePickerStyle: Partial<IDatePickerStyles> = {\r\n    // root: {\r\n    //   marginRight: \"10px\",\r\n    // },\r\n    icon: {\r\n      color: \"rgb(111 144 220)\",\r\n    },\r\n  };\r\n\r\n  const [formateType, setFormateType] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  function onChangeCheckbox(\r\n    ev?: React.FormEvent<HTMLElement>,\r\n    isChecked?: boolean\r\n  ) {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setUpdateData({\r\n      ...updateData,\r\n      [target.name]: isChecked || false,\r\n    });\r\n  }\r\n\r\n  const onChangeInput = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    const target = ev?.target as HTMLInputElement;\r\n    setUpdateData({\r\n      ...updateData,\r\n      [target.name]: target.value || \"\",\r\n    });\r\n  };\r\n\r\n  const onChangeFormateType = (\r\n    event?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setFormateType(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const _onBreadcrumbItemClicked = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      isCurrentItem: true,\r\n      as: \"h4\",\r\n      onClick: _onBreadcrumbItemClicked,\r\n    },\r\n    { text: \"Update Appraisal\", key: \"d3\", as: \"h4\" },\r\n  ];\r\n\r\n  // const [dateReview, setDateReview] = useState<Date | null | undefined>(\r\n  //   new Date(updateData.review_from)\r\n  // );\r\n  // const [dateAppraisal, setdDateAppraisal] = useState<Date | null | undefined>(\r\n  //   new Date(updateData.appraisal_to)\r\n  // );\r\n\r\n  // const reviewFromDate = (date: Date | null | undefined): void => {\r\n  //   const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  //   // console.log(\"date==>\", reviewFrequencyDate);\r\n  //   setDateReview(reviewFrequencyDate);\r\n  // };\r\n  // const appraisalToDate = (date: Date | null | undefined): void => {\r\n  //   const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\r\n  //   // console.log(\"date==>\", reviewFrequencyDate);\r\n  //   setdDateAppraisal(appraisalDate);\r\n  // };\r\n\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const history = useHistory();\r\n\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      marginTop: \"-1rem\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n\r\n  // const rolesOption: IDropdownOption[] = [\r\n  //   { key: \"key1\", text: \"HR\" },\r\n  //   { key: \"key2\", text: \"Manager\" },\r\n  //   { key: \"key3\", text: \"Employee\" },\r\n  // ];\r\n\r\n  // const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\r\n  //   key: \"\",\r\n  //   text: \"\",\r\n  // });\r\n\r\n  // const handleRoles = (\r\n  //   ev?: React.FormEvent<HTMLDivElement>,\r\n  //   item?: IDropdownOption\r\n  // ): void => {\r\n  //   setReviewSearch(\r\n  //     item || {\r\n  //       key: \"\",\r\n  //       text: \"\",\r\n  //     }\r\n  //   );\r\n  // };\r\n  // const dispatch = useDispatch();\r\n  const [successModal, setSuccessModal] = useState(false);\r\n  const [failedModal, setFailedModal] = useState(false);\r\n  const theme = getTheme();\r\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\r\n\r\n  const iconButtonStyles = {\r\n    root: {\r\n      color: \"#FFF\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"4px\",\r\n      marginRight: \"2px\",\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  const modalStyle: Partial<IModalStyles> = {\r\n    root: {},\r\n    main: {\r\n      height: \"20%\",\r\n      width: \"20%\",\r\n      backgroundColor: \"#FFF\",\r\n      // padding: \"5px\",\r\n    },\r\n  };\r\n\r\n  const handleUpdateApprisal = () => {\r\n    const updateQuery = {\r\n      ...updateData,\r\n      review_from: moment(updateData.review_from).format(\"YYYY-MM-DD\"),\r\n      appraisal_to: moment(updateData.appraisal_to).format(\"YYYY-MM-DD\"),\r\n      description: \"22\",\r\n      route: \"appraisal/BB00002\",\r\n    };\r\n    // console.log(\"updateQuery=>\", updateQuery);\r\n    edit_appraisal(updateQuery).then((response) => {\r\n      // console.log(\"response=>\", response);\r\n      if (response?.status === 200) {\r\n        setSuccessModal(true);\r\n      } else {\r\n        setFailedModal(true);\r\n      }\r\n    });\r\n    // .catch((err) => {\r\n    //   console.log(\"Error in btnClick=>\", err);\r\n    // });\r\n  };\r\n\r\n  const renderUpdateForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-container card\">\r\n          <div className=\"goal-details\">\r\n            <TextField\r\n              disabled\r\n              placeholder=\"ID\"\r\n              value={updateData.id}\r\n              name=\"id\"\r\n              label=\"Id\"\r\n              onChange={onChangeInput}\r\n              className=\"flexGrowTextInput\"\r\n            />\r\n            <TextField\r\n              required\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              value={updateData.appraisal_description}\r\n              // styles={textfelidStyle}\r\n              className=\"flexGrow\"\r\n              name=\"appraisal_description\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          {/* <div className=\"input-form\"></div> */}\r\n          <div className=\"goal-details\">\r\n            <DatePicker\r\n              isRequired\r\n              label=\"Review From\"\r\n              // value={updateData.review_from}\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              firstDayOfWeek={firstDayOfWeek}\r\n              strings={DayPickerStrings}\r\n              value={new Date(updateData.review_from)}\r\n              onSelectDate={(date) =>\r\n                setUpdateData({ ...updateData, review_from: date })\r\n              }\r\n              placeholder=\"Select a date\"\r\n              ariaLabel=\"Select a date\"\r\n              styles={datePickerStyle}\r\n            />\r\n            <DatePicker\r\n              isRequired\r\n              label=\"Appraisal To\"\r\n              value={new Date(updateData.appraisal_to)}\r\n              className={`${controlClass.control} flexGrow w33`}\r\n              firstDayOfWeek={firstDayOfWeek}\r\n              strings={DayPickerStrings}\r\n              onSelectDate={(date) =>\r\n                setUpdateData({ ...updateData, appraisal_to: date })\r\n              }\r\n              styles={datePickerStyle}\r\n              placeholder=\"Select a date\"\r\n              ariaLabel=\"Select a date\"\r\n            />\r\n            <Dropdown\r\n              required\r\n              selectedKey={\r\n                reviewFrequencyOptions.find(\r\n                  (item) => item.text === updateData.review_frequency\r\n                )?.key\r\n              }\r\n              label=\"Review Frequency\"\r\n              placeholder=\"Select\"\r\n              className=\"flexGrow w33\"\r\n              onChange={(ev, item) =>\r\n                setUpdateData({ ...updateData, review_frequency: item?.text })\r\n              }\r\n              options={reviewFrequencyOptions}\r\n              // styles={dropdownStyles}\r\n            />\r\n          </div>\r\n          <div className=\"goal-details\">\r\n            <Dropdown\r\n              required\r\n              selectedKey={\r\n                typeOptions.find((item) => item.text === updateData.type)?.key\r\n              }\r\n              label=\"Type\"\r\n              placeholder=\"Select Type\"\r\n              className=\"flexGrow w33\"\r\n              options={typeOptions}\r\n              onChange={(ev, item) =>\r\n                setUpdateData({ ...updateData, type: item?.text })\r\n              }\r\n              // styles={typeDropdownStyles}\r\n            />\r\n            <Dropdown\r\n              required\r\n              selectedKey={\r\n                formateTypeOptions.find(\r\n                  (item) => item.text === updateData.format_type\r\n                )?.key\r\n              }\r\n              label=\"Format Type\"\r\n              className=\"flexGrow w33\"\r\n              onChange={(ev, item) =>\r\n                setUpdateData({ ...updateData, format_type: item?.text })\r\n              }\r\n              placeholder=\"Select Format Type\"\r\n              options={formateTypeOptions}\r\n              // styles={typeDropdownStyles}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Owner\"\r\n              placeholder=\"Owner\"\r\n              pattern={\"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"}\r\n              onGetErrorMessage={(v) =>\r\n                new RegExp(\r\n                  \"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"\r\n                ).test(v)\r\n                  ? \"\"\r\n                  : \"Please give currect pattern\"\r\n              }\r\n              value={updateData.appraisal_owner}\r\n              styles={textfelidStyle}\r\n              name=\"appraisal_owner\"\r\n              className=\"flexGrow w33\"\r\n              onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          <Separator />\r\n          <div className=\"rowCheckBox\">\r\n            <div>\r\n              <Label>KRA Settings Tabs: </Label>\r\n              <Checkbox\r\n                label={\"Job History\"}\r\n                title={\"Competencies\"}\r\n                checked={updateData.kra_settings_tab_competencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_competencies\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={updateData.kra_settings_tab_goals}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_goals\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Training/ Development Plan\"}\r\n                title={\"Development Plans\"}\r\n                checked={updateData.kra_settings_tab_development_plan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_development_plan\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              {/* <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={updateData.kra_settings_tab_summary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_summary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              {/* <Label>Assessment Tabs: </Label>\r\n              <Checkbox\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={updateData.assessment_tab_goals}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_goals\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Competencies\"}\r\n                title={\"Competencies\"}\r\n                checked={updateData.assessment_tab_competencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_competencies\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Development Plans\"}\r\n                title={\"Development Plans\"}\r\n                checked={updateData.assessment_tab_development_plan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_development_plan\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={updateData.assessment_tab_summary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_summary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              <Modal\r\n                titleAriaId={\"Title\"}\r\n                isOpen={successModal}\r\n                isBlocking={false}\r\n                styles={modalStyle}\r\n                // containerClassName={contentStyles.container}\r\n              >\r\n                <div className=\"modal-header\">\r\n                  <div className=\"modal-title\">Success</div>\r\n                  <IconButton\r\n                    styles={iconButtonStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close popup modal\"\r\n                    onClick={() => {\r\n                      history.push(\"/home\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-content-success\">\r\n                  Appraisal updated Successfully.\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <PrimaryButton\r\n                    text=\"OK\"\r\n                    allowDisabledFocus\r\n                    onClick={() => {\r\n                      history.push(\"/home\");\r\n                    }}\r\n                    disabled={false}\r\n                    checked={false}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n              <Modal\r\n                titleAriaId={\"Title failed\"}\r\n                isOpen={failedModal}\r\n                isBlocking={false}\r\n                styles={modalStyle}\r\n                // containerClassName={contentStyles.container}\r\n              >\r\n                <div className=\"modal-header\">\r\n                  <div className=\"modal-title\">Error</div>\r\n                  <IconButton\r\n                    styles={iconButtonStyles}\r\n                    iconProps={cancelIcon}\r\n                    ariaLabel=\"Close popup modal\"\r\n                    onClick={() => {\r\n                      setFailedModal(false);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                  Somthing went wrong. Please try again.\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <PrimaryButton\r\n                    text=\"Go Back\"\r\n                    allowDisabledFocus\r\n                    onClick={() => {\r\n                      setFailedModal(false);\r\n                    }}\r\n                    disabled={false}\r\n                    checked={false}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Update\"\r\n                allowDisabledFocus\r\n                onClick={handleUpdateApprisal}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Cancel\"\r\n                allowDisabledFocus\r\n                disabled={false}\r\n                onClick={() => {\r\n                  history.push(\"/home\");\r\n                }}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      {/* <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            \r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader> */}\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderUpdateForm()}</div>\r\n        {/* <div className=\"right-container\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(UpdateAppraisal);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\MainHeader.tsx",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Appraisal\\index.tsx",["468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\EmployeeDetails\\index.tsx",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\SideNavigation\\index.tsx",["514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\apprisal.tsx",["547"],"import axios from \"axios\";\r\nimport accessToken from \"../../apiBase.json\";\r\n\r\nexport const addApprisal = (item: any) => {\r\n  return {\r\n    type: \"ADD_APPRISAL\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const deleteAppraisalByID = (item: any) => {\r\n  return {\r\n    type: \"DELETE_APPRAISAL\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const fetchAppraisalData = (\r\n  limit_start = 0,\r\n  limit_page_length = 10,\r\n  order_by = \"id asc\",\r\n  filters: any\r\n) => async (dispatch: any): Promise<any> => {\r\n  const token = sessionStorage.getItem(\"access_token\");\r\n  if (token === null) {\r\n    return false;\r\n  }\r\n  const accessToken = \"bearer \" + token;\r\n  try {\r\n    dispatch({\r\n      type: \"FETCH_APPRAISAL_LIST_START\",\r\n    });\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      params: {\r\n        limit_start,\r\n        limit_page_length,\r\n        order_by,\r\n        filters,\r\n        fields: JSON.stringify([\r\n          \"name\",\r\n          \"id\",\r\n          \"appraisal_description\",\r\n          \"review_from\",\r\n          \"appraisal_to\",\r\n          \"review_frequency\",\r\n          \"type\",\r\n          \"format_type\",\r\n          \"format_type\",\r\n          \"appraisal_owner\",\r\n          \"kra_settings_tab_goals\",\r\n          \"kra_settings_tab_competencies\",\r\n          \"kra_settings_tab_development_plan\",\r\n          \"kra_settings_tab_summary\",\r\n          \"assessment_tab_goals\",\r\n          \"assessment_tab_competencies\",\r\n          \"assessment_tab_development_plan\",\r\n          \"assessment_tab_summary\",\r\n          \"is_deleted\",\r\n        ]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    const responseBody = response.data;\r\n    console.log(\"Appraisal api response =>\", responseBody);\r\n    dispatch({\r\n      type: \"FETCH_APPRAISAL_LIST_SUCCESS\",\r\n      payload: responseBody,\r\n    });\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const fetchAppraisalDataById = async (\r\n  limit_start = 0,\r\n  limit_page_length = 10,\r\n  order_by = \"id asc\",\r\n  filters: any\r\n) => {\r\n  try {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    if (token === null) {\r\n      return false;\r\n    }\r\n    const accessToken = \"bearer \" + token;\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      params: {\r\n        limit_start,\r\n        limit_page_length,\r\n        order_by,\r\n        filters,\r\n        fields: JSON.stringify([\r\n          \"name\",\r\n          \"id\",\r\n          \"appraisal_description\",\r\n          \"review_from\",\r\n          \"appraisal_to\",\r\n          \"review_frequency\",\r\n          \"type\",\r\n          \"format_type\",\r\n          \"format_type\",\r\n          \"appraisal_owner\",\r\n          \"kra_settings_tab_goals\",\r\n          \"kra_settings_tab_competencies\",\r\n          \"kra_settings_tab_development_plan\",\r\n          \"kra_settings_tab_summary\",\r\n          \"assessment_tab_goals\",\r\n          \"assessment_tab_competencies\",\r\n          \"assessment_tab_development_plan\",\r\n          \"assessment_tab_summary\",\r\n          \"is_deleted\",\r\n        ]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    const responseBody = await response.data;\r\n    // console.log(\"api data by id\", responseBody)\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const add_apprisal = async (data: any) => {\r\n  try {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    if (token === null) {\r\n      return false;\r\n    }\r\n    const accessToken = \"bearer \" + token;\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: accessToken,\r\n      },\r\n      data: JSON.stringify(data),\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.log(\"error in catch block=>\", JSON.stringify(error));\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const edit_appraisal = async (data: any) => {\r\n  try {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    if (token === null) {\r\n      return false;\r\n    }\r\n    const accessToken = \"bearer \" + token;\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal/${data.id}`,\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: accessToken,\r\n      },\r\n      data: JSON.stringify(data),\r\n    });\r\n    // console.log(\"api response ==>\", response)\r\n    return await response;\r\n  } catch (error) {\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const delete_appraisal = async (data: any) => {\r\n  try {\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal/${data}`,\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, DELETE\",\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\r\n      },\r\n      data: JSON.stringify(data),\r\n    });\r\n    console.log(\"delete api response ==>\", response);\r\n    return await response;\r\n  } catch (error) {\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const filterByEmployee = async (order_by = \"employee_name asc\") => {\r\n  try {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    if (token === null) {\r\n      return false;\r\n    }\r\n    const accessToken = \"bearer \" + token;\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Employee`,\r\n      params: {\r\n        order_by,\r\n        fields: JSON.stringify([\"employee_id\", \"employee_name\"]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    // console.log(\"Api filter by employee==>\", response);\r\n    const responseBody = response.data;\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\employeeData.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx",["548","549","550"],"import * as React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IDividerAsProps,\r\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\r\nimport { IContextualMenuProps } from \"office-ui-fabric-react\";\r\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\r\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\r\nimport \"./Header.css\";\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"action01\",\r\n      text: \"Action 1\",\r\n      //   iconProps: { iconName: 'Mail' },\r\n    },\r\n    {\r\n      key: \"action02\",\r\n      text: \"Action 2\",\r\n      //   iconProps: { iconName: 'Calendar' },\r\n    },\r\n  ],\r\n};\r\nfunction _onBreadcrumbItemClicked(\r\n  ev?: React.MouseEvent<HTMLElement>,\r\n  item?: IBreadcrumbItem\r\n): void {\r\n  console.log(`Breadcrumb item with key \"${item?.key}\" has been clicked.`);\r\n}\r\nconst itemsWithHeading: IBreadcrumbItem[] = [\r\n  {\r\n    text: \"Performance\",\r\n    key: \"Files\",\r\n    onClick: _onBreadcrumbItemClicked,\r\n    href: \"\",\r\n  },\r\n  { text: \"Appraisal\", key: \"d1\", isCurrentItem: true },\r\n];\r\nfunction _getCustomOverflowIcon(): JSX.Element {\r\n  return <Icon iconName={\"ChevronDown\"} />;\r\n}\r\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\r\n  const tooltipText = dividerProps.item ? dividerProps.item.text : \"\";\r\n  return (\r\n    <TooltipHost\r\n      content={`Show ${tooltipText} contents`}\r\n      calloutProps={{ gapSpace: 0 }}\r\n    >\r\n      <span aria-hidden=\"true\" style={{ cursor: \"pointer\", padding: 5 }}>\r\n        /\r\n      </span>\r\n    </TooltipHost>\r\n  );\r\n}\r\n\r\nconst breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n  root: {\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    marginTop: \"-10px\",\r\n  },\r\n  itemLink: {\r\n    fontSize: \"22px\",\r\n  },\r\n};\r\n\r\nfunction Header(props: { item?: IBreadcrumbItem[]; styles: any }) {\r\n  // const _alertClicked = () => {\r\n  //   console.log(\"clicked==>\")\r\n  // }\r\n  // const horizontalStackProps: IStackProps = {\r\n  //     horizontal: true,\r\n  //     tokens: { childrenGap: 100, },\r\n  // };\r\n  // const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Breadcrumb\r\n        // items={itemsWithHeading}\r\n        items={props.item || []}\r\n        styles={props.styles}\r\n        maxDisplayedItems={5}\r\n        ariaLabel=\"With custom rendered divider and overflow icon\"\r\n        dividerAs={_getCustomDivider}\r\n        onRenderOverflowIcon={_getCustomOverflowIcon}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\jobHistory.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\goal.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\roleType.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\application.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\apprisal.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\userData.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\roleType.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\employeeList.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\navigationData.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\jobHistory.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\menuType.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\application.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\auth.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\developmentPlan.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\navigation.tsx",[],["551","552"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Utils\\index.tsx",["553","554"],"export const languageFromCode = (code: any) => {\r\n  switch (code) {\r\n    case \"en\":\r\n      return \"English\";\r\n    case \"vi\":\r\n      return \"Vietnamese\";\r\n    case \"fr\":\r\n      return \"French\";\r\n    case \"ar\":\r\n      return \"Arabic\";\r\n    case \"da\":\r\n      return \"Danish\";\r\n    case \"de\":\r\n      return \"German\";\r\n    case \"el\":\r\n      return \"Greek\";\r\n    case \"fr\":\r\n      return \"French\";\r\n    case \"he\":\r\n      return \"Hebrew\";\r\n    case \"id\":\r\n      return \"Indonesian\";\r\n    case \"ja\":\r\n      return \"Japanese\";\r\n    case \"ko\":\r\n      return \"Korean\";\r\n    case \"lo\":\r\n      return \"Lao\";\r\n    case \"nl\":\r\n      return \"Dutch\";\r\n    case \"zh\":\r\n      return \"Chinese\";\r\n    case \"fa\":\r\n      return \"Iran\";\r\n    case \"km\":\r\n      return \"Cambodian\";\r\n    default:\r\n      return \"Unknown\";\r\n  }\r\n};\r\n\r\nexport const isLanguageRTL = (code: any) => {\r\n  switch (code) {\r\n    case \"ar\":\r\n    case \"he\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const reloadLocale = (oldLanguage: any, newLanguage: any) => {\r\n  const oldStyle = isLanguageRTL(oldLanguage);\r\n  const newStyle = isLanguageRTL(newLanguage);\r\n  if (oldStyle != newStyle) {\r\n  }\r\n};\r\n",["555","556"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\i18n.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\menuData.tsx",[],["557","558"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\ChanageColor\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Utils\\color.tsx",["559","560"],"import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/reducers\";\r\n\r\n// const colorsList = useSelector((state: RootState) => state.application);\r\n\r\n// console.log(\"colorsList\", colorsList);\r\n\r\nexport const DefaultTheme = {\r\n  colors: {\r\n    primary: \"#00597d\",\r\n    primaryDark: \"006994 \",\r\n    white: \"#FFF\",\r\n  },\r\n};\r\n",{"ruleId":"561","severity":1,"message":"562","line":8,"column":8,"nodeType":"563","messageId":"564","endLine":8,"endColumn":12},{"ruleId":"565","replacedBy":"566"},{"ruleId":"567","replacedBy":"568"},{"ruleId":"561","severity":1,"message":"569","line":1,"column":38,"nodeType":"563","messageId":"564","endLine":1,"endColumn":46},{"ruleId":"561","severity":1,"message":"570","line":27,"column":8,"nodeType":"563","messageId":"564","endLine":27,"endColumn":9},{"ruleId":"561","severity":1,"message":"571","line":34,"column":8,"nodeType":"563","messageId":"564","endLine":34,"endColumn":16},{"ruleId":"561","severity":1,"message":"572","line":72,"column":9,"nodeType":"563","messageId":"564","endLine":72,"endColumn":13},{"ruleId":"573","severity":1,"message":"574","line":94,"column":6,"nodeType":"575","endLine":94,"endColumn":8,"suggestions":"576"},{"ruleId":"573","severity":1,"message":"574","line":111,"column":6,"nodeType":"575","endLine":111,"endColumn":8,"suggestions":"577"},{"ruleId":"578","severity":1,"message":"579","line":120,"column":26,"nodeType":"580","messageId":"581","endLine":120,"endColumn":28},{"ruleId":"561","severity":1,"message":"582","line":3,"column":3,"nodeType":"563","messageId":"564","endLine":3,"endColumn":6},{"ruleId":"561","severity":1,"message":"583","line":12,"column":8,"nodeType":"563","messageId":"564","endLine":12,"endColumn":18},{"ruleId":"561","severity":1,"message":"584","line":14,"column":3,"nodeType":"563","messageId":"564","endLine":14,"endColumn":21},{"ruleId":"561","severity":1,"message":"585","line":15,"column":3,"nodeType":"563","messageId":"564","endLine":15,"endColumn":21},{"ruleId":"561","severity":1,"message":"586","line":17,"column":10,"nodeType":"563","messageId":"564","endLine":17,"endColumn":19},{"ruleId":"561","severity":1,"message":"587","line":21,"column":8,"nodeType":"563","messageId":"564","endLine":21,"endColumn":18},{"ruleId":"561","severity":1,"message":"588","line":150,"column":7,"nodeType":"563","messageId":"564","endLine":150,"endColumn":37},{"ruleId":"561","severity":1,"message":"589","line":193,"column":9,"nodeType":"563","messageId":"564","endLine":193,"endColumn":17},{"ruleId":"561","severity":1,"message":"590","line":194,"column":10,"nodeType":"563","messageId":"564","endLine":194,"endColumn":17},{"ruleId":"561","severity":1,"message":"591","line":194,"column":19,"nodeType":"563","messageId":"564","endLine":194,"endColumn":29},{"ruleId":"561","severity":1,"message":"592","line":195,"column":9,"nodeType":"563","messageId":"564","endLine":195,"endColumn":17},{"ruleId":"561","severity":1,"message":"593","line":196,"column":10,"nodeType":"563","messageId":"564","endLine":196,"endColumn":17},{"ruleId":"561","severity":1,"message":"594","line":196,"column":19,"nodeType":"563","messageId":"564","endLine":196,"endColumn":29},{"ruleId":"561","severity":1,"message":"595","line":200,"column":9,"nodeType":"563","messageId":"564","endLine":200,"endColumn":19},{"ruleId":"561","severity":1,"message":"596","line":217,"column":10,"nodeType":"563","messageId":"564","endLine":217,"endColumn":24},{"ruleId":"561","severity":1,"message":"597","line":218,"column":9,"nodeType":"563","messageId":"564","endLine":218,"endColumn":20},{"ruleId":"598","severity":1,"message":"599","line":222,"column":39,"nodeType":"600","messageId":"601","endLine":222,"endColumn":41},{"ruleId":"598","severity":1,"message":"599","line":224,"column":34,"nodeType":"600","messageId":"601","endLine":224,"endColumn":36},{"ruleId":"598","severity":1,"message":"602","line":232,"column":13,"nodeType":"603","messageId":"604","endLine":232,"endColumn":20},{"ruleId":"598","severity":1,"message":"602","line":243,"column":11,"nodeType":"603","messageId":"604","endLine":243,"endColumn":18},{"ruleId":"605","severity":1,"message":"606","line":262,"column":11,"nodeType":"607","endLine":262,"endColumn":34},{"ruleId":"561","severity":1,"message":"608","line":11,"column":10,"nodeType":"563","messageId":"564","endLine":11,"endColumn":21},{"ruleId":"561","severity":1,"message":"609","line":11,"column":23,"nodeType":"563","messageId":"564","endLine":11,"endColumn":34},{"ruleId":"561","severity":1,"message":"610","line":12,"column":10,"nodeType":"563","messageId":"564","endLine":12,"endColumn":19},{"ruleId":"611","severity":1,"message":"612","line":15,"column":3,"nodeType":"613","messageId":"614","endLine":15,"endColumn":18,"fix":"615"},{"ruleId":"561","severity":1,"message":"616","line":17,"column":7,"nodeType":"563","messageId":"564","endLine":17,"endColumn":11},{"ruleId":"611","severity":1,"message":"612","line":4,"column":3,"nodeType":"613","messageId":"614","endLine":4,"endColumn":18,"fix":"617"},{"ruleId":"561","severity":1,"message":"618","line":102,"column":7,"nodeType":"563","messageId":"564","endLine":102,"endColumn":21},{"ruleId":"561","severity":1,"message":"619","line":4,"column":3,"nodeType":"563","messageId":"564","endLine":4,"endColumn":12},{"ruleId":"561","severity":1,"message":"586","line":6,"column":17,"nodeType":"563","messageId":"564","endLine":6,"endColumn":26},{"ruleId":"561","severity":1,"message":"569","line":6,"column":28,"nodeType":"563","messageId":"564","endLine":6,"endColumn":36},{"ruleId":"561","severity":1,"message":"620","line":8,"column":10,"nodeType":"563","messageId":"564","endLine":8,"endColumn":15},{"ruleId":"561","severity":1,"message":"621","line":10,"column":8,"nodeType":"563","messageId":"564","endLine":10,"endColumn":19},{"ruleId":"561","severity":1,"message":"589","line":14,"column":9,"nodeType":"563","messageId":"564","endLine":14,"endColumn":17},{"ruleId":"561","severity":1,"message":"622","line":15,"column":9,"nodeType":"563","messageId":"564","endLine":15,"endColumn":50},{"ruleId":"605","severity":1,"message":"606","line":53,"column":13,"nodeType":"607","endLine":53,"endColumn":60},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"624","line":7,"column":3,"nodeType":"563","messageId":"564","endLine":7,"endColumn":17},{"ruleId":"561","severity":1,"message":"625","line":8,"column":3,"nodeType":"563","messageId":"564","endLine":8,"endColumn":18},{"ruleId":"561","severity":1,"message":"626","line":13,"column":3,"nodeType":"563","messageId":"564","endLine":13,"endColumn":13},{"ruleId":"561","severity":1,"message":"627","line":17,"column":3,"nodeType":"563","messageId":"564","endLine":17,"endColumn":13},{"ruleId":"561","severity":1,"message":"628","line":23,"column":3,"nodeType":"563","messageId":"564","endLine":23,"endColumn":8},{"ruleId":"561","severity":1,"message":"629","line":26,"column":3,"nodeType":"563","messageId":"564","endLine":26,"endColumn":7},{"ruleId":"561","severity":1,"message":"619","line":27,"column":3,"nodeType":"563","messageId":"564","endLine":27,"endColumn":12},{"ruleId":"561","severity":1,"message":"630","line":38,"column":10,"nodeType":"563","messageId":"564","endLine":38,"endColumn":21},{"ruleId":"561","severity":1,"message":"631","line":48,"column":10,"nodeType":"563","messageId":"564","endLine":48,"endColumn":16},{"ruleId":"561","severity":1,"message":"632","line":49,"column":10,"nodeType":"563","messageId":"564","endLine":49,"endColumn":18},{"ruleId":"573","severity":1,"message":"633","line":61,"column":6,"nodeType":"575","endLine":61,"endColumn":8,"suggestions":"634"},{"ruleId":"561","severity":1,"message":"635","line":64,"column":9,"nodeType":"563","messageId":"564","endLine":64,"endColumn":31},{"ruleId":"561","severity":1,"message":"636","line":65,"column":9,"nodeType":"563","messageId":"564","endLine":65,"endColumn":25},{"ruleId":"561","severity":1,"message":"637","line":76,"column":9,"nodeType":"563","messageId":"564","endLine":76,"endColumn":42},{"ruleId":"561","severity":1,"message":"638","line":86,"column":9,"nodeType":"563","messageId":"564","endLine":86,"endColumn":52},{"ruleId":"561","severity":1,"message":"622","line":94,"column":9,"nodeType":"563","messageId":"564","endLine":94,"endColumn":50},{"ruleId":"561","severity":1,"message":"639","line":100,"column":9,"nodeType":"563","messageId":"564","endLine":100,"endColumn":21},{"ruleId":"561","severity":1,"message":"640","line":107,"column":9,"nodeType":"563","messageId":"564","endLine":107,"endColumn":22},{"ruleId":"561","severity":1,"message":"641","line":118,"column":9,"nodeType":"563","messageId":"564","endLine":118,"endColumn":23},{"ruleId":"561","severity":1,"message":"642","line":122,"column":9,"nodeType":"563","messageId":"564","endLine":122,"endColumn":25},{"ruleId":"561","severity":1,"message":"626","line":3,"column":3,"nodeType":"563","messageId":"564","endLine":3,"endColumn":13},{"ruleId":"561","severity":1,"message":"643","line":4,"column":3,"nodeType":"563","messageId":"564","endLine":4,"endColumn":11},{"ruleId":"561","severity":1,"message":"644","line":7,"column":3,"nodeType":"563","messageId":"564","endLine":7,"endColumn":20},{"ruleId":"561","severity":1,"message":"645","line":8,"column":3,"nodeType":"563","messageId":"564","endLine":8,"endColumn":18},{"ruleId":"561","severity":1,"message":"646","line":9,"column":3,"nodeType":"563","messageId":"564","endLine":9,"endColumn":18},{"ruleId":"561","severity":1,"message":"647","line":10,"column":3,"nodeType":"563","messageId":"564","endLine":10,"endColumn":19},{"ruleId":"561","severity":1,"message":"648","line":12,"column":3,"nodeType":"563","messageId":"564","endLine":12,"endColumn":17},{"ruleId":"561","severity":1,"message":"619","line":16,"column":3,"nodeType":"563","messageId":"564","endLine":16,"endColumn":12},{"ruleId":"561","severity":1,"message":"623","line":21,"column":8,"nodeType":"563","messageId":"564","endLine":21,"endColumn":21},{"ruleId":"561","severity":1,"message":"629","line":23,"column":10,"nodeType":"563","messageId":"564","endLine":23,"endColumn":14},{"ruleId":"573","severity":1,"message":"649","line":59,"column":6,"nodeType":"575","endLine":59,"endColumn":8,"suggestions":"650"},{"ruleId":"561","severity":1,"message":"609","line":2,"column":19,"nodeType":"563","messageId":"564","endLine":2,"endColumn":30},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"610","line":6,"column":10,"nodeType":"563","messageId":"564","endLine":6,"endColumn":19},{"ruleId":"561","severity":1,"message":"643","line":8,"column":3,"nodeType":"563","messageId":"564","endLine":8,"endColumn":11},{"ruleId":"561","severity":1,"message":"651","line":9,"column":3,"nodeType":"563","messageId":"564","endLine":9,"endColumn":11},{"ruleId":"561","severity":1,"message":"627","line":12,"column":3,"nodeType":"563","messageId":"564","endLine":12,"endColumn":13},{"ruleId":"561","severity":1,"message":"644","line":13,"column":3,"nodeType":"563","messageId":"564","endLine":13,"endColumn":20},{"ruleId":"561","severity":1,"message":"652","line":15,"column":3,"nodeType":"563","messageId":"564","endLine":15,"endColumn":13},{"ruleId":"561","severity":1,"message":"653","line":16,"column":3,"nodeType":"563","messageId":"564","endLine":16,"endColumn":15},{"ruleId":"561","severity":1,"message":"648","line":18,"column":3,"nodeType":"563","messageId":"564","endLine":18,"endColumn":17},{"ruleId":"561","severity":1,"message":"628","line":19,"column":3,"nodeType":"563","messageId":"564","endLine":19,"endColumn":8},{"ruleId":"561","severity":1,"message":"629","line":22,"column":3,"nodeType":"563","messageId":"564","endLine":22,"endColumn":7},{"ruleId":"561","severity":1,"message":"619","line":23,"column":3,"nodeType":"563","messageId":"564","endLine":23,"endColumn":12},{"ruleId":"561","severity":1,"message":"654","line":25,"column":10,"nodeType":"563","messageId":"564","endLine":25,"endColumn":23},{"ruleId":"561","severity":1,"message":"655","line":32,"column":7,"nodeType":"563","messageId":"564","endLine":32,"endColumn":37},{"ruleId":"561","severity":1,"message":"630","line":39,"column":10,"nodeType":"563","messageId":"564","endLine":39,"endColumn":21},{"ruleId":"561","severity":1,"message":"656","line":44,"column":19,"nodeType":"563","messageId":"564","endLine":44,"endColumn":29},{"ruleId":"573","severity":1,"message":"657","line":62,"column":6,"nodeType":"575","endLine":62,"endColumn":8,"suggestions":"658"},{"ruleId":"561","severity":1,"message":"622","line":64,"column":9,"nodeType":"563","messageId":"564","endLine":64,"endColumn":50},{"ruleId":"561","severity":1,"message":"640","line":70,"column":9,"nodeType":"563","messageId":"564","endLine":70,"endColumn":22},{"ruleId":"561","severity":1,"message":"659","line":114,"column":9,"nodeType":"563","messageId":"564","endLine":114,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":115,"column":9,"nodeType":"563","messageId":"564","endLine":115,"endColumn":15},{"ruleId":"561","severity":1,"message":"661","line":116,"column":9,"nodeType":"563","messageId":"564","endLine":116,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":117,"column":9,"nodeType":"563","messageId":"564","endLine":117,"endColumn":16},{"ruleId":"561","severity":1,"message":"663","line":119,"column":10,"nodeType":"563","messageId":"564","endLine":119,"endColumn":21},{"ruleId":"561","severity":1,"message":"664","line":119,"column":23,"nodeType":"563","messageId":"564","endLine":119,"endColumn":37},{"ruleId":"561","severity":1,"message":"665","line":120,"column":10,"nodeType":"563","messageId":"564","endLine":120,"endColumn":20},{"ruleId":"561","severity":1,"message":"666","line":120,"column":22,"nodeType":"563","messageId":"564","endLine":120,"endColumn":35},{"ruleId":"561","severity":1,"message":"667","line":121,"column":10,"nodeType":"563","messageId":"564","endLine":121,"endColumn":24},{"ruleId":"561","severity":1,"message":"668","line":121,"column":26,"nodeType":"563","messageId":"564","endLine":121,"endColumn":43},{"ruleId":"561","severity":1,"message":"669","line":122,"column":10,"nodeType":"563","messageId":"564","endLine":122,"endColumn":23},{"ruleId":"561","severity":1,"message":"670","line":122,"column":25,"nodeType":"563","messageId":"564","endLine":122,"endColumn":41},{"ruleId":"561","severity":1,"message":"671","line":123,"column":10,"nodeType":"563","messageId":"564","endLine":123,"endColumn":25},{"ruleId":"561","severity":1,"message":"672","line":123,"column":27,"nodeType":"563","messageId":"564","endLine":123,"endColumn":45},{"ruleId":"561","severity":1,"message":"673","line":124,"column":10,"nodeType":"563","messageId":"564","endLine":124,"endColumn":19},{"ruleId":"561","severity":1,"message":"674","line":124,"column":21,"nodeType":"563","messageId":"564","endLine":124,"endColumn":33},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"675","line":17,"column":3,"nodeType":"563","messageId":"564","endLine":17,"endColumn":7},{"ruleId":"561","severity":1,"message":"676","line":18,"column":3,"nodeType":"563","messageId":"564","endLine":18,"endColumn":8},{"ruleId":"561","severity":1,"message":"677","line":22,"column":3,"nodeType":"563","messageId":"564","endLine":22,"endColumn":12},{"ruleId":"561","severity":1,"message":"678","line":37,"column":11,"nodeType":"563","messageId":"564","endLine":37,"endColumn":12},{"ruleId":"561","severity":1,"message":"591","line":38,"column":19,"nodeType":"563","messageId":"564","endLine":38,"endColumn":29},{"ruleId":"561","severity":1,"message":"679","line":39,"column":23,"nodeType":"563","messageId":"564","endLine":39,"endColumn":36},{"ruleId":"561","severity":1,"message":"680","line":40,"column":17,"nodeType":"563","messageId":"564","endLine":40,"endColumn":25},{"ruleId":"561","severity":1,"message":"681","line":41,"column":10,"nodeType":"563","messageId":"564","endLine":41,"endColumn":14},{"ruleId":"561","severity":1,"message":"682","line":41,"column":16,"nodeType":"563","messageId":"564","endLine":41,"endColumn":23},{"ruleId":"561","severity":1,"message":"683","line":43,"column":27,"nodeType":"563","messageId":"564","endLine":43,"endColumn":45},{"ruleId":"561","severity":1,"message":"684","line":44,"column":10,"nodeType":"563","messageId":"564","endLine":44,"endColumn":20},{"ruleId":"561","severity":1,"message":"685","line":52,"column":49,"nodeType":"563","messageId":"564","endLine":52,"endColumn":54},{"ruleId":"561","severity":1,"message":"686","line":53,"column":9,"nodeType":"563","messageId":"564","endLine":53,"endColumn":20},{"ruleId":"573","severity":1,"message":"687","line":61,"column":6,"nodeType":"575","endLine":61,"endColumn":8,"suggestions":"688"},{"ruleId":"573","severity":1,"message":"574","line":99,"column":6,"nodeType":"575","endLine":99,"endColumn":75,"suggestions":"689"},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"624","line":7,"column":3,"nodeType":"563","messageId":"564","endLine":7,"endColumn":17},{"ruleId":"561","severity":1,"message":"629","line":26,"column":3,"nodeType":"563","messageId":"564","endLine":26,"endColumn":7},{"ruleId":"561","severity":1,"message":"690","line":39,"column":10,"nodeType":"563","messageId":"564","endLine":39,"endColumn":25},{"ruleId":"561","severity":1,"message":"691","line":39,"column":27,"nodeType":"563","messageId":"564","endLine":39,"endColumn":45},{"ruleId":"561","severity":1,"message":"692","line":40,"column":10,"nodeType":"563","messageId":"564","endLine":40,"endColumn":24},{"ruleId":"561","severity":1,"message":"693","line":40,"column":26,"nodeType":"563","messageId":"564","endLine":40,"endColumn":43},{"ruleId":"561","severity":1,"message":"631","line":46,"column":10,"nodeType":"563","messageId":"564","endLine":46,"endColumn":16},{"ruleId":"561","severity":1,"message":"632","line":47,"column":10,"nodeType":"563","messageId":"564","endLine":47,"endColumn":18},{"ruleId":"573","severity":1,"message":"694","line":61,"column":6,"nodeType":"575","endLine":61,"endColumn":8,"suggestions":"695"},{"ruleId":"561","severity":1,"message":"641","line":118,"column":9,"nodeType":"563","messageId":"564","endLine":118,"endColumn":23},{"ruleId":"561","severity":1,"message":"642","line":122,"column":9,"nodeType":"563","messageId":"564","endLine":122,"endColumn":25},{"ruleId":"561","severity":1,"message":"659","line":164,"column":9,"nodeType":"563","messageId":"564","endLine":164,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":165,"column":9,"nodeType":"563","messageId":"564","endLine":165,"endColumn":15},{"ruleId":"561","severity":1,"message":"661","line":166,"column":9,"nodeType":"563","messageId":"564","endLine":166,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":167,"column":9,"nodeType":"563","messageId":"564","endLine":167,"endColumn":16},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"629","line":25,"column":3,"nodeType":"563","messageId":"564","endLine":25,"endColumn":7},{"ruleId":"561","severity":1,"message":"690","line":40,"column":10,"nodeType":"563","messageId":"564","endLine":40,"endColumn":25},{"ruleId":"573","severity":1,"message":"694","line":60,"column":6,"nodeType":"575","endLine":60,"endColumn":8,"suggestions":"696"},{"ruleId":"561","severity":1,"message":"659","line":159,"column":9,"nodeType":"563","messageId":"564","endLine":159,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":160,"column":9,"nodeType":"563","messageId":"564","endLine":160,"endColumn":15},{"ruleId":"561","severity":1,"message":"661","line":161,"column":9,"nodeType":"563","messageId":"564","endLine":161,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":162,"column":9,"nodeType":"563","messageId":"564","endLine":162,"endColumn":16},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"629","line":22,"column":3,"nodeType":"563","messageId":"564","endLine":22,"endColumn":7},{"ruleId":"561","severity":1,"message":"654","line":26,"column":3,"nodeType":"563","messageId":"564","endLine":26,"endColumn":16},{"ruleId":"561","severity":1,"message":"630","line":43,"column":10,"nodeType":"563","messageId":"564","endLine":43,"endColumn":21},{"ruleId":"561","severity":1,"message":"592","line":44,"column":9,"nodeType":"563","messageId":"564","endLine":44,"endColumn":17},{"ruleId":"561","severity":1,"message":"656","line":47,"column":19,"nodeType":"563","messageId":"564","endLine":47,"endColumn":29},{"ruleId":"561","severity":1,"message":"697","line":52,"column":10,"nodeType":"563","messageId":"564","endLine":52,"endColumn":18},{"ruleId":"561","severity":1,"message":"698","line":52,"column":20,"nodeType":"563","messageId":"564","endLine":52,"endColumn":31},{"ruleId":"573","severity":1,"message":"657","line":69,"column":6,"nodeType":"575","endLine":69,"endColumn":8,"suggestions":"699"},{"ruleId":"561","severity":1,"message":"638","line":94,"column":9,"nodeType":"563","messageId":"564","endLine":94,"endColumn":52},{"ruleId":"561","severity":1,"message":"639","line":108,"column":9,"nodeType":"563","messageId":"564","endLine":108,"endColumn":21},{"ruleId":"561","severity":1,"message":"659","line":159,"column":9,"nodeType":"563","messageId":"564","endLine":159,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":160,"column":9,"nodeType":"563","messageId":"564","endLine":160,"endColumn":15},{"ruleId":"561","severity":1,"message":"661","line":161,"column":9,"nodeType":"563","messageId":"564","endLine":161,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":162,"column":9,"nodeType":"563","messageId":"564","endLine":162,"endColumn":16},{"ruleId":"561","severity":1,"message":"664","line":164,"column":23,"nodeType":"563","messageId":"564","endLine":164,"endColumn":37},{"ruleId":"561","severity":1,"message":"666","line":165,"column":22,"nodeType":"563","messageId":"564","endLine":165,"endColumn":35},{"ruleId":"561","severity":1,"message":"668","line":166,"column":26,"nodeType":"563","messageId":"564","endLine":166,"endColumn":43},{"ruleId":"561","severity":1,"message":"670","line":167,"column":25,"nodeType":"563","messageId":"564","endLine":167,"endColumn":41},{"ruleId":"561","severity":1,"message":"672","line":168,"column":27,"nodeType":"563","messageId":"564","endLine":168,"endColumn":45},{"ruleId":"561","severity":1,"message":"674","line":169,"column":21,"nodeType":"563","messageId":"564","endLine":169,"endColumn":33},{"ruleId":"561","severity":1,"message":"700","line":171,"column":10,"nodeType":"563","messageId":"564","endLine":171,"endColumn":18},{"ruleId":"561","severity":1,"message":"701","line":176,"column":9,"nodeType":"563","messageId":"564","endLine":176,"endColumn":25},{"ruleId":"561","severity":1,"message":"608","line":2,"column":32,"nodeType":"563","messageId":"564","endLine":2,"endColumn":43},{"ruleId":"561","severity":1,"message":"623","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":21},{"ruleId":"561","severity":1,"message":"624","line":7,"column":3,"nodeType":"563","messageId":"564","endLine":7,"endColumn":17},{"ruleId":"561","severity":1,"message":"625","line":8,"column":3,"nodeType":"563","messageId":"564","endLine":8,"endColumn":18},{"ruleId":"561","severity":1,"message":"626","line":12,"column":3,"nodeType":"563","messageId":"564","endLine":12,"endColumn":13},{"ruleId":"561","severity":1,"message":"629","line":27,"column":3,"nodeType":"563","messageId":"564","endLine":27,"endColumn":7},{"ruleId":"561","severity":1,"message":"702","line":30,"column":8,"nodeType":"563","messageId":"564","endLine":30,"endColumn":14},{"ruleId":"561","severity":1,"message":"592","line":46,"column":9,"nodeType":"563","messageId":"564","endLine":46,"endColumn":17},{"ruleId":"561","severity":1,"message":"656","line":49,"column":19,"nodeType":"563","messageId":"564","endLine":49,"endColumn":29},{"ruleId":"561","severity":1,"message":"631","line":62,"column":10,"nodeType":"563","messageId":"564","endLine":62,"endColumn":16},{"ruleId":"561","severity":1,"message":"632","line":63,"column":10,"nodeType":"563","messageId":"564","endLine":63,"endColumn":18},{"ruleId":"561","severity":1,"message":"697","line":66,"column":10,"nodeType":"563","messageId":"564","endLine":66,"endColumn":18},{"ruleId":"573","severity":1,"message":"703","line":82,"column":6,"nodeType":"575","endLine":82,"endColumn":8,"suggestions":"704"},{"ruleId":"561","severity":1,"message":"638","line":107,"column":9,"nodeType":"563","messageId":"564","endLine":107,"endColumn":52},{"ruleId":"561","severity":1,"message":"639","line":121,"column":9,"nodeType":"563","messageId":"564","endLine":121,"endColumn":21},{"ruleId":"561","severity":1,"message":"641","line":139,"column":9,"nodeType":"563","messageId":"564","endLine":139,"endColumn":23},{"ruleId":"561","severity":1,"message":"642","line":143,"column":9,"nodeType":"563","messageId":"564","endLine":143,"endColumn":25},{"ruleId":"561","severity":1,"message":"659","line":181,"column":9,"nodeType":"563","messageId":"564","endLine":181,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":182,"column":9,"nodeType":"563","messageId":"564","endLine":182,"endColumn":15},{"ruleId":"561","severity":1,"message":"661","line":183,"column":9,"nodeType":"563","messageId":"564","endLine":183,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":184,"column":9,"nodeType":"563","messageId":"564","endLine":184,"endColumn":16},{"ruleId":"561","severity":1,"message":"647","line":4,"column":3,"nodeType":"563","messageId":"564","endLine":4,"endColumn":19},{"ruleId":"561","severity":1,"message":"705","line":29,"column":3,"nodeType":"563","messageId":"564","endLine":29,"endColumn":14},{"ruleId":"561","severity":1,"message":"623","line":33,"column":8,"nodeType":"563","messageId":"564","endLine":33,"endColumn":21},{"ruleId":"561","severity":1,"message":"629","line":34,"column":10,"nodeType":"563","messageId":"564","endLine":34,"endColumn":14},{"ruleId":"561","severity":1,"message":"706","line":60,"column":7,"nodeType":"563","messageId":"564","endLine":60,"endColumn":47},{"ruleId":"561","severity":1,"message":"707","line":85,"column":9,"nodeType":"563","messageId":"564","endLine":85,"endColumn":20},{"ruleId":"561","severity":1,"message":"708","line":89,"column":10,"nodeType":"563","messageId":"564","endLine":89,"endColumn":21},{"ruleId":"561","severity":1,"message":"709","line":89,"column":23,"nodeType":"563","messageId":"564","endLine":89,"endColumn":37},{"ruleId":"561","severity":1,"message":"710","line":90,"column":10,"nodeType":"563","messageId":"564","endLine":90,"endColumn":19},{"ruleId":"561","severity":1,"message":"711","line":90,"column":21,"nodeType":"563","messageId":"564","endLine":90,"endColumn":33},{"ruleId":"561","severity":1,"message":"712","line":371,"column":10,"nodeType":"563","messageId":"564","endLine":371,"endColumn":26},{"ruleId":"561","severity":1,"message":"713","line":372,"column":10,"nodeType":"563","messageId":"564","endLine":372,"endColumn":29},{"ruleId":"561","severity":1,"message":"714","line":372,"column":31,"nodeType":"563","messageId":"564","endLine":372,"endColumn":53},{"ruleId":"561","severity":1,"message":"623","line":30,"column":8,"nodeType":"563","messageId":"564","endLine":30,"endColumn":21},{"ruleId":"561","severity":1,"message":"629","line":31,"column":10,"nodeType":"563","messageId":"564","endLine":31,"endColumn":14},{"ruleId":"561","severity":1,"message":"706","line":56,"column":7,"nodeType":"563","messageId":"564","endLine":56,"endColumn":47},{"ruleId":"573","severity":1,"message":"649","line":92,"column":6,"nodeType":"575","endLine":92,"endColumn":8,"suggestions":"715"},{"ruleId":"561","severity":1,"message":"716","line":171,"column":26,"nodeType":"563","messageId":"564","endLine":171,"endColumn":43},{"ruleId":"561","severity":1,"message":"717","line":182,"column":10,"nodeType":"563","messageId":"564","endLine":182,"endColumn":21},{"ruleId":"561","severity":1,"message":"718","line":209,"column":9,"nodeType":"563","messageId":"564","endLine":209,"endColumn":28},{"ruleId":"561","severity":1,"message":"661","line":254,"column":9,"nodeType":"563","messageId":"564","endLine":254,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":255,"column":9,"nodeType":"563","messageId":"564","endLine":255,"endColumn":16},{"ruleId":"561","severity":1,"message":"659","line":256,"column":9,"nodeType":"563","messageId":"564","endLine":256,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":257,"column":9,"nodeType":"563","messageId":"564","endLine":257,"endColumn":15},{"ruleId":"561","severity":1,"message":"719","line":2,"column":8,"nodeType":"563","messageId":"564","endLine":2,"endColumn":17},{"ruleId":"561","severity":1,"message":"720","line":10,"column":3,"nodeType":"563","messageId":"564","endLine":10,"endColumn":7},{"ruleId":"561","severity":1,"message":"721","line":17,"column":13,"nodeType":"563","messageId":"564","endLine":17,"endColumn":18},{"ruleId":"561","severity":1,"message":"722","line":23,"column":10,"nodeType":"563","messageId":"564","endLine":23,"endColumn":21},{"ruleId":"561","severity":1,"message":"569","line":25,"column":17,"nodeType":"563","messageId":"564","endLine":25,"endColumn":25},{"ruleId":"561","severity":1,"message":"723","line":26,"column":10,"nodeType":"563","messageId":"564","endLine":26,"endColumn":24},{"ruleId":"561","severity":1,"message":"724","line":27,"column":10,"nodeType":"563","messageId":"564","endLine":27,"endColumn":23},{"ruleId":"561","severity":1,"message":"725","line":64,"column":9,"nodeType":"563","messageId":"564","endLine":64,"endColumn":28},{"ruleId":"561","severity":1,"message":"726","line":69,"column":9,"nodeType":"563","messageId":"564","endLine":69,"endColumn":16},{"ruleId":"561","severity":1,"message":"727","line":81,"column":9,"nodeType":"563","messageId":"564","endLine":81,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":82,"column":18,"nodeType":"580","messageId":"581","endLine":82,"endColumn":20},{"ruleId":"728","severity":1,"message":"729","line":154,"column":15,"nodeType":"607","endLine":159,"endColumn":16},{"ruleId":"605","severity":1,"message":"606","line":165,"column":15,"nodeType":"607","endLine":165,"endColumn":39},{"ruleId":"728","severity":1,"message":"729","line":198,"column":15,"nodeType":"607","endLine":204,"endColumn":16},{"ruleId":"730","severity":1,"message":"731","line":198,"column":15,"nodeType":"607","endLine":204,"endColumn":16},{"ruleId":"728","severity":1,"message":"729","line":209,"column":17,"nodeType":"607","endLine":209,"endColumn":55},{"ruleId":"728","severity":1,"message":"729","line":212,"column":17,"nodeType":"607","endLine":212,"endColumn":55},{"ruleId":"728","severity":1,"message":"729","line":216,"column":17,"nodeType":"607","endLine":216,"endColumn":55},{"ruleId":"730","severity":1,"message":"731","line":222,"column":15,"nodeType":"607","endLine":229,"endColumn":16},{"ruleId":"728","severity":1,"message":"729","line":222,"column":15,"nodeType":"607","endLine":229,"endColumn":16},{"ruleId":"728","severity":1,"message":"729","line":240,"column":23,"nodeType":"607","endLine":240,"endColumn":63},{"ruleId":"728","severity":1,"message":"729","line":253,"column":23,"nodeType":"607","endLine":253,"endColumn":63},{"ruleId":"728","severity":1,"message":"729","line":266,"column":23,"nodeType":"607","endLine":266,"endColumn":63},{"ruleId":"728","severity":1,"message":"729","line":279,"column":23,"nodeType":"607","endLine":279,"endColumn":63},{"ruleId":"605","severity":1,"message":"606","line":306,"column":13,"nodeType":"607","endLine":306,"endColumn":61},{"ruleId":"561","severity":1,"message":"623","line":32,"column":8,"nodeType":"563","messageId":"564","endLine":32,"endColumn":21},{"ruleId":"561","severity":1,"message":"732","line":40,"column":8,"nodeType":"563","messageId":"564","endLine":40,"endColumn":18},{"ruleId":"561","severity":1,"message":"733","line":45,"column":3,"nodeType":"563","messageId":"564","endLine":45,"endColumn":22},{"ruleId":"561","severity":1,"message":"734","line":51,"column":10,"nodeType":"563","messageId":"564","endLine":51,"endColumn":26},{"ruleId":"561","severity":1,"message":"683","line":67,"column":27,"nodeType":"563","messageId":"564","endLine":67,"endColumn":45},{"ruleId":"561","severity":1,"message":"685","line":77,"column":37,"nodeType":"563","messageId":"564","endLine":77,"endColumn":42},{"ruleId":"561","severity":1,"message":"735","line":78,"column":10,"nodeType":"563","messageId":"564","endLine":78,"endColumn":20},{"ruleId":"561","severity":1,"message":"736","line":78,"column":22,"nodeType":"563","messageId":"564","endLine":78,"endColumn":35},{"ruleId":"561","severity":1,"message":"737","line":80,"column":9,"nodeType":"563","messageId":"564","endLine":80,"endColumn":15},{"ruleId":"573","severity":1,"message":"738","line":119,"column":6,"nodeType":"575","endLine":128,"endColumn":4,"suggestions":"739"},{"ruleId":"561","severity":1,"message":"740","line":286,"column":10,"nodeType":"563","messageId":"564","endLine":286,"endColumn":20},{"ruleId":"561","severity":1,"message":"661","line":548,"column":9,"nodeType":"563","messageId":"564","endLine":548,"endColumn":16},{"ruleId":"561","severity":1,"message":"662","line":549,"column":9,"nodeType":"563","messageId":"564","endLine":549,"endColumn":16},{"ruleId":"561","severity":1,"message":"659","line":551,"column":9,"nodeType":"563","messageId":"564","endLine":551,"endColumn":17},{"ruleId":"561","severity":1,"message":"660","line":552,"column":9,"nodeType":"563","messageId":"564","endLine":552,"endColumn":15},{"ruleId":"578","severity":1,"message":"579","line":556,"column":23,"nodeType":"580","messageId":"581","endLine":556,"endColumn":25},{"ruleId":"578","severity":1,"message":"579","line":559,"column":23,"nodeType":"580","messageId":"581","endLine":559,"endColumn":25},{"ruleId":"561","severity":1,"message":"741","line":574,"column":9,"nodeType":"563","messageId":"564","endLine":574,"endColumn":52},{"ruleId":"578","severity":1,"message":"579","line":690,"column":29,"nodeType":"580","messageId":"581","endLine":690,"endColumn":31},{"ruleId":"561","severity":1,"message":"742","line":863,"column":10,"nodeType":"563","messageId":"564","endLine":863,"endColumn":23},{"ruleId":"561","severity":1,"message":"743","line":863,"column":25,"nodeType":"563","messageId":"564","endLine":863,"endColumn":41},{"ruleId":"578","severity":1,"message":"579","line":875,"column":32,"nodeType":"580","messageId":"581","endLine":875,"endColumn":34},{"ruleId":"561","severity":1,"message":"676","line":12,"column":3,"nodeType":"563","messageId":"564","endLine":12,"endColumn":8},{"ruleId":"561","severity":1,"message":"623","line":27,"column":8,"nodeType":"563","messageId":"564","endLine":27,"endColumn":21},{"ruleId":"561","severity":1,"message":"744","line":40,"column":8,"nodeType":"563","messageId":"564","endLine":40,"endColumn":22},{"ruleId":"561","severity":1,"message":"745","line":44,"column":8,"nodeType":"563","messageId":"564","endLine":44,"endColumn":18},{"ruleId":"561","severity":1,"message":"746","line":45,"column":8,"nodeType":"563","messageId":"564","endLine":45,"endColumn":25},{"ruleId":"561","severity":1,"message":"690","line":77,"column":10,"nodeType":"563","messageId":"564","endLine":77,"endColumn":25},{"ruleId":"561","severity":1,"message":"691","line":77,"column":27,"nodeType":"563","messageId":"564","endLine":77,"endColumn":45},{"ruleId":"561","severity":1,"message":"747","line":86,"column":33,"nodeType":"563","messageId":"564","endLine":86,"endColumn":57},{"ruleId":"561","severity":1,"message":"748","line":87,"column":30,"nodeType":"563","messageId":"564","endLine":87,"endColumn":51},{"ruleId":"561","severity":1,"message":"685","line":88,"column":10,"nodeType":"563","messageId":"564","endLine":88,"endColumn":15},{"ruleId":"561","severity":1,"message":"749","line":88,"column":17,"nodeType":"563","messageId":"564","endLine":88,"endColumn":25},{"ruleId":"561","severity":1,"message":"750","line":90,"column":22,"nodeType":"563","messageId":"564","endLine":90,"endColumn":35},{"ruleId":"561","severity":1,"message":"656","line":91,"column":19,"nodeType":"563","messageId":"564","endLine":91,"endColumn":29},{"ruleId":"561","severity":1,"message":"751","line":100,"column":10,"nodeType":"563","messageId":"564","endLine":100,"endColumn":26},{"ruleId":"561","severity":1,"message":"752","line":106,"column":34,"nodeType":"563","messageId":"564","endLine":106,"endColumn":45},{"ruleId":"573","severity":1,"message":"753","line":130,"column":6,"nodeType":"575","endLine":130,"endColumn":45,"suggestions":"754"},{"ruleId":"573","severity":1,"message":"755","line":146,"column":6,"nodeType":"575","endLine":146,"endColumn":64,"suggestions":"756"},{"ruleId":"573","severity":1,"message":"757","line":172,"column":6,"nodeType":"575","endLine":172,"endColumn":43,"suggestions":"758"},{"ruleId":"573","severity":1,"message":"759","line":202,"column":6,"nodeType":"575","endLine":202,"endColumn":43,"suggestions":"760"},{"ruleId":"561","severity":1,"message":"622","line":236,"column":9,"nodeType":"563","messageId":"564","endLine":236,"endColumn":50},{"ruleId":"561","severity":1,"message":"761","line":398,"column":10,"nodeType":"563","messageId":"564","endLine":398,"endColumn":27},{"ruleId":"578","severity":1,"message":"579","line":533,"column":27,"nodeType":"580","messageId":"581","endLine":533,"endColumn":29},{"ruleId":"561","severity":1,"message":"762","line":664,"column":10,"nodeType":"563","messageId":"564","endLine":664,"endColumn":22},{"ruleId":"561","severity":1,"message":"763","line":726,"column":9,"nodeType":"563","messageId":"564","endLine":726,"endColumn":19},{"ruleId":"561","severity":1,"message":"586","line":1,"column":17,"nodeType":"563","messageId":"564","endLine":1,"endColumn":26},{"ruleId":"561","severity":1,"message":"570","line":3,"column":8,"nodeType":"563","messageId":"564","endLine":3,"endColumn":9},{"ruleId":"561","severity":1,"message":"764","line":5,"column":10,"nodeType":"563","messageId":"564","endLine":5,"endColumn":23},{"ruleId":"561","severity":1,"message":"585","line":7,"column":10,"nodeType":"563","messageId":"564","endLine":7,"endColumn":28},{"ruleId":"561","severity":1,"message":"765","line":11,"column":3,"nodeType":"563","messageId":"564","endLine":11,"endColumn":18},{"ruleId":"561","severity":1,"message":"766","line":21,"column":3,"nodeType":"563","messageId":"564","endLine":21,"endColumn":17},{"ruleId":"561","severity":1,"message":"767","line":22,"column":3,"nodeType":"563","messageId":"564","endLine":22,"endColumn":16},{"ruleId":"561","severity":1,"message":"768","line":29,"column":8,"nodeType":"563","messageId":"564","endLine":29,"endColumn":16},{"ruleId":"561","severity":1,"message":"769","line":34,"column":8,"nodeType":"563","messageId":"564","endLine":34,"endColumn":32},{"ruleId":"561","severity":1,"message":"770","line":35,"column":8,"nodeType":"563","messageId":"564","endLine":35,"endColumn":20},{"ruleId":"561","severity":1,"message":"771","line":36,"column":8,"nodeType":"563","messageId":"564","endLine":36,"endColumn":16},{"ruleId":"561","severity":1,"message":"772","line":37,"column":8,"nodeType":"563","messageId":"564","endLine":37,"endColumn":16},{"ruleId":"561","severity":1,"message":"587","line":38,"column":8,"nodeType":"563","messageId":"564","endLine":38,"endColumn":18},{"ruleId":"561","severity":1,"message":"773","line":42,"column":7,"nodeType":"563","messageId":"564","endLine":42,"endColumn":20},{"ruleId":"561","severity":1,"message":"594","line":47,"column":19,"nodeType":"563","messageId":"564","endLine":47,"endColumn":29},{"ruleId":"561","severity":1,"message":"678","line":48,"column":11,"nodeType":"563","messageId":"564","endLine":48,"endColumn":12},{"ruleId":"561","severity":1,"message":"774","line":49,"column":9,"nodeType":"563","messageId":"564","endLine":49,"endColumn":17},{"ruleId":"561","severity":1,"message":"775","line":73,"column":9,"nodeType":"563","messageId":"564","endLine":73,"endColumn":22},{"ruleId":"728","severity":1,"message":"729","line":89,"column":17,"nodeType":"607","endLine":96,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":100,"column":17,"nodeType":"607","endLine":103,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":117,"column":17,"nodeType":"607","endLine":120,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":134,"column":17,"nodeType":"607","endLine":137,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":151,"column":17,"nodeType":"607","endLine":154,"endColumn":18},{"ruleId":"728","severity":1,"message":"729","line":157,"column":17,"nodeType":"607","endLine":164,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":168,"column":17,"nodeType":"607","endLine":171,"endColumn":18},{"ruleId":"728","severity":1,"message":"729","line":175,"column":17,"nodeType":"607","endLine":182,"endColumn":18},{"ruleId":"730","severity":1,"message":"776","line":186,"column":17,"nodeType":"607","endLine":189,"endColumn":18},{"ruleId":"561","severity":1,"message":"777","line":317,"column":9,"nodeType":"563","messageId":"564","endLine":317,"endColumn":22},{"ruleId":"561","severity":1,"message":"726","line":322,"column":9,"nodeType":"563","messageId":"564","endLine":322,"endColumn":16},{"ruleId":"561","severity":1,"message":"778","line":334,"column":9,"nodeType":"563","messageId":"564","endLine":334,"endColumn":28},{"ruleId":"561","severity":1,"message":"779","line":454,"column":9,"nodeType":"563","messageId":"564","endLine":454,"endColumn":24},{"ruleId":"578","severity":1,"message":"579","line":455,"column":23,"nodeType":"580","messageId":"581","endLine":455,"endColumn":25},{"ruleId":"578","severity":1,"message":"579","line":458,"column":23,"nodeType":"580","messageId":"581","endLine":458,"endColumn":25},{"ruleId":"561","severity":1,"message":"780","line":2,"column":8,"nodeType":"563","messageId":"564","endLine":2,"endColumn":19},{"ruleId":"561","severity":1,"message":"781","line":13,"column":7,"nodeType":"563","messageId":"564","endLine":13,"endColumn":38},{"ruleId":"561","severity":1,"message":"782","line":33,"column":7,"nodeType":"563","messageId":"564","endLine":33,"endColumn":42},{"ruleId":"561","severity":1,"message":"783","line":59,"column":7,"nodeType":"563","messageId":"564","endLine":59,"endColumn":49},{"ruleId":"565","replacedBy":"784"},{"ruleId":"567","replacedBy":"785"},{"ruleId":"786","severity":1,"message":"787","line":17,"column":5,"nodeType":"788","messageId":"581","endLine":18,"endColumn":23},{"ruleId":"578","severity":1,"message":"789","line":55,"column":16,"nodeType":"580","messageId":"581","endLine":55,"endColumn":18},{"ruleId":"565","replacedBy":"790"},{"ruleId":"567","replacedBy":"791"},{"ruleId":"565","replacedBy":"792"},{"ruleId":"567","replacedBy":"793"},{"ruleId":"561","severity":1,"message":"609","line":1,"column":10,"nodeType":"563","messageId":"564","endLine":1,"endColumn":21},{"ruleId":"561","severity":1,"message":"610","line":2,"column":10,"nodeType":"563","messageId":"564","endLine":2,"endColumn":19},"@typescript-eslint/no-unused-vars","'i18n' is defined but never used.","Identifier","unusedVar","no-native-reassign",["794"],"no-negated-in-lhs",["795"],"'useState' is defined but never used.","'$' is defined but never used.","'roleType' is defined but never used.","'hist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["796"],["797"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Nav' is defined but never used.","'logo_nuage' is defined but never used.","'fetchNavigationBar' is defined but never used.","'sideNavigationData' is defined but never used.","'useEffect' is defined but never used.","'MainHeader' is defined but never used.","'navStyles' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'doctype' is assigned a value but never used.","'setDoctype' is assigned a value but never used.","'roleType' is assigned a value but never used.","'navData' is assigned a value but never used.","'setNavData' is assigned a value but never used.","'navigation' is assigned a value but never used.","'selectedNavKey' is assigned a value but never used.","'onLinkClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"798","text":"799"},"'path' is assigned a value but never used.",{"range":"800","text":"799"},"'setsidebartype' is assigned a value but never used.","'TextField' is defined but never used.","'login' is defined but never used.","'banner_main' is defined but never used.","'textfelidStyle' is assigned a value but never used.","'WelcomeHeader' is defined but never used.","'add_JobHistory' is defined but never used.","'fetchJobHistory' is defined but never used.","'DatePicker' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'Text' is defined but never used.","'filtersById' is assigned a value but never used.","'toDate' is assigned a value but never used.","'fromDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByName' and 'roleType'. Either include them or remove the dependency array.",["801"],"'cancelIcon' is assigned a value but never used.","'iconButtonStyles' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'datePickerStyle' is assigned a value but never used.","'controlClass' is assigned a value but never used.","'onChangeInput' is assigned a value but never used.","'onchangeToDate' is assigned a value but never used.","'onchangeFromDate' is assigned a value but never used.","'Dropdown' is defined but never used.","'IDatePickerStyles' is defined but never used.","'IDropdownOption' is defined but never used.","'IDropdownStyles' is defined but never used.","'ITextFieldStyles' is defined but never used.","'mergeStyleSets' is defined but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limitStart', 'orderBy', and 'orderByField'. Either include them or remove the dependency array.",["802"],"'getTheme' is defined but never used.","'IIconProps' is defined but never used.","'IModalStyles' is defined but never used.","'fetchGoalData' is defined but never used.","'goalOptions' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByName', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["803"],"'userName' is assigned a value but never used.","'userId' is assigned a value but never used.","'dateNow' is assigned a value but never used.","'timeNow' is assigned a value but never used.","'errMsgOrder' is assigned a value but never used.","'setErrMsgOrder' is assigned a value but never used.","'errMsgGoal' is assigned a value but never used.","'setErrMsgGoal' is assigned a value but never used.","'errMsgGoalType' is assigned a value but never used.","'setErrMsgGoalType' is assigned a value but never used.","'errMsgMeasure' is assigned a value but never used.","'setErrMsgMeasure' is assigned a value but never used.","'errMsgWeightage' is assigned a value but never used.","'setErrMsgWeightage' is assigned a value but never used.","'errMsgKra' is assigned a value but never used.","'setErrMsgKra' is assigned a value but never used.","'ITag' is defined but never used.","'Label' is defined but never used.","'TagPicker' is defined but never used.","'t' is assigned a value but never used.","'setLimitStart' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","'setLimitPageLength' is assigned a value but never used.","'limitStart' is assigned a value but never used.","'count' is assigned a value but never used.","'comboBoxRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order_by'. Either include it or remove the dependency array.",["804"],["805"],"'employeeDetails' is assigned a value but never used.","'setEmployeeDetails' is assigned a value but never used.","'jobHistoryData' is assigned a value but never used.","'setJobHistoryData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById' and 'roleType'. Either include them or remove the dependency array.",["806"],["807"],"'goalData' is assigned a value but never used.","'setGoalData' is assigned a value but never used.",["808"],"'goalType' is assigned a value but never used.","'onChangeGoalType' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["809"],"'ColorPicker' is defined but never used.","'dropdownStyles' is assigned a value but never used.","'updateColor' is assigned a value but never used.","'showPreview' is assigned a value but never used.","'setShowPreview' is assigned a value but never used.","'alphaType' is assigned a value but never used.","'setAlphaType' is assigned a value but never used.","'errMsgReviewDate' is assigned a value but never used.","'errMsgAppraisalDate' is assigned a value but never used.","'setErrMsgAppraisalDate' is assigned a value but never used.",["810"],"'setFirstDayOfWeek' is assigned a value but never used.","'formateType' is assigned a value but never used.","'onChangeFormateType' is assigned a value but never used.","'logo_icon' is defined but never used.","'Link' is defined but never used.","'Utils' is defined but never used.","'setMenuType' is defined but never used.","'useTranslation' is defined but never used.","'changeLanguge' is defined but never used.","'handleCustomSidebar' is assigned a value but never used.","'history' is assigned a value but never used.","'renderMenuLogo' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'ZoomInIcon' is defined but never used.","'deleteAppraisalByID' is defined but never used.","'delete_appraisal' is defined but never used.","'formatDate' is assigned a value but never used.","'setFormatDate' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderByField'. Either include them or remove the dependency array.",["811"],"'updateData' is assigned a value but never used.","'renderRow' is assigned a value but never used.","'collapsedMenu' is assigned a value but never used.","'setCollapsedMenu' is assigned a value but never used.","'ArrowRightIcon' is defined but never used.","'jobHistory' is defined but never used.","'JobHistoryDetails' is defined but never used.","'setLimitStartDevelopment' is assigned a value but never used.","'setOrderByDevelopment' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setTotalCount' is assigned a value but never used.","'developmentCount' is assigned a value but never used.","'total_count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByApprisal' and 'filtersById'. Either include them or remove the dependency array.",["812"],"React Hook useEffect has missing dependencies: 'dispatch' and 'filtersById'. Either include them or remove the dependency array.",["813"],"React Hook useEffect has missing dependencies: 'filtersById' and 'orderBy'. Either include them or remove the dependency array.",["814"],"React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLengthDevelopment', 'limitStartDevelopment', 'orderByDevelopment', 'params.appraisalId', and 'params.employeeId'. Either include them or remove the dependency array.",["815"],"'deleteItemJobName' is assigned a value but never used.","'deleteItemId' is assigned a value but never used.","'operations' is assigned a value but never used.","'customSideBar' is defined but never used.","'setCollapedMenu' is defined but never used.","'SidebarContent' is defined but never used.","'SidebarFooter' is defined but never used.","'WorkIcon' is defined but never used.","'RadioButtonUncheckedIcon' is defined but never used.","'MenuOpenIcon' is defined but never used.","'MenuIcon' is defined but never used.","'menuData' is defined but never used.","'handleSideBar' is assigned a value but never used.","'menuType' is assigned a value but never used.","'sideMenuLocal' is assigned a value but never used.","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","'renderNavData' is assigned a value but never used.","'checkMenuPermission' is assigned a value but never used.","'handlemenuClick' is assigned a value but never used.","'accessToken' is defined but never used.","'menuProps' is assigned a value but never used.","'itemsWithHeading' is assigned a value but never used.","'breadCrumStyle' is assigned a value but never used.",["794"],["795"],"no-duplicate-case","Duplicate case label.","SwitchCase","Expected '!==' and instead saw '!='.",["794"],["795"],["794"],["795"],"no-global-assign","no-unsafe-negation",{"desc":"816","fix":"817"},{"desc":"816","fix":"818"},[408,423],"",[73,88],{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"829","fix":"831"},{"desc":"823","fix":"832"},{"desc":"833","fix":"834"},{"desc":"821","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"840","fix":"841"},{"desc":"842","fix":"843"},{"desc":"844","fix":"845"},"Update the dependencies array to be: [dispatch]",{"range":"846","text":"847"},{"range":"848","text":"847"},"Update the dependencies array to be: [filtersByName, roleType]",{"range":"849","text":"850"},"Update the dependencies array to be: [filtersById, limitPageLength, limitStart, orderBy, orderByField]",{"range":"851","text":"852"},"Update the dependencies array to be: [filtersByName, limitPageLength, limit_start, orderBy]",{"range":"853","text":"854"},"Update the dependencies array to be: [order_by]",{"range":"855","text":"856"},"Update the dependencies array to be: [doctype, limit_start, limit, filterByStatus, roleType, filterByName, dispatch]",{"range":"857","text":"858"},"Update the dependencies array to be: [filtersById, roleType]",{"range":"859","text":"860"},{"range":"861","text":"860"},{"range":"862","text":"854"},"Update the dependencies array to be: [filtersById, limitPageLength, limit_start, orderBy]",{"range":"863","text":"864"},{"range":"865","text":"852"},"Update the dependencies array to be: [limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, dispatch, orderByField]",{"range":"866","text":"867"},"Update the dependencies array to be: [doctype, limit_start, limit, roleType, filtersById, filtersByApprisal]",{"range":"868","text":"869"},"Update the dependencies array to be: [roleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",{"range":"870","text":"871"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",{"range":"872","text":"873"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]",{"range":"874","text":"875"},[2832,2834],"[dispatch]",[3405,3407],[1741,1743],"[filtersByName, roleType]",[1562,1564],"[filtersById, limitPageLength, limitStart, orderBy, orderByField]",[1713,1715],"[filtersByName, limitPageLength, limit_start, orderBy]",[2300,2302],"[order_by]",[3209,3278],"[doctype, limit_start, limit, filterByStatus, roleType, filterByName, dispatch]",[1896,1898],"[filtersById, roleType]",[1817,1819],[1967,1969],[2317,2319],"[filtersById, limitPageLength, limit_start, orderBy]",[2510,2512],[4006,4183],"[limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, dispatch, orderByField]",[4521,4560],"[doctype, limit_start, limit, roleType, filtersById, filtersByApprisal]",[4892,4950],"[roleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",[5690,5727],"[limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",[6595,6632],"[limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]"]