[{"/home/pratik/Documents/mega-soft/src/index.tsx":"1","/home/pratik/Documents/mega-soft/src/reportWebVitals.ts":"2","/home/pratik/Documents/mega-soft/src/App.tsx":"3","/home/pratik/Documents/mega-soft/src/redux/index.tsx":"4","/home/pratik/Documents/mega-soft/src/Navigation.tsx":"5","/home/pratik/Documents/mega-soft/src/components/AddApprisalForm/index.tsx":"6","/home/pratik/Documents/mega-soft/src/views/Admin/index.tsx":"7","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx":"8","/home/pratik/Documents/mega-soft/src/Header.tsx":"9","/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx":"10","/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx":"11","/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx":"12","/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx":"13","/home/pratik/Documents/mega-soft/src/components/WelcomeHeader/index.tsx":"14","/home/pratik/Documents/mega-soft/src/redux/actions/index.tsx":"15","/home/pratik/Documents/mega-soft/src/views/UpdateAppraisal/index.tsx":"16"},{"size":615,"mtime":1610818112350,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1610466480732,"results":"19","hashOfConfig":"18"},{"size":773,"mtime":1611487893476,"results":"20","hashOfConfig":"18"},{"size":205,"mtime":1611071583172,"results":"21","hashOfConfig":"18"},{"size":5423,"mtime":1611243440385,"results":"22","hashOfConfig":"18"},{"size":18388,"mtime":1611500231358,"results":"23","hashOfConfig":"18"},{"size":16731,"mtime":1611510326154,"results":"24","hashOfConfig":"18"},{"size":290,"mtime":1611256725080,"results":"25","hashOfConfig":"18"},{"size":2453,"mtime":1611243440385,"results":"26","hashOfConfig":"18"},{"size":1209,"mtime":1611510693462,"results":"27","hashOfConfig":"18"},{"size":793,"mtime":1610987455768,"results":"28","hashOfConfig":"18"},{"size":418,"mtime":1611257666711,"results":"29","hashOfConfig":"18"},{"size":442,"mtime":1611243440385,"results":"30","hashOfConfig":"18"},{"size":230,"mtime":1611157599461,"results":"31","hashOfConfig":"18"},{"size":2313,"mtime":1611510294162,"results":"32","hashOfConfig":"18"},{"size":18506,"mtime":1611511429112,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fk01iq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pratik/Documents/mega-soft/src/index.tsx",[],["72","73"],"/home/pratik/Documents/mega-soft/src/reportWebVitals.ts",[],"/home/pratik/Documents/mega-soft/src/App.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/index.tsx",[],"/home/pratik/Documents/mega-soft/src/Navigation.tsx",["74","75","76","77","78"],"import * as React from \"react\";\nimport {\n  Nav,\n  INavLink,\n  INavStyles,\n  INavLinkGroup,\n} from \"office-ui-fabric-react/lib/Nav\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { useHistory, matchPath } from \"react-router-dom\";\n\nimport hrms_logo from \"./assets/img/hrms_logo.gif\";\n\ninitializeIcons();\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: \"Appraisal\",\n        url: \"/\",\n        key: \"key01\",\n        // icon: \"UpgradeAnalysis\",\n        links: [\n          {\n            name: \"Setup\",\n            url: \"/apprisal/setup\",\n            icon: \"Settings\",\n            key: \"key02\",\n          },\n          {\n            name: \"Ratings\",\n            url: \"/apprisal/rating\",\n            icon: \"6PointStar\",\n            key: \"key03\",\n          },\n          {\n            name: \"Periods\",\n            url: \"/apprisal/periods\",\n            icon: \"Timer\",\n            key: \"key04\",\n          },\n          {\n            name: \"Goals\",\n            url: \"/apprisal/goals\",\n            icon: \"6PointStar\",\n            key: \"key05\",\n          },\n          {\n            name: \"Competencies\",\n            url: \"/apprisal/competencies\",\n            icon: \"6PointStar\",\n            key: \"key06\",\n          },\n          {\n            name: \"Development Plan\",\n            url: \"/apprisal/developmentPlan\",\n            icon: \"TestPlan\",\n            key: \"key07\",\n          },\n          {\n            name: \"Release Appraisal\",\n            url: \"/apprisal/releaseApprisal\",\n            icon: \"ReleaseGate\",\n            key: \"key08\",\n          },\n          {\n            name: \"Market Bench Marketing\",\n            url: \"/apprisal/marketBenchMarketing\",\n            icon: \"Market\",\n            key: \"key09\",\n          },\n        ],\n        isExpanded: false,\n      },\n      {\n        name: \"Manage\",\n        url: \"/manage\",\n        key: \"key10\",\n        // icon:'MedicationAdmin',\n        links: [\n          {\n            name: \"Team Goal Setting\",\n            url: \"/manage/teamGoalSetting\",\n            icon: \"Settings\",\n            key: \"key11\",\n          },\n          {\n            name: \"Team assess\",\n            url: \"/manage/teamAssess\",\n            icon: \"AssessmentGroup\",\n            key: \"key12\",\n          },\n        ],\n        isExpanded: false,\n      },\n      {\n        name: \"Comfirmation\",\n        url: \"/comfirmation\",\n        key: \"key13\",\n        expandAriaLabel: \"Expand Admin section\",\n        collapseAriaLabel: \"Collapse admin section\",\n        links: [\n          {\n            name: \"Confirmation Status\",\n            url: \"/confirmation/status\",\n            icon: \"SplitObject\",\n            key: \"key14\",\n          },\n          {\n            name: \"Release\",\n            url: \"/confirmation/release\",\n            key: \"key15\",\n            icon: \"ReleaseGate\",\n          },\n          {\n            name: \"Approval\",\n            url: \"/confirmation/approval\",\n            key: \"key16\",\n            icon: \"DocumentApproval\",\n          },\n          {\n            name: \"Letter\",\n            url: \"/confirmation/letter\",\n            key: \"key17\",\n            icon: \"DietPlanNotebook\",\n          },\n          {\n            name: \"Probation Letter\",\n            url: \"/confirmation/probationLetter\",\n            key: \"key18\",\n            icon: \"QuickNote\",\n          },\n        ],\n        isExpanded: false,\n      },\n    ],\n  },\n];\n\nconst navStyles: Partial<INavStyles> = {\n  root: {\n    // border: \"1px solid black\",\n    // selectors:{'&:hover': { color:\"#040848\" } }\n  },\n  link: {\n    width: \"200px\",\n  },\n  linkText: {\n    color: \"#FFF\",\n    // fontSize: 12,\n    selectors: {\n      \"&:hover\": { color: \"#FFF\" },\n    },\n  },\n  chevronIcon: {\n    color: \"#FFF\",\n  },\n  // navItems: {\n  //     color: '#FFF',\n  //     '&:hover': { color: 'red' },\n  // }\n  compositeLink: {\n    selectors: {\n      \"&:hover\": {\n        \".ms-Button\": {\n          background: \"#0372c7\",\n        },\n        \".ms-Nav-linkText\": {\n          color: \"#FFF\", // your real styling here\n        },\n        \".ms-Icon\": {\n          color: \"#FFF\", // your real styling here\n        },\n      },\n    },\n  },\n};\n\nfunction Navigation() {\n  // const { children } = props;\n  let history = useHistory();\n  const [selectedNavKey, setSelectedNavKey] = React.useState(\"\");\n  const onLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    setSelectedNavKey(item?.key || \"\");\n  };\n  React.useEffect(() => {\n    navLinkGroups[0].links.map((item) => {\n      if (item.links) {\n        item.links.map((subItem) => {\n          if (\n            matchPath(history.location.pathname, {\n              path: subItem.url,\n              exact: true,\n            })\n          ) {\n            setSelectedNavKey(subItem?.key || \"\");\n            return;\n          }\n        });\n      } else {\n        if (\n          matchPath(history.location.pathname, {\n            path: item.url,\n            exact: true,\n          })\n        ) {\n          setSelectedNavKey(item?.key || \"\");\n          return;\n        }\n      }\n    });\n  }, [history.location.pathname]);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"main-logo\">\n        <img src={hrms_logo} />\n      </div>\n      <Nav\n        onLinkClick={onLinkClick}\n        selectedKey={selectedNavKey}\n        ariaLabel=\"Nav basic example\"\n        styles={navStyles}\n        groups={navLinkGroups}\n      />\n    </div>\n  );\n}\n\nexport default Navigation;\n","/home/pratik/Documents/mega-soft/src/components/AddApprisalForm/index.tsx",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { useEffect, useState } from \"react\";\nimport {\n  TextField,\n  ITextFieldStyles,\n} from \"office-ui-fabric-react/lib/TextField\";\nimport { useParams } from \"react-router-dom\";\nimport { Stack, IStackStyles } from \"office-ui-fabric-react/lib/Stack\";\nimport \"./style.css\";\nimport {\n  DatePicker,\n  DayOfWeek,\n  Dropdown,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IDatePickerStrings,\n  IDatePickerStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  Label,\n  Link,\n  mergeStyles,\n  mergeStyleSets,\n  PrimaryButton,\n  Separator,\n} from \"office-ui-fabric-react\";\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\nimport { useBoolean } from \"@uifabric/react-hooks\";\nimport WelcomeHeader from \"../WelcomeHeader\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport Header from \"../../Header\";\nimport moment from \"moment\";\n\nimport \"./style.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { addApprisal, add_apprisal } from \"../../redux/actions/apprisal\";\n\nconst formateTypeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Sales Employees\" },\n  { key: \"key3\", text: \"HR\" },\n  { key: \"key4\", text: \"Management\" },\n];\n\nconst reviewFrequencyOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Monthly\" },\n  { key: \"key2\", text: \"Yearly\" },\n];\n\nconst typeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Annual Appraisal\" },\n  { key: \"key2\", text: \"Quarterly Appraisal\" },\n];\n\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  dropdown: {\n    width: 170,\n    border: \"0px\",\n  },\n};\n\n// interface ParamTypes {\n//   id: string\n// }\n\nfunction Form(props: any) {\n  // const params = useParams<ParamTypes>();\n  // console.log(\"id => \", params.id);\n  const stackTokens = { childrenGap: 10 };\n\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      \".ms-TextField-wrapper\": {\n        borderRadius: \"10px\",\n      },\n\n      \".ms-TextField-fieldGroup fieldGroup-195\": {\n        borderRadius: \"10px\",\n      },\n    },\n  };\n  const [isChecked, setIsChecked] = React.useState(true);\n\n  const DayPickerStrings: IDatePickerStrings = {\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ],\n\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n\n    goToToday: \"Go to today\",\n    prevMonthAriaLabel: \"Go to previous month\",\n    nextMonthAriaLabel: \"Go to next month\",\n    prevYearAriaLabel: \"Go to previous year\",\n    nextYearAriaLabel: \"Go to next year\",\n    closeButtonAriaLabel: \"Close date picker\",\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const [firstDayOfWeek, setFirstDayOfWeek] = React.useState(DayOfWeek.Sunday);\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n\n  const [claimsData, setClaimsData] = useState({\n    id: \"\",\n    description: \"\",\n    owner: \"\",\n    kraSettingGoal: false,\n    kraSettingCompetencies: false,\n    kraSettingDevelopmentPlan: false,\n    kraSettingSummary: false,\n    assessmentGoal: false,\n    assessmentCompetencies: false,\n    assessmentDevelopmentPlan: false,\n    assessmentSummary: false,\n  });\n\n  const [selectedType, setSelectedType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [reviewFrequency, setReviewFrequency] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [formateType, setFormateType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  function onChangeCheckbox(\n    ev?: React.FormEvent<HTMLElement>,\n    isChecked?: boolean\n  ) {\n    const target = ev?.target as HTMLInputElement;\n    setClaimsData({\n      ...claimsData,\n      [target.name]: isChecked || false,\n    });\n  }\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setClaimsData({\n      ...claimsData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onChangeType = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setSelectedType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n  // console.log(\"type==>\", selectedType.text )\n\n  const onChangeReviewFrequency = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewFrequency(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const onChangeFormateType = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setFormateType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push('/')\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    { text: \"Appraisal\", key: \"d2\", isCurrentItem: true, as: \"h4\", onClick: _onBreadcrumbItemClicked },\n    { text: \"Add Appraisal\", key: \"d3\", as: \"h4\" },\n  ];\n\n  const [dateReview, setDateReview] = useState<Date | null | undefined>(null);\n  const [dateAppraisal, setdDateAppraisal] = useState<Date | null | undefined>(\n    null\n  );\n\n  const reviewFromDate = (date: Date | null | undefined): void => {\n    const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n    // console.log(\"date==>\", reviewFrequencyDate);\n    setDateReview(reviewFrequencyDate);\n  };\n  const appraisalToDate = (date: Date | null | undefined): void => {\n    const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n    // console.log(\"date==>\", reviewFrequencyDate);\n    setdDateAppraisal(appraisalDate);\n  };\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const history = useHistory();\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      marginTop: \"-1rem\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const rolesOption: IDropdownOption[] = [\n    { key: \"key1\", text: \"HR\" },\n    { key: \"key2\", text: \"Manager\" },\n    { key: \"key3\", text: \"Employee\" },\n  ];\n\n  const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const handleRoles = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n  // const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [errMsgDescription, setErrMsgDescription] = useState(\"\");\n  const [errMsgOwner, setErrMsgOwner] = useState(\"\");\n  const [errMsgFormatType, setErrMsgFormatType] = useState(\"\");\n  const [errMsgType, setErrMsgType] = useState(\"\");\n  const [errMsgReviewFrequency, setErrMsgReviewFrequency] = useState(\"\");\n\n  const handleAddApprisal = () => {\n    if (claimsData.id === \"\") {\n      setErrMsg(\"ID is required\");\n    }\n    if (claimsData.description === \"\") {\n      setErrMsgDescription(\"Description is required\");\n    }\n    if (claimsData.owner === \"\") {\n      setErrMsgOwner(\"Owner is required\");\n    }\n    if (formateType.text === \"\") {\n      setErrMsgFormatType(\"Select format Type\");\n    }\n    if (reviewFrequency.text === \"\") {\n      setErrMsgReviewFrequency(\"Select review Frequency\");\n    }\n    if (selectedType.text === \"\") {\n      setErrMsgType(\"Select type\");\n    }\n    const addQuery = {\n      id: claimsData.id,\n      appraisal_description: claimsData.description,\n      description: \"22\",\n      format_type: formateType.text,\n      review_frequency: reviewFrequency.text,\n      type: selectedType.text,\n      kra_settings_tab_goals: claimsData.kraSettingGoal,\n      kra_settings_tab_competencies: claimsData.kraSettingCompetencies,\n      kra_settings_tab_development_plan: claimsData.kraSettingDevelopmentPlan,\n      kra_settings_tab_summary: claimsData.kraSettingSummary,\n      assessment_tab_goals: claimsData.assessmentGoal,\n      assessment_tab_competencies: claimsData.assessmentCompetencies,\n      assessment_tab_development_plan: claimsData.assessmentCompetencies,\n      assessment_tab_summary: claimsData.assessmentSummary,\n      route: \"appraisal/BB00002\",\n      review_from: dateReview,\n      appraisal_to: dateAppraisal,\n      appraisal_owner: claimsData.owner,\n    };\n    // console.log(\"addQueary=>\", addQuery);\n    add_apprisal(addQuery).then((response) => {\n      console.log(\"response=>\", response.data);\n      if (response?.status === 200) {\n        history.push(\"/\");\n      }\n      // else {\n      //   console.log(\"then error msg btnClick==>\", response);\n      // }\n    });\n    // .catch((err) => {\n    //   console.log(\"Error in btnClick=>\", err);\n    // });\n  };\n\n  return (\n    <div className=\"view\">\n      <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Dropdown\n              options={rolesOption}\n              onChange={handleRoles}\n              className=\"rolesDropDown\"\n              styles={dropdownStyles}\n              style={{ marginLeft: \"2rem\" }}\n            />\n            {/* <div style={{ display: \"flex\", marginRight: \"10px\" }}>\n              <Text style={{ marginRight: \"5px\" }}>Date :</Text>\n              <Text>{dateNow}</Text>\n            </div>\n            <Text style={{ marginRight: \"5px\" }}>Time : </Text>\n            <Text>{timeNow}</Text> */}\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n            {/* <Text style={{ marginRight: \"5px\" }}>Time:</Text> */}\n            {/* <Text style={{ marginRight: \"5px\" }}>{timeNow}</Text> */}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              padding: \"10px\",\n              // marginLeft: \"1rem\",\n            }}\n          >\n            <Link>Log Out</Link>\n            {/* <TooltipHost content=\"Settings\">\n              <FontIcon iconName=\"Settings\" />\n            </TooltipHost> */}\n          </div>\n        </div>\n      </WelcomeHeader>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"body has-right-panel\">\n          <div className=\"form-container\">\n            <div className=\"row\">\n              <TextField\n                required\n                placeholder=\"ID\"\n                value={claimsData.id}\n                errorMessage={errMsg}\n                name=\"id\"\n                label=\"Id\"\n                onChange={onChangeInput}\n                className=\"flexGrowTextInput\"\n              />\n              <TextField\n                required\n                placeholder=\"Description\"\n                label=\"Description\"\n                value={claimsData.description}\n                errorMessage={errMsgDescription}\n                // styles={textfelidStyle}\n                className=\"flexGrow\"\n                name=\"description\"\n                onChange={onChangeInput}\n              />\n            </div>\n            {/* <div className=\"input-form\"></div> */}\n            <div className=\"row\">\n              <DatePicker\n                label=\"Review From\"\n                className={`${controlClass.control} flexGrow`}\n                firstDayOfWeek={firstDayOfWeek}\n                strings={DayPickerStrings}\n                onSelectDate={reviewFromDate}\n                placeholder=\"Select a date\"\n                ariaLabel=\"Select a date\"\n                styles={datePickerStyle}\n              />\n              <DatePicker\n                label=\"Appraisal To\"\n                className={`${controlClass.control} flexGrow`}\n                firstDayOfWeek={firstDayOfWeek}\n                strings={DayPickerStrings}\n                onSelectDate={appraisalToDate}\n                styles={datePickerStyle}\n                placeholder=\"Select a date\"\n                ariaLabel=\"Select a date\"\n              />\n              <Dropdown\n                required\n                errorMessage={errMsgReviewFrequency}\n                label=\"Review Frequency\"\n                placeholder=\"Select\"\n                className=\"flexGrow\"\n                onChange={onChangeReviewFrequency}\n                options={reviewFrequencyOptions}\n                // styles={dropdownStyles}\n              />\n            </div>\n            <Dropdown\n              required\n              label=\"Type\"\n              errorMessage={errMsgType}\n              placeholder=\"Select Type\"\n              className=\"type-input\"\n              options={typeOptions}\n              onChange={onChangeType}\n              // styles={typeDropdownStyles}\n            />\n            <Dropdown\n              required\n              label=\"Format Type\"\n              errorMessage={errMsgFormatType}\n              className=\"type-input\"\n              onChange={onChangeFormateType}\n              placeholder=\"Select Format Type\"\n              options={formateTypeOptions}\n              // styles={typeDropdownStyles}\n            />\n            <TextField\n              required\n              label=\"Owner\"\n              placeholder=\"Owner\"\n              value={claimsData.owner}\n              styles={textfelidStyle}\n              errorMessage={errMsgOwner}\n              name=\"owner\"\n              onChange={onChangeInput}\n            />\n            <Separator />\n            <div className=\"rowCheckBox\">\n              <div>\n                <Label>KRA Settings Tabs: </Label>\n                <Checkbox\n                  label={\"Goals\"}\n                  title={\"Goals\"}\n                  checked={claimsData.kraSettingGoal}\n                  className=\"flexGrowCheckBox\"\n                  name=\"kraSettingGoal\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Competencies\"}\n                  title={\"Competencies\"}\n                  checked={claimsData.kraSettingCompetencies}\n                  className=\"flexGrowCheckBox\"\n                  name=\"kraSettingCompetencies\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Development Plans\"}\n                  title={\"Development Plans\"}\n                  checked={claimsData.kraSettingDevelopmentPlan}\n                  className=\"flexGrowCheckBox\"\n                  name=\"kraSettingDevelopmentPlan\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Summary\"}\n                  title={\"Summary\"}\n                  checked={claimsData.kraSettingSummary}\n                  className=\"flexGrowCheckBox\"\n                  name=\"kraSettingSummary\"\n                  onChange={onChangeCheckbox}\n                />\n              </div>\n              <div>\n                <Label>Assessment Tabs: </Label>\n                <Checkbox\n                  label={\"Goals\"}\n                  title={\"Goals\"}\n                  checked={claimsData.assessmentGoal}\n                  className=\"flexGrowCheckBox\"\n                  name=\"assessmentGoal\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Competencies\"}\n                  title={\"Competencies\"}\n                  checked={claimsData.assessmentCompetencies}\n                  className=\"flexGrowCheckBox\"\n                  name=\"assessmentCompetencies\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Development Plans\"}\n                  title={\"Development Plans\"}\n                  checked={claimsData.assessmentDevelopmentPlan}\n                  className=\"flexGrowCheckBox\"\n                  name=\"assessmentSummary\"\n                  onChange={onChangeCheckbox}\n                />\n                <Checkbox\n                  label={\"Summary\"}\n                  title={\"Summary\"}\n                  checked={claimsData.assessmentSummary}\n                  className=\"flexGrowCheckBox\"\n                  name=\"assessmentSummary\"\n                  onChange={onChangeCheckbox}\n                />\n              </div>\n            </div>\n            <Stack\n              horizontal\n              tokens={stackTokens}\n              style={{ justifyContent: \"flex-end\" }}\n            >\n              <div\n                style={{\n                  marginTop: \"15px\",\n                }}\n              >\n                <PrimaryButton\n                  text=\"Add Appraisal\"\n                  allowDisabledFocus\n                  onClick={handleAddApprisal}\n                />\n              </div>\n              <div\n                style={{\n                  marginTop: \"15px\",\n                }}\n              >\n                <PrimaryButton\n                  text=\"Cancel\"\n                  allowDisabledFocus\n                  disabled={false}\n                  onClick={() => {\n                    history.push(\"/\");\n                  }}\n                  checked={false}\n                />\n              </div>\n            </Stack>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(Form);\n","/home/pratik/Documents/mega-soft/src/views/Admin/index.tsx",["92","93","94","95","96","97"],"import React, { useEffect, useState } from \"react\";\nimport {\n  DetailsList,\n  DetailsRow,\n  IColumn,\n  IDetailsListProps,\n  IDetailsListStyles,\n  IDetailsRowStyles,\n} from \"office-ui-fabric-react/lib/DetailsList\";\nimport \"office-ui-fabric-react/dist/css/fabric.css\";\nimport {\n  PrimaryButton,\n  getTheme,\n  TextField,\n  Dropdown,\n  IDropdownOption,\n  IDropdownStyles,\n  Link,\n  FontIcon,\n} from \"office-ui-fabric-react\";\nimport {\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\nimport { Shimmer } from \"office-ui-fabric-react/lib/Shimmer\";\nimport Header from \"../../Header\";\nimport Panel from \"../../components/Panel\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport { Pagination } from \"@uifabric/experiments\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\n\nimport \"./style.css\";\nimport { RootState } from \"../../redux/reducers\";\nimport { fetchAppraisalData } from \"../../redux/actions\";\nimport { useHistory } from \"react-router-dom\";\n\n// interface ParamTypes {\n//   id: string\n// }\n\nfunction Admin(props: any) {\n  const [hasMoreRecord, setHasMoreRecord] = useState(true);\n  const [limitStart, setLimitSTart] = useState(0);\n  const [limitPageLength, setLimitPageLength] = useState(5);\n  const [orderBy, setOrderBy] = useState(\"asc\");\n  const [orderByField, setOrderByField] = useState(\"id\");\n  const [filtersById, setFiltersById] = useState(\"\");\n  const [filtersByDescription, setFiltersByDescription] = useState(\"\");\n  const [filtersByReviewFreq, setFiltersByReviewFreq] = useState(\"\");\n  const dispatch = useDispatch();\n  const appraisal =\n    useSelector((state: RootState) => state.appraisal.appraisalList) || [];\n\n  // console.log(\"data=>\", appraisal)\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    if (filtersByDescription) {\n      filters.push([\"description\", \"like\", filtersByDescription]);\n    }\n    if (filtersByReviewFreq) {\n      filters.push([\"review_frequency\", \"=\", filtersByReviewFreq]);\n    }\n    dispatch(\n      fetchAppraisalData(\n        limitStart,\n        limitPageLength,\n        `${orderByField} ${orderBy}`,\n        JSON.stringify(filters)\n      )\n    );\n    // fetchAppraisalData(\n    //   limitStart,\n    //   limitPageLength,\n    //   `${orderByField} ${orderBy}`,\n    //   JSON.stringify(filters)\n    // ).then((response: any) => {\n    //   // setList(response.data);\n    //   // if (response.data.length == limitPageLength) {\n    //   //   setHasMoreRecord(true);\n    //   // } else {\n    //   //   setHasMoreRecord(false);\n    //   // }\n    // })\n    // console.log(\"filters==>\", filters)\n  }, [\n    limitStart,\n    limitPageLength,\n    orderBy,\n    filtersById,\n    filtersByDescription,\n    filtersByReviewFreq,\n  ]);\n\n  // const params = useParams<ParamTypes>();\n  // console.log(\"id => \", params.id);\n\n  const columns: IColumn[] = [\n    {\n      key: \"01\",\n      name: \"ID\",\n      fieldName: \"id\",\n      minWidth: 10,\n      maxWidth: 100,\n      isSorted: true,\n      className: \"idColumn\",\n      isSortedDescending: false,\n      sortAscendingAriaLabel: \"Sorted A to Z\",\n      isRowHeader: true,\n      onColumnClick: _onColumnClick,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    // {\n    //   key: \"03\",\n    //   name: \"Name\",\n    //   fieldName: \"name\",\n    //   minWidth: 10,\n    //   maxWidth: 110,\n    //   isSortedDescending: false,\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\n    //   onColumnClick: _onColumnClick,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"04\",\n      name: \"Description\",\n      fieldName: \"appraisal_description\",\n      minWidth: 10,\n      maxWidth: 180,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"05\",\n      name: \"Review From\",\n      fieldName: \"review_from\",\n      minWidth: 10,\n      maxWidth: 110,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"06\",\n      name: \"Appraisal To\",\n      fieldName: \"appraisal_to\",\n      minWidth: 10,\n      maxWidth: 110,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    // {\n    //   key: \"07\",\n    //   name: \"Owner\",\n    //   fieldName: \"owner\",\n    //   minWidth: 10,\n    //   maxWidth: 170,\n    //   isSortedDescending: false,\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\n    //   isRowHeader: true,\n    //   onColumnClick: _onColumnClick,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"08\",\n      name: \"Review Frequency\",\n      fieldName: \"review_frequency\",\n      minWidth: 10,\n      maxWidth: 160,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"02\",\n      name: \"Action\",\n      fieldName: \"action\",\n      minWidth: 10,\n      maxWidth: 110,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <Link\n            className=\"link-icons\"\n          >\n            <FontIcon\n              style={{ fontSize: \"18px\", color: \"#344f84\" }}\n              iconName=\"RedEye\"\n            />\n          </Link>\n          <Link className=\"link-icons\" onClick={()=>{updateAppriasal(item)}}>\n            <FontIcon\n              style={{ fontSize: \"15px\", color: \"#344f84\" }}\n              iconName=\"Edit\"\n            />\n          </Link>\n          <Link\n            className=\"link-icons\"\n            onClick={() => {\n              console.log(\"delete=>\", item);\n            }}\n          >\n            <FontIcon\n              style={{ fontSize: \"15px\", color: \"#FF0000\" }}\n              iconName=\"Delete\"\n            />\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const updateAppriasal = (item: any) => {\n    // localStorage.setItem('apprisal_data', JSON.stringify(item));\n    history.push(`/appraisal/update/${item.id}`)\n    \n  };\n\n  const _onBreadcrumbItemClicked = () => {};\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\", onClick: _onBreadcrumbItemClicked },\n    { text: \"Appraisal\", key: \"d2\", isCurrentItem: true, as: \"h4\" },\n  ];\n\n  const handleSearchClick = () => {\n    setFiltersById(`${searchById}%`);\n    setFiltersByDescription(`${searchByDescription}%`);\n    setFiltersByReviewFreq(`${reviewSearch?.text || \"\"}`);\n    setLimitSTart(0);\n    setCurentPage(0);\n  };\n\n  function _onColumnClick(\n    ev?: React.MouseEvent<HTMLElement>,\n    column?: IColumn\n  ): void {\n    // console.log('column', column)\n    if (column?.fieldName === orderByField) {\n      if (orderBy === \"asc\") {\n        setOrderBy(\"desc\");\n      } else {\n        setOrderBy(\"asc\");\n      }\n    } else {\n      setOrderByField(column?.fieldName || \"id\");\n    }\n  }\n\n  const theme = getTheme();\n\n  const controlStyles = {\n    root: {\n      margin: \"0 10px 20px 0\",\n      maxWidth: \"300px\",\n      borderRadius: \"5px\",\n    },\n\n    wrapper: {\n      \".ms-TextField-fieldGroup fieldGroup-91\": {\n        borderRadius: \"10px\",\n      },\n    },\n  };\n\n  const [currentPage, setCurentPage] = useState(0);\n\n  const [searchById, setSearchById] = useState(\"\");\n  const [searchByDescription, setSearchByDescription] = useState(\"\");\n  const [appraisalToSearch, setAppraisalToSearch] = useState(\"\");\n  const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const itemSearch = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchById(text || \"\");\n    // if(text === \"\" && searchById !== \"\") {\n    //   setFiltersById(\"\");\n    //   setLimitSTart(0);\n    //   setCurentPage(0)\n    // }\n  };\n\n  const itemSearchDescription = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchByDescription(text || \"\");\n    // if(text === \"\" && searchById !== \"\") {\n    //   setFiltersById(\"\");\n    //   setLimitSTart(0);\n    //   setCurentPage(0)\n    // }\n  };\n\n  const itemSearchReview = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const handleRoles = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const itemSearchApprisalTo = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setAppraisalToSearch(text || \"\");\n    // if(text === \"\" && searchById !== \"\") {\n    //   setFiltersById(\"\");\n    //   setLimitSTart(0);\n    //   setCurentPage(0)\n    // }\n  };\n\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        // backgroundColor: \"#0337a4\",\n      },\n    },\n    root: {\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const searchOptions: IDropdownOption[] = [\n    { key: \"key1\", text: \"\" },\n    { key: \"key2\", text: \"Yearly\" },\n    { key: \"key3\", text: \"Monthly\" },\n  ];\n\n  const rolesOption: IDropdownOption[] = [\n    { key: \"key1\", text: \"HR\" },\n    { key: \"key2\", text: \"Manager\" },\n    { key: \"key3\", text: \"Employee\" },\n  ];\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      width: 170,\n      border: \"0px\",\n    },\n  };\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n  const history = useHistory();\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const renderRow: IDetailsListProps[\"onRenderRow\"] = (props) => {\n    const customStyles: Partial<IDetailsRowStyles> = {};\n    if (props) {\n      if (props.itemIndex % 2 === 0) {\n        // Every other row renders with a different background color\n        customStyles.root = { backgroundColor: theme.palette.themeLighterAlt };\n      }\n\n      return <DetailsRow {...props} styles={customStyles} />;\n    }\n    return null;\n  };\n\n  // console.log(\"props==>\", props.userData.UserData[0].name);\n  return (\n    <div className=\"view\">\n      <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Dropdown\n              options={rolesOption}\n              onChange={handleRoles}\n              className=\"rolesDropDown\"\n              styles={dropdownStyles}\n              style={{ marginLeft: \"2rem\" }}\n            />\n            {/* <div style={{ display: \"flex\", marginRight: \"10px\" }}>\n              <Text style={{ marginRight: \"5px\" }}>Date :</Text>\n              <Text>{dateNow}</Text>\n            </div>\n            <Text style={{ marginRight: \"5px\" }}>Time : </Text>\n            <Text>{timeNow}</Text> */}\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n            {/* <Text style={{ marginRight: \"5px\" }}>Time:</Text> */}\n            {/* <Text style={{ marginRight: \"5px\" }}>{timeNow}</Text> */}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              padding: \"10px\",\n              // marginLeft: \"1rem\",\n            }}\n          >\n            <Link>Log Out</Link>\n            {/* <TooltipHost content=\"Settings\">\n              <FontIcon iconName=\"Settings\" />\n            </TooltipHost> */}\n          </div>\n        </div>\n      </WelcomeHeader>\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"body has-right-panel\">\n          <div className=\"searchBarClass\">\n            <TextField\n              label=\"ID\"\n              onChange={itemSearch}\n              placeholder=\"Enter ID\"\n              className=\"searchInput\"\n              styles={controlStyles}\n            />\n            <TextField\n              label=\"Description\"\n              className=\"searchInput\"\n              onChange={itemSearchDescription}\n              placeholder=\"Enter Description\"\n              styles={controlStyles}\n            />\n            <Dropdown\n              label=\"Review Frequency\"\n              placeholder=\"Select\"\n              options={searchOptions}\n              className=\"reviewFrequency\"\n              onChange={itemSearchReview}\n              style={{ padding: \"0px\" }}\n              styles={dropdownStyles}\n            />\n            <PrimaryButton\n              iconProps={{ iconName: \"Search\" }}\n              onClick={handleSearchClick}\n              style={{ marginLeft: \"10px\", alignSelf: \"center\" }}\n            />\n            <PrimaryButton\n              text=\"New Appraisal\"\n              iconProps={{ iconName: \"Add\" }}\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\"/addApprisal\");\n              }}\n              style={{ marginLeft: \"auto\", alignSelf: \"center\" }}\n              disabled={false}\n              checked={false}\n            />\n            {/* <TextField\n              onChange={itemSearchApprisalTo}\n              placeholder= \"Appraisal To\"\n              styles={controlStyles}\n            /> */}\n          </div>\n          {appraisal.length === 0 ? (\n            <div>\n              <Shimmer />\n            </div>\n          ) : (\n            <DetailsList\n              styles={listStyle}\n              items={appraisal}\n              className=\"detail-list\"\n              onRenderRow={renderRow}\n              columns={columns}\n              selectionMode={0}\n            />\n          )}\n\n          {/* <div>\n            <FontIcon iconName=\"CaretLeft8\" className=\"\" />\n            <FontIcon iconName=\"CaretLeft8\" className=\"\" />\n          </div> */}\n\n          <Pagination\n            format=\"buttons\"\n            selectedPageIndex={currentPage}\n            pageCount={hasMoreRecord ? currentPage + 2 : currentPage + 1}\n            itemsPerPage={limitPageLength}\n            totalItemCount={limitPageLength * 2}\n            previousPageAriaLabel={\"previous page\"}\n            nextPageAriaLabel={\"next page\"}\n            firstPageAriaLabel={\"first page\"}\n            lastPageAriaLabel={\"last page\"}\n            pageAriaLabel={\"page\"}\n            selectedAriaLabel={\"selected\"}\n            onPageChange={(page) => {\n              if (currentPage < page && hasMoreRecord) {\n                setCurentPage(page);\n                setLimitSTart(limitStart + limitPageLength);\n              }\n              if (currentPage > page && limitStart - limitPageLength >= 0) {\n                setLimitSTart(limitStart - limitPageLength);\n                setCurentPage(page);\n              }\n            }}\n          />\n          {/* <Modal\n            titleAriaId={titleId}\n            isOpen={isModalOpen}\n            onDismiss={hideModal}\n            isModeless={true}\n            // containerClassName={contentStyles.container}\n            styles={modalStyle}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Appraisal</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={hideModal}\n              />\n            </div>\n            <Form />\n          </Modal> */}\n        </div>\n        {/* <div className=\"right-panel\">\n          <Panel>\n            <h2>Panel</h2>\n          </Panel>\n        </div> */}\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(Admin);\n\n// const contentStyles = mergeStyleSets({\n//   container: {\n//     display: \"flex\",\n//     flexFlow: \"column nowrap\",\n//     alignItems: \"stretch\",\n//   },\n// });\n","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx",[],"/home/pratik/Documents/mega-soft/src/Header.tsx",["98","99","100"],"import * as React from \"react\";\nimport {\n  Breadcrumb,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IDividerAsProps,\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\nimport { IContextualMenuProps } from \"office-ui-fabric-react\";\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport \"./Header.css\";\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: \"action01\",\n      text: \"Action 1\",\n      //   iconProps: { iconName: 'Mail' },\n    },\n    {\n      key: \"action02\",\n      text: \"Action 2\",\n      //   iconProps: { iconName: 'Calendar' },\n    },\n  ],\n};\nfunction _onBreadcrumbItemClicked(\n  ev?: React.MouseEvent<HTMLElement>,\n  item?: IBreadcrumbItem\n): void {\n  console.log(`Breadcrumb item with key \"${item?.key}\" has been clicked.`);\n}\nconst itemsWithHeading: IBreadcrumbItem[] = [\n  {\n    text: \"Performance\",\n    key: \"Files\",\n    onClick: _onBreadcrumbItemClicked,\n    href: \"\",\n  },\n  { text: \"Appraisal\", key: \"d1\", isCurrentItem: true },\n];\nfunction _getCustomOverflowIcon(): JSX.Element {\n  return <Icon iconName={\"ChevronDown\"} />;\n}\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\n  const tooltipText = dividerProps.item ? dividerProps.item.text : \"\";\n  return (\n    <TooltipHost\n      content={`Show ${tooltipText} contents`}\n      calloutProps={{ gapSpace: 0 }}\n    >\n      <span aria-hidden=\"true\" style={{ cursor: \"pointer\", padding: 5 }}>\n        /\n      </span>\n    </TooltipHost>\n  );\n}\n\nconst breadCrumStyle: Partial<IBreadcrumbStyles> = {\n  root: {\n    margin: \"0px\",\n    padding: \"0px\",\n    marginTop: \"-10px\",\n  },\n  itemLink: {\n    fontSize: \"22px\",\n  },\n};\n\nfunction Header(props: { item?: IBreadcrumbItem[]; styles: any }) {\n  // const _alertClicked = () => {\n  //   console.log(\"clicked==>\")\n  // }\n  // const horizontalStackProps: IStackProps = {\n  //     horizontal: true,\n  //     tokens: { childrenGap: 100, },\n  // };\n  // const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\n\n  return (\n    <div className=\"header\">\n      <Breadcrumb\n        // items={itemsWithHeading}\n        items={props.item || []}\n        styles={props.styles}\n        maxDisplayedItems={3}\n        ariaLabel=\"With custom rendered divider and overflow icon\"\n        dividerAs={_getCustomDivider}\n        onRenderOverflowIcon={_getCustomOverflowIcon}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx",[],"/home/pratik/Documents/mega-soft/src/components/WelcomeHeader/index.tsx",[],["101","102"],"/home/pratik/Documents/mega-soft/src/redux/actions/index.tsx",[],"/home/pratik/Documents/mega-soft/src/views/UpdateAppraisal/index.tsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":187,"column":39,"nodeType":"140","messageId":"141","endLine":187,"endColumn":41},{"ruleId":"138","severity":1,"message":"139","line":189,"column":34,"nodeType":"140","messageId":"141","endLine":189,"endColumn":36},{"ruleId":"138","severity":1,"message":"142","line":197,"column":13,"nodeType":"143","messageId":"144","endLine":197,"endColumn":20},{"ruleId":"138","severity":1,"message":"142","line":208,"column":11,"nodeType":"143","messageId":"144","endLine":208,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":216,"column":9,"nodeType":"147","endLine":216,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"152","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":7,"column":17,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"154","line":21,"column":3,"nodeType":"150","messageId":"151","endLine":21,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":27,"column":10,"nodeType":"150","messageId":"151","endLine":27,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":35,"column":19,"nodeType":"150","messageId":"151","endLine":35,"endColumn":30},{"ruleId":"148","severity":1,"message":"157","line":36,"column":10,"nodeType":"150","messageId":"151","endLine":36,"endColumn":21},{"ruleId":"148","severity":1,"message":"158","line":81,"column":10,"nodeType":"150","messageId":"151","endLine":81,"endColumn":19},{"ruleId":"148","severity":1,"message":"159","line":81,"column":21,"nodeType":"150","messageId":"151","endLine":81,"endColumn":33},{"ruleId":"148","severity":1,"message":"160","line":143,"column":26,"nodeType":"150","messageId":"151","endLine":143,"endColumn":43},{"ruleId":"148","severity":1,"message":"161","line":285,"column":10,"nodeType":"150","messageId":"151","endLine":285,"endColumn":22},{"ruleId":"148","severity":1,"message":"162","line":303,"column":10,"nodeType":"150","messageId":"151","endLine":303,"endColumn":17},{"ruleId":"148","severity":1,"message":"163","line":303,"column":19,"nodeType":"150","messageId":"151","endLine":303,"endColumn":29},{"ruleId":"148","severity":1,"message":"164","line":27,"column":8,"nodeType":"150","messageId":"151","endLine":27,"endColumn":13},{"ruleId":"148","severity":1,"message":"165","line":43,"column":25,"nodeType":"150","messageId":"151","endLine":43,"endColumn":41},{"ruleId":"148","severity":1,"message":"166","line":45,"column":27,"nodeType":"150","messageId":"151","endLine":45,"endColumn":45},{"ruleId":"167","severity":1,"message":"168","line":90,"column":6,"nodeType":"169","endLine":97,"endColumn":4,"suggestions":"170"},{"ruleId":"148","severity":1,"message":"171","line":278,"column":10,"nodeType":"150","messageId":"151","endLine":278,"endColumn":27},{"ruleId":"148","severity":1,"message":"172","line":332,"column":9,"nodeType":"150","messageId":"151","endLine":332,"endColumn":29},{"ruleId":"148","severity":1,"message":"173","line":13,"column":7,"nodeType":"150","messageId":"151","endLine":13,"endColumn":38},{"ruleId":"148","severity":1,"message":"174","line":33,"column":7,"nodeType":"150","messageId":"151","endLine":33,"endColumn":42},{"ruleId":"148","severity":1,"message":"175","line":59,"column":7,"nodeType":"150","messageId":"151","endLine":59,"endColumn":49},{"ruleId":"134","replacedBy":"176"},{"ruleId":"136","replacedBy":"177"},{"ruleId":"148","severity":1,"message":"153","line":7,"column":17,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"154","line":21,"column":3,"nodeType":"150","messageId":"151","endLine":21,"endColumn":14},{"ruleId":"148","severity":1,"message":"178","line":25,"column":3,"nodeType":"150","messageId":"151","endLine":25,"endColumn":10},{"ruleId":"148","severity":1,"message":"155","line":28,"column":10,"nodeType":"150","messageId":"151","endLine":28,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":36,"column":19,"nodeType":"150","messageId":"151","endLine":36,"endColumn":30},{"ruleId":"148","severity":1,"message":"157","line":37,"column":10,"nodeType":"150","messageId":"151","endLine":37,"endColumn":21},{"ruleId":"148","severity":1,"message":"179","line":72,"column":22,"nodeType":"150","messageId":"151","endLine":72,"endColumn":35},{"ruleId":"148","severity":1,"message":"166","line":73,"column":27,"nodeType":"150","messageId":"151","endLine":73,"endColumn":45},{"ruleId":"148","severity":1,"message":"180","line":74,"column":19,"nodeType":"150","messageId":"151","endLine":74,"endColumn":29},{"ruleId":"148","severity":1,"message":"181","line":75,"column":24,"nodeType":"150","messageId":"151","endLine":75,"endColumn":39},{"ruleId":"148","severity":1,"message":"182","line":76,"column":23,"nodeType":"150","messageId":"151","endLine":76,"endColumn":37},{"ruleId":"167","severity":1,"message":"183","line":94,"column":6,"nodeType":"169","endLine":94,"endColumn":8,"suggestions":"184"},{"ruleId":"148","severity":1,"message":"185","line":98,"column":9,"nodeType":"150","messageId":"151","endLine":98,"endColumn":22},{"ruleId":"148","severity":1,"message":"186","line":101,"column":9,"nodeType":"150","messageId":"151","endLine":101,"endColumn":24},{"ruleId":"148","severity":1,"message":"158","line":115,"column":10,"nodeType":"150","messageId":"151","endLine":115,"endColumn":19},{"ruleId":"148","severity":1,"message":"159","line":115,"column":21,"nodeType":"150","messageId":"151","endLine":115,"endColumn":33},{"ruleId":"148","severity":1,"message":"160","line":177,"column":26,"nodeType":"150","messageId":"151","endLine":177,"endColumn":43},{"ruleId":"148","severity":1,"message":"187","line":185,"column":10,"nodeType":"150","messageId":"151","endLine":185,"endColumn":20},{"ruleId":"148","severity":1,"message":"188","line":185,"column":22,"nodeType":"150","messageId":"151","endLine":185,"endColumn":35},{"ruleId":"148","severity":1,"message":"189","line":199,"column":10,"nodeType":"150","messageId":"151","endLine":199,"endColumn":22},{"ruleId":"148","severity":1,"message":"190","line":199,"column":24,"nodeType":"150","messageId":"151","endLine":199,"endColumn":39},{"ruleId":"148","severity":1,"message":"191","line":204,"column":10,"nodeType":"150","messageId":"151","endLine":204,"endColumn":25},{"ruleId":"148","severity":1,"message":"192","line":204,"column":27,"nodeType":"150","messageId":"151","endLine":204,"endColumn":45},{"ruleId":"148","severity":1,"message":"193","line":209,"column":10,"nodeType":"150","messageId":"151","endLine":209,"endColumn":21},{"ruleId":"148","severity":1,"message":"194","line":238,"column":9,"nodeType":"150","messageId":"151","endLine":238,"endColumn":28},{"ruleId":"148","severity":1,"message":"195","line":259,"column":10,"nodeType":"150","messageId":"151","endLine":259,"endColumn":20},{"ruleId":"148","severity":1,"message":"196","line":260,"column":10,"nodeType":"150","messageId":"151","endLine":260,"endColumn":23},{"ruleId":"148","severity":1,"message":"197","line":264,"column":9,"nodeType":"150","messageId":"151","endLine":264,"endColumn":23},{"ruleId":"148","severity":1,"message":"161","line":296,"column":10,"nodeType":"150","messageId":"151","endLine":296,"endColumn":22},{"ruleId":"148","severity":1,"message":"162","line":314,"column":10,"nodeType":"150","messageId":"151","endLine":314,"endColumn":17},{"ruleId":"148","severity":1,"message":"163","line":314,"column":19,"nodeType":"150","messageId":"151","endLine":314,"endColumn":29},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'IStackStyles' is defined but never used.","'mergeStyles' is defined but never used.","'useBoolean' is defined but never used.","'useDispatch' is defined but never used.","'addApprisal' is defined but never used.","'isChecked' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","'setFirstDayOfWeek' is assigned a value but never used.","'reviewSearch' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Panel' is defined but never used.","'setHasMoreRecord' is assigned a value but never used.","'setLimitPageLength' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'orderByField'. Either include them or remove the dependency array.","ArrayExpression",["200"],"'appraisalToSearch' is assigned a value but never used.","'itemSearchApprisalTo' is assigned a value but never used.","'menuProps' is assigned a value but never used.","'itemsWithHeading' is assigned a value but never used.","'breadCrumStyle' is assigned a value but never used.",["198"],["199"],"'updateA' is defined but never used.","'setLimitSTart' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'setOrderByField' is assigned a value but never used.","'setFiltersById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limitStart', 'orderBy', and 'orderByField'. Either include them or remove the dependency array.",["201"],"'appraisalList' is assigned a value but never used.","'reviewDate' is assigned a value but never used.","'claimsData' is assigned a value but never used.","'setClaimsData' is assigned a value but never used.","'selectedType' is assigned a value but never used.","'setSelectedType' is assigned a value but never used.","'reviewFrequency' is assigned a value but never used.","'setReviewFrequency' is assigned a value but never used.","'formateType' is assigned a value but never used.","'onChangeFormateType' is assigned a value but never used.","'dateReview' is assigned a value but never used.","'dateAppraisal' is assigned a value but never used.","'reviewFromDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, dispatch, orderByField]",{"range":"206","text":"207"},"Update the dependencies array to be: [filtersById, limitPageLength, limitStart, orderBy, orderByField]",{"range":"208","text":"209"},[2746,2869],"[limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, dispatch, orderByField]",[2671,2673],"[filtersById, limitPageLength, limitStart, orderBy, orderByField]"]