[{"/home/pratik/Documents/mega-soft/src/index.tsx":"1","/home/pratik/Documents/mega-soft/src/reportWebVitals.ts":"2","/home/pratik/Documents/mega-soft/src/App.tsx":"3","/home/pratik/Documents/mega-soft/src/redux/index.tsx":"4","/home/pratik/Documents/mega-soft/src/Navigation.tsx":"5","/home/pratik/Documents/mega-soft/src/SideNavigation/sideBar.tsx":"6","/home/pratik/Documents/mega-soft/src/redux/actions/auth.tsx":"7","/home/pratik/Documents/mega-soft/src/SideNavigation/custom.tsx":"8","/home/pratik/Documents/mega-soft/src/Views/Login/index.tsx":"9","/home/pratik/Documents/mega-soft/src/SideNavigation/MainHeader.tsx":"10","/home/pratik/Documents/mega-soft/src/Views/Appraisal/index.tsx":"11","/home/pratik/Documents/mega-soft/src/Views/AddAppraisal/index.tsx":"12","/home/pratik/Documents/mega-soft/src/Views/AppraisalDetail/index.tsx":"13","/home/pratik/Documents/mega-soft/src/Views/UpdateAppraisal/index.tsx":"14","/home/pratik/Documents/mega-soft/src/Views/GoalSetting/index.tsx":"15","/home/pratik/Documents/mega-soft/src/Views/EmployeeDetails/index.tsx":"16","/home/pratik/Documents/mega-soft/src/Views/JobHistory/index.tsx":"17","/home/pratik/Documents/mega-soft/src/Views/UpdateJobHistory/index.tsx":"18","/home/pratik/Documents/mega-soft/src/Views/JobHistoryDetails/index.tsx":"19","/home/pratik/Documents/mega-soft/src/Views/AddGoals/index.tsx":"20","/home/pratik/Documents/mega-soft/src/Views/UpdateGoals/index.tsx":"21","/home/pratik/Documents/mega-soft/src/Views/GoalDetails/index.tsx":"22","/home/pratik/Documents/mega-soft/src/SideNavigation/index.tsx":"23","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx":"24","/home/pratik/Documents/mega-soft/src/redux/actions/roleType.tsx":"25","/home/pratik/Documents/mega-soft/src/Header.tsx":"26","/home/pratik/Documents/mega-soft/src/redux/actions/goal.tsx":"27","/home/pratik/Documents/mega-soft/src/redux/actions/application.tsx":"28","/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx":"29","/home/pratik/Documents/mega-soft/src/redux/actions/jobHistory.tsx":"30","/home/pratik/Documents/mega-soft/src/redux/actions/developmentPlan.tsx":"31","/home/pratik/Documents/mega-soft/src/redux/actions/employeeData.tsx":"32","/home/pratik/Documents/mega-soft/src/redux/actions/navigation.tsx":"33","/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx":"34","/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx":"35","/home/pratik/Documents/mega-soft/src/redux/reducers/employeeList.tsx":"36","/home/pratik/Documents/mega-soft/src/redux/reducers/navigationData.tsx":"37","/home/pratik/Documents/mega-soft/src/redux/reducers/roleType.tsx":"38","/home/pratik/Documents/mega-soft/src/redux/reducers/jobHistory.tsx":"39","/home/pratik/Documents/mega-soft/src/redux/reducers/menuType.tsx":"40","/home/pratik/Documents/mega-soft/src/redux/reducers/auth.tsx":"41","/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx":"42","/home/pratik/Documents/mega-soft/src/redux/reducers/application.tsx":"43","/home/pratik/Documents/mega-soft/src/Utils/index.tsx":"44"},{"size":643,"mtime":1613404687635,"results":"45","hashOfConfig":"46"},{"size":425,"mtime":1610466480732,"results":"47","hashOfConfig":"46"},{"size":6018,"mtime":1613404687631,"results":"48","hashOfConfig":"46"},{"size":205,"mtime":1611071583172,"results":"49","hashOfConfig":"46"},{"size":6921,"mtime":1612799899534,"results":"50","hashOfConfig":"46"},{"size":3090,"mtime":1612888024571,"results":"51","hashOfConfig":"46"},{"size":3405,"mtime":1612890108996,"results":"52","hashOfConfig":"46"},{"size":4996,"mtime":1613404687631,"results":"53","hashOfConfig":"46"},{"size":3809,"mtime":1612799899538,"results":"54","hashOfConfig":"46"},{"size":14375,"mtime":1613410412883,"results":"55","hashOfConfig":"46"},{"size":24811,"mtime":1613404687635,"results":"56","hashOfConfig":"46"},{"size":22543,"mtime":1613404687635,"results":"57","hashOfConfig":"46"},{"size":6960,"mtime":1613404687635,"results":"58","hashOfConfig":"46"},{"size":20229,"mtime":1613404687635,"results":"59","hashOfConfig":"46"},{"size":9324,"mtime":1613404687635,"results":"60","hashOfConfig":"46"},{"size":41819,"mtime":1613404687635,"results":"61","hashOfConfig":"46"},{"size":12348,"mtime":1613404687635,"results":"62","hashOfConfig":"46"},{"size":12867,"mtime":1613404687635,"results":"63","hashOfConfig":"46"},{"size":6865,"mtime":1613404687635,"results":"64","hashOfConfig":"46"},{"size":14946,"mtime":1613404687635,"results":"65","hashOfConfig":"46"},{"size":14308,"mtime":1613404687635,"results":"66","hashOfConfig":"46"},{"size":6658,"mtime":1613404687635,"results":"67","hashOfConfig":"46"},{"size":10851,"mtime":1613404687631,"results":"68","hashOfConfig":"46"},{"size":653,"mtime":1613404687639,"results":"69","hashOfConfig":"46"},{"size":319,"mtime":1612805534431,"results":"70","hashOfConfig":"46"},{"size":2453,"mtime":1611762788465,"results":"71","hashOfConfig":"46"},{"size":3437,"mtime":1612888024579,"results":"72","hashOfConfig":"46"},{"size":263,"mtime":1613404687635,"results":"73","hashOfConfig":"46"},{"size":5512,"mtime":1613404687635,"results":"74","hashOfConfig":"46"},{"size":4509,"mtime":1613404687639,"results":"75","hashOfConfig":"46"},{"size":1657,"mtime":1613404687635,"results":"76","hashOfConfig":"46"},{"size":2153,"mtime":1613404687635,"results":"77","hashOfConfig":"46"},{"size":1426,"mtime":1612807911800,"results":"78","hashOfConfig":"46"},{"size":793,"mtime":1610987455768,"results":"79","hashOfConfig":"46"},{"size":442,"mtime":1611848900136,"results":"80","hashOfConfig":"46"},{"size":772,"mtime":1611848900136,"results":"81","hashOfConfig":"46"},{"size":419,"mtime":1611848900136,"results":"82","hashOfConfig":"46"},{"size":434,"mtime":1612083638780,"results":"83","hashOfConfig":"46"},{"size":750,"mtime":1611997864766,"results":"84","hashOfConfig":"46"},{"size":422,"mtime":1612888024579,"results":"85","hashOfConfig":"46"},{"size":584,"mtime":1612372890972,"results":"86","hashOfConfig":"46"},{"size":1029,"mtime":1613404687639,"results":"87","hashOfConfig":"46"},{"size":319,"mtime":1613404687639,"results":"88","hashOfConfig":"46"},{"size":1121,"mtime":1613404687635,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"1fk01iq",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"106","usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"93"},"/home/pratik/Documents/mega-soft/src/index.tsx",["201"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\nimport i18n from \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["202","203"],"/home/pratik/Documents/mega-soft/src/reportWebVitals.ts",[],"/home/pratik/Documents/mega-soft/src/App.tsx",["204","205","206","207","208","209"],"import React, { Suspense, useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport Appraisal from \"./Views/Appraisal\";\nimport AddAppraisal from \"./Views/AddAppraisal\";\nimport UpdateAppraisal from \"./Views/UpdateAppraisal\";\nimport AppraisalDetail from \"./Views/AppraisalDetail\";\nimport GoalSetting from \"./Views/GoalSetting\";\nimport EmployeeDetails from \"./Views/EmployeeDetails\";\nimport JobHistory from \"./Views/JobHistory\";\nimport UpdateJobHistory from \"./Views/UpdateJobHistory\";\nimport JobHistoryDetails from \"./Views/JobHistoryDetails\";\nimport AddGoals from \"./Views/AddGoals\";\nimport UpdateGoals from \"./Views/UpdateGoals\";\nimport GoalDetails from \"./Views/GoalDetails\";\nimport Login from \"./Views/Login\";\nimport { initSideBar } from \"./SideNavigation/sideBar\";\nimport { customSideBar } from \"./SideNavigation/custom\";\n\nimport $ from \"jquery\";\n\nimport { validateLogin, login } from \"./redux/actions/auth\";\n\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/reducers\";\n\nconst getQueryParms = () => {\n  const url = window.location.href;\n  const str = url;\n  const param = \"access_token=\";\n  let res = str.split(\"&\", 1);\n  let n = res[0].search(param);\n\n  if (n < 0) {\n    return;\n  }\n  n += param.length;\n  let access_token = res[0].substr(n);\n  return access_token;\n};\n\nfunction App(props: any) {\n  // console.log(\"props==>\", props.Auth.isLoggedIn);\n  // const getAccessToken = () => {\n  //   const url = window.location.href;\n  //   console.log(\"url ==\", url);\n  //   const str = url;\n  //   const param = \"access_token=\";\n  //   let res = str.split(\"&\", 1);\n  //   let n = res[0].search(param);\n\n  //   if (n < 0) {\n  //     return;\n  //   }\n  //   n += param.length;\n  //   let access_token = res[0].substr(n);\n  //   console.log(\"access_token on load==>\", access_token);\n  //   sessionStorage.setItem(\"access_token\", access_token);\n  // };\n  // useEffect(() => {\n  //   getAccessToken();\n  // }, []);\n  const hist = useHistory();\n  const dispatch = useDispatch();\n  const auth = useSelector((state: RootState) => state.Auth);\n\n  // const msRoute = () => {\n  //   $(\"a.sidebar-link\").on(\"click\", function () {\n  //     const route = String($(this).attr(\"href\"));\n  //     console.log(\"Menu Option selected ==>\", route);\n  //     alert(route);\n  //     // React routing code:\n\n  //     hist.push(route);\n\n  //     return false;\n  //   });\n  // };\n\n  useEffect(() => {\n    console.log(\"on load component=>\");\n    initSideBar();\n    customSideBar();\n\n    dispatch(validateLogin());\n  }, []);\n\n  sessionStorage.setItem(\"roleType\", \"Employee\");\n  // sessionStorage.setItem(\"menuType\", \"0\");\n\n  useEffect(() => {\n    // const stateValue = getQueryParms(\"state\");\n    // const sessionStateValue = getQueryParms(\"session_state\");\n    const access_token = getQueryParms();\n    // console.log(\"access_token main==>\", access_token);\n    // if (stateValue && sessionStateValue && access_token) {\n    //   dispatch(login(sessionStateValue, stateValue, access_token));\n    // }\n\n    if (access_token) {\n      dispatch(login(access_token));\n    }\n  }, []);\n\n  if (auth.isLoading) {\n    return null;\n  }\n\n  return (\n    <Suspense fallback=\"loading\">\n      <BrowserRouter>\n        {auth.isLoggedIn == true ? (\n          <Switch>\n            <div className=\"page-wrapper\">\n              <Navigation />\n              {/* <Route exact path=\"/\" component={Login} /> */}\n              <Route exact path=\"/home\" component={Appraisal} />\n              <Route exact path=\"/addApprisal\" component={AddAppraisal} />\n              {/* <Route exact path=\"/appraisal/add\" component={Form} /> */}\n              <Route\n                exact\n                path=\"/appraisal/update/:appraisalId\"\n                component={UpdateAppraisal}\n              />\n              <Route\n                exact\n                path=\"/appraisal/view/:appraisalId\"\n                component={AppraisalDetail}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting\"\n                component={GoalSetting}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/:employeeId/:appraisalId\"\n                component={EmployeeDetails}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/addjobhistory/:employeeId/:appraisalId\"\n                component={JobHistory}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/jobhistory/updateJobHistory/:name\"\n                component={UpdateJobHistory}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/jobhistory/jobHistoryDetail/:name\"\n                component={JobHistoryDetails}\n              />\n\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/addgoal/:employeeId/:appraisalId\"\n                component={AddGoals}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/goals/updategoal/:name\"\n                component={UpdateGoals}\n              />\n              <Route\n                exact\n                path=\"/appraisal/goalsetting/view/goal/goaldetail/:name\"\n                component={GoalDetails}\n              />\n              <Route path=\"/*\" render={() => <Redirect to=\"/home\" />} />\n              <Route\n                path=\"/appraisal/goalsetting*\"\n                render={() => <Redirect to=\"/appraisal/goalsetting\" />}\n              />\n            </div>\n          </Switch>\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/*\" render={() => <Redirect to=\"/\" />} />\n          </Switch>\n        )}\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","/home/pratik/Documents/mega-soft/src/redux/index.tsx",[],"/home/pratik/Documents/mega-soft/src/Navigation.tsx",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import * as React from \"react\";\nimport {\n  Nav,\n  INavLink,\n  INavStyles,\n  INavLinkGroup,\n} from \"office-ui-fabric-react/lib/Nav\";\nimport { initializeIcons } from \"@uifabric/icons\";\nimport { useHistory, matchPath } from \"react-router-dom\";\n\nimport hrms_logo from \"./assets/img/hrms_logo.gif\";\nimport logo_nuage from \"./assets/img/logo_nuage.png\";\nimport {\n  fetchNavigationBar,\n  sideNavigationData,\n} from \"./redux/actions/navigation\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/reducers\";\nimport SideNavigation from \"./SideNavigation\";\nimport MainHeader from \"./SideNavigation/MainHeader\";\n\ninitializeIcons();\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: \"Appraisal\",\n        url: \"\",\n        key: \"key01\",\n        // icon: \"UpgradeAnalysis\",\n        links: [\n          {\n            name: \"Setup\",\n            url: \"/\",\n            icon: \"Settings\",\n            key: \"key02\",\n          },\n          // {\n          //   name: \"Ratings\",\n          //   url: \"/apprisal/rating\",\n          //   icon: \"6PointStar\",\n          //   key: \"key03\",\n          // },\n          // {\n          //   name: \"Periods\",\n          //   url: \"/apprisal/periods\",\n          //   icon: \"Timer\",\n          //   key: \"key04\",\n          // },\n          {\n            name: \"Goal Setting\",\n            url: \"/appraisal/goalsetting\",\n            icon: \"6PointStar\",\n            key: \"key05\",\n          },\n          // {\n          //   name: \"Self Assessment\",\n          //   url: \"\",\n          //   icon: \"6PointStar\",\n          //   key: \"key06\",\n          // },\n          // {\n          //   name: \"Development Plan\",\n          //   url: \"/apprisal/developmentPlan\",\n          //   icon: \"TestPlan\",\n          //   key: \"key07\",\n          // },\n          // {\n          //   name: \"Release Appraisal\",\n          //   url: \"/apprisal/releaseApprisal\",\n          //   icon: \"ReleaseGate\",\n          //   key: \"key08\",\n          // },\n          // {\n          //   name: \"Market Bench Marketing\",\n          //   url: \"/apprisal/marketBenchMarketing\",\n          //   icon: \"Market\",\n          //   key: \"key09\",\n          // },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: \"Manage\",\n        url: \"\",\n        key: \"key10\",\n        // icon:'MedicationAdmin',\n        links: [\n          {\n            name: \"Team Goal Setting\",\n            url: \"/manage/teamGoalSetting\",\n            icon: \"Settings\",\n            key: \"key11\",\n          },\n          {\n            name: \"Team assess\",\n            url: \"/manage/teamAssess\",\n            icon: \"AssessmentGroup\",\n            key: \"key12\",\n          },\n        ],\n        isExpanded: false,\n      },\n      {\n        name: \"Confirmation\",\n        url: \"\",\n        key: \"key13\",\n        expandAriaLabel: \"Expand Admin section\",\n        collapseAriaLabel: \"Collapse admin section\",\n        links: [\n          {\n            name: \"Confirmation Status\",\n            url: \"/confirmation/status\",\n            icon: \"SplitObject\",\n            key: \"key14\",\n          },\n          {\n            name: \"Release\",\n            url: \"/confirmation/release\",\n            key: \"key15\",\n            icon: \"ReleaseGate\",\n          },\n          {\n            name: \"Approval\",\n            url: \"/confirmation/approval\",\n            key: \"key16\",\n            icon: \"DocumentApproval\",\n          },\n          {\n            name: \"Letter\",\n            url: \"/confirmation/letter\",\n            key: \"key17\",\n            icon: \"DietPlanNotebook\",\n          },\n          {\n            name: \"Probation Letter\",\n            url: \"/confirmation/probationLetter\",\n            key: \"key18\",\n            icon: \"QuickNote\",\n          },\n        ],\n        isExpanded: false,\n      },\n    ],\n  },\n];\n\nconst navStyles: Partial<INavStyles> = {\n  root: {\n    // overflowY: \"auto\",\n    // width: 208,\n    height: \"100%\",\n  },\n  link: {\n    width: \"200px\",\n  },\n  linkText: {\n    color: \"#FFF\",\n    // fontSize: 12,\n    selectors: {\n      \"&:hover\": {\n        color: \"#FFF\",\n      },\n    },\n  },\n  chevronIcon: {\n    color: \"#FFF\",\n  },\n  compositeLink: {\n    selectors: {\n      \"&.is-selected\": {\n        background: \"#29416f\",\n      },\n      \"&:hover\": {\n        \".ms-Button\": {\n          background: \"#29416f\",\n        },\n        \".ms-Nav-linkText\": {\n          // color: \"#FFF\", // your real styling here\n        },\n        \".ms-Icon\": {\n          color: \"#FFF\",\n        },\n      },\n    },\n  },\n};\n\nfunction Navigation() {\n  // const { children } = props;\n  const dispatch = useDispatch();\n  const [doctype, setDoctype] = useState(\"EmployeeAppraisal\");\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [navData, setNavData]: any = useState();\n  // console.log(\"navData?????=>\", navData);\n\n  const navigation = useSelector(\n    (state: RootState) => state.navigationData.navigationData\n  );\n  // console.log(\"navigation data=>\", navigation.links);\n\n  // useEffect((): void => {\n  //   dispatch(fetchNavigationBar(doctype, roleType ? roleType : \"Employee\"));\n  // }, [doctype, roleType]);\n\n  // useEffect((): void => {\n  //   sideNavigationData(doctype).then((response) => {\n  //     console.log(\"side nav response\", response.message);\n  //     setNavData(response.message);\n  //   });\n  // }, [doctype]);\n\n  let history = useHistory();\n  const [selectedNavKey, setSelectedNavKey] = React.useState(\"\");\n  const onLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    setSelectedNavKey(item?.key || \"\");\n  };\n  React.useEffect(() => {\n    navLinkGroups[0].links.map((item) => {\n      if (item.links) {\n        item.links.map((subItem) => {\n          if (\n            matchPath(history.location.pathname, {\n              path: subItem.url,\n              exact: true,\n            })\n          ) {\n            setSelectedNavKey(subItem?.key || \"\");\n            return;\n          }\n        });\n      } else {\n        if (\n          matchPath(history.location.pathname, {\n            path: item.url,\n            exact: true,\n          })\n        ) {\n          setSelectedNavKey(item?.key || \"\");\n          return;\n        }\n      }\n    });\n  }, [history.location.pathname]);\n  return (\n    <div id=\"main-wrapper\">\n      <MainHeader />\n      <div className=\"sidebar left-sidebar\">\n        {/* <div className=\"main-logo\">\n          <img src={logo_nuage} />\n        </div> */}\n        <div className=\"footer-logo\">\n          <img src={hrms_logo} />\n        </div>\n        {/* <Nav\n          onLinkClick={onLinkClick}\n          selectedKey={selectedNavKey}\n          ariaLabel=\"Nav basic example\"\n          styles={navStyles}\n          groups={navigation.links}\n        /> */}\n        <SideNavigation />\n        {/* <div dangerouslySetInnerHTML={{ __html: navData }} /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","/home/pratik/Documents/mega-soft/src/SideNavigation/sideBar.tsx",["230","231","232","233","234"],"/*\nTemplate Name: Admin Template\nAuthor: Wrappixel\n\nFile: js\n*/\n// ==============================================================\n// Auto select left navbar\n// ==============================================================\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducers\";\n\nexport const initSideBar = function () {\n  (\"use strict\");\n  var url = window.location + \"\";\n  var path = url.replace(\n    window.location.protocol + \"//\" + window.location.host + \"/\",\n    \"\"\n  );\n  var element = $(\"ul#sidebarnav a\").filter(function () {\n    // return this.href === url || this.href === path; // || url.href.indexOf(this.href) === 0;\n    return true;\n  });\n  element.parentsUntil(\".sidebar-nav\").each(function (index) {\n    if ($(this).is(\"li\") && $(this).children(\"a\").length !== 0) {\n      $(this).children(\"a\").addClass(\"active\");\n      $(this).parent(\"ul#sidebarnav\").length === 0\n        ? $(this).addClass(\"active\")\n        : $(this).addClass(\"selected\");\n    } else if (!$(this).is(\"ul\") && $(this).children(\"a\").length === 0) {\n      $(this).addClass(\"selected\");\n    } else if ($(this).is(\"ul\")) {\n      $(this).addClass(\"in\");\n    }\n  });\n\n  element.addClass(\"active\");\n  $(\"#sidebarnav a\").on(\"click\", function (e) {\n    // console.log(\"side nav clicked==>\");\n\n    if (!$(this).hasClass(\"active\")) {\n      // hide any open menus and remove all other classes\n      $(\"ul\", $(this).parents(\"ul:first\")).removeClass(\"in\");\n      $(\"a\", $(this).parents(\"ul:first\")).removeClass(\"active\");\n\n      // open our new menu and add the open class\n      $(this).next(\"ul\").addClass(\"in\");\n      $(this).addClass(\"active\");\n    } else if ($(this).hasClass(\"active\")) {\n      $(this).removeClass(\"active\");\n      $(this).parents(\"ul:first\").removeClass(\"active\");\n      $(this).next(\"ul\").removeClass(\"in\");\n    }\n  });\n  $(\"#sidebarnav >li >a.has-arrow\").on(\"click\", function (e) {\n    e.preventDefault();\n  });\n\n  // JQuery function\n  $(\".nav_employee\").show();\n  $(\".nav_manager\").hide();\n  $(\".nav_hr_contact\").hide();\n\n  $(\"#nav_employee\").click(function () {\n    $(\".nav_employee\").show();\n    $(\".nav_manager\").hide();\n    $(\".nav_hr_contact\").hide();\n\n    sessionStorage.setItem(\"roleType\", \"Employee\");\n\n    // $(\"#nav_employee\").addClass(\"active\");\n    // $(\"#nav_manager\").removeClass(\"active\");\n    // $(\"#nav_hr\").removeClass(\"active\");\n  });\n\n  $(\"#nav_manager\").click(function () {\n    $(\".nav_employee\").hide();\n    $(\".nav_manager\").show();\n    $(\".nav_hr_contact\").hide();\n    // $(\"#nav_manager\").addClass(\"active\");\n    // $(\"#nav_employee\").removeClass(\"active\");\n    // $(\"#nav_hr\").removeClass(\"active\");\n\n    sessionStorage.setItem(\"roleType\", \"Manager\");\n  });\n\n  $(\"#nav_hr_contact\").click(function () {\n    $(\".nav_employee\").hide();\n    $(\".nav_manager\").hide();\n    $(\".nav_hr_contact\").show();\n    // $(\"#nav_hr\").addClass(\"active\");\n    // $(\"#nav_employee\").removeClass(\"active\");\n    // $(\"#nav_manager\").removeClass(\"active\");\n\n    sessionStorage.setItem(\"roleType\", \"HR Contact\");\n  });\n};\n","/home/pratik/Documents/mega-soft/src/redux/actions/auth.tsx",[],"/home/pratik/Documents/mega-soft/src/SideNavigation/custom.tsx",["235","236"],"import $ from \"jquery\";\n\nexport const customSideBar = function () {\n  (\"use strict\");\n  // console.log(\"inside customside bar==>\");\n\n  $(\".preloader\").fadeOut();\n  // ==============================================================\n  // Theme options\n  // ==============================================================\n  // ==============================================================\n  // sidebar-hover\n  // ==============================================================\n\n  $(\".left-sidebar\").hover(\n    function () {\n      $(\".navbar-header\").addClass(\"expand-logo\");\n    },\n    function () {\n      $(\".navbar-header\").removeClass(\"expand-logo\");\n    }\n  );\n  // this is for close icon when navigation open in mobile view\n  $(\".nav-toggler\").on(\"click\", function () {\n    $(\"#main-wrapper\").toggleClass(\"show-sidebar\");\n    $(\".nav-toggler i\").toggleClass(\"ti-menu\");\n  });\n  $(\".nav-lock\").on(\"click\", function () {\n    $(\"body\").toggleClass(\"lock-nav\");\n    $(\".nav-lock i\").toggleClass(\"mdi-toggle-switch-off\");\n    $(\"body, .page-wrapper\").trigger(\"resize\");\n  });\n  $(\".search-box a, .search-box .app-search .srh-btn\").on(\"click\", function () {\n    $(\".app-search\").toggle(200);\n    $(\".app-search input\").focus();\n  });\n\n  // ==============================================================\n  // Right sidebar options\n  // ==============================================================\n  // console.log(\"custom side bar2==>\");\n  $(function () {\n    $(\".service-panel-toggle\").on(\"click\", function () {\n      $(\".customizer\").toggleClass(\"show-service-panel\");\n    });\n    $(\".page-wrapper\").on(\"click\", function () {\n      $(\".customizer\").removeClass(\"show-service-panel\");\n    });\n  });\n  // ==============================================================\n  // This is for the floating labels\n  // ==============================================================\n  //   $(\".floating-labels .form-control\")\n  //     .on(\"focus blur\", function (e) {\n  //       $(this)\n  //         .parents(\".form-group\")\n  //         .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\n  //     })\n  //     .trigger(\"blur\");\n\n  // ==============================================================\n  //tooltip\n  // ==============================================================\n  //   $(function () {\n  //     $('[data-toggle=\"tooltip\"]').tooltip();\n  //   });\n  // ==============================================================\n  //Popover\n  // ==============================================================\n  //   $(function () {\n  //     $('[data-toggle=\"popover\"]').popover();\n  //   });\n\n  // ==============================================================\n  // Perfact scrollbar\n  // ==============================================================\n  //   $(\".message-center, .customizer-body, .scrollable\").perfectScrollbar({\n  //     wheelPropagation: !0,\n  //   });\n\n  /*var ps = new PerfectScrollbar('.message-body');\n      var ps = new PerfectScrollbar('.notifications');\n      var ps = new PerfectScrollbar('.scroll-sidebar');\n      var ps = new PerfectScrollbar('.customizer-body');*/\n\n  // ==============================================================\n  // Resize all elements\n  // ==============================================================\n  $(\"body, .page-wrapper\").trigger(\"resize\");\n  $(\".page-wrapper\").show();\n  // ==============================================================\n  // To do list\n  // ==============================================================\n  $(\".list-task li label\").click(function () {\n    $(this).toggleClass(\"task-done\");\n  });\n\n  //****************************\n  /* This is for the mini-sidebar if width is less then 1170*/\n  //****************************\n  // console.log(\"custom side bar3==>\");\n  var setsidebartype = function () {\n    // var width = (window.innerWidth > 0) ? window.innerWidth : this.screen.width;\n    // if (width < 1170) {\n    //     $(\"#main-wrapper\").attr(\"data-sidebartype\", \"mini-sidebar\");\n    // } else {\n    //     $(\"#main-wrapper\").attr(\"data-sidebartype\", \"full\");\n    // }\n  };\n  // $(window).ready(setsidebartype);\n  // $(window).on(\"resize\", setsidebartype);\n  //****************************\n  /* This is for sidebartoggler*/\n  //****************************\n  // var i = 0;\n  $(\".sidebartoggler\").on(\"click\", function () {\n    // console.log(\"Sidebar toggle inner function ==>\", i++);\n    $(\"#main-wrapper\").toggleClass(\"mini-sidebar\");\n    if ($(\"#main-wrapper\").hasClass(\"mini-sidebar\")) {\n      $(\".sidebartoggler\").prop(\"checked\", !0);\n      $(\"#main-wrapper\").attr(\"data-sidebartype\", \"mini-sidebar\");\n    } else {\n      $(\".sidebartoggler\").prop(\"checked\", !1);\n      $(\"#main-wrapper\").attr(\"data-sidebartype\", \"full\");\n    }\n  });\n\n  // Use react routes instead of href from the menu\n  // $(\"a.sidebar-link\").on(\"click\", function () {\n  //   const route = $(this).attr(\"href\");\n  //   // console.log(\"Menu Option selected ==>\", route);\n\n  //   // React routing code:\n\n  //   return false;\n  // });\n};\n","/home/pratik/Documents/mega-soft/src/Views/Login/index.tsx",["237","238","239","240","241","242","243","244"],"import {\n  ITextFieldStyles,\n  PrimaryButton,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/actions/auth\";\nimport logo_ms from \"../../assets/img/logo_ms.png\";\nimport banner_main from \"../../assets/img/megasoft_hrms.jpg\";\nimport \"./style.css\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      width: \"300px\",\n    },\n  };\n\n  // const handleLogin = () => {\n  //   login().then((response) => {\n  //     if (response.message == true) {\n  //       dispatch(auth('uayuyauyuyauyuay', {}));\n  //     }\n  //   });\n  // };\n\n  // const handleLogin = () => {\n  //    window.open( 'https://id.nuagebiz.tech/auth/realms/megasoft/protocol/openid-connect/auth?redirect_uri=http%3A%2F%2Flocalhost%3A3000&state=eyJzaXRlIjogImh0dHA6Ly81Mi4xNDYuMC4xNTQ6ODAwMSIsICJ0b2tlbiI6ICIzNWQxYTc3MDk4MGNiODY3Yzg2ZjM3ZTllNDlkYWM3YTc2MTM4Y2FhYzM4YTI2OTc3MTQzNDhjYiIsICJyZWRpcmVjdF90byI6IG51bGx9&scope=openid&response_type=code&client_id=ms-hrms')}\n  // };\n\n  return (\n    <div className=\"login-section\">\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <div className=\"login-banner-image\">\n            <div className=\"login-banner-image-overlay\">\n              <div className=\"overlay-text-alignment\">\n                <div className=\"login-banner-text\">\n                  <h2>Making</h2>\n                  <p>\n                    Organizations Run Effectively By Providing Innovative HRMS\n                    Solutions Globally\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"text-right pt-3 pr-4\">\n            <img src={logo_ms} className=\"ms-logo-login\" />\n          </div>\n          <div className=\"login-form\">\n            <div className=\"login-form-center\">\n              <div\n                style={{\n                  marginTop: \"3rem\",\n                  justifyContent: \"center\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <PrimaryButton\n                  text=\"Proceed with Megasoft Login\"\n                  style={{ marginTop: \"20px\" }}\n                  allowDisabledFocus\n                  onClick={() => {\n                    window.open(\n                      \"http://52.146.0.154/api/method/frappe.integrations.oauth2.authorize?client_id=3b9ea85aeb&state=12345&response_type=token&scope=all&redirect_uri=http://localhost:3000/home\",\n                      \"_self\"\n                    );\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div\n        style={{\n          display: \"flex\",\n          padding: \"10px\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <img src={logo_ms} className=\"ms-logo\" />\n      </div>\n      <div\n        style={{\n          marginTop: \"10rem\",\n          justifyContent: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <PrimaryButton\n          text=\"Login\"\n          style={{ marginTop: \"20px\" }}\n          allowDisabledFocus\n          onClick={() => {\n            window.open(\n              \"http://52.146.0.154/api/method/frappe.integrations.oauth2.authorize?client_id=3b9ea85aeb&state=12345&response_type=token&scope=all&redirect_uri=http://localhost:3000/home\",\n              \"_self\"\n            );\n          }}\n        />\n      </div> */}\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(Login);\n","/home/pratik/Documents/mega-soft/src/SideNavigation/MainHeader.tsx",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"/home/pratik/Documents/mega-soft/src/Views/Appraisal/index.tsx",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286"],"import React, { useEffect, useState } from \"react\";\nimport {\n  DetailsList,\n  DetailsRow,\n  IColumn,\n  IDetailsListProps,\n  IDetailsListStyles,\n  IDetailsRowStyles,\n} from \"office-ui-fabric-react/lib/DetailsList\";\nimport \"office-ui-fabric-react/dist/css/fabric.css\";\nimport {\n  PrimaryButton,\n  getTheme,\n  TextField,\n  Dropdown,\n  IDropdownOption,\n  IDropdownStyles,\n  Link,\n  Spinner,\n  SpinnerSize,\n  Modal,\n  IconButton,\n  IModalStyles,\n  IIconProps,\n} from \"office-ui-fabric-react\";\nimport {\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\nimport Header from \"../../Header\";\n// import Panel from \"../../components/Panel\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport { Pagination } from \"@uifabric/experiments\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\n\nimport \"./style.css\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  deleteAppraisalByID,\n  edit_appraisal,\n  fetchAppraisalData,\n  fetchAppraisalDataById,\n} from \"../../redux/actions/apprisal\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { delete_appraisal } from \"../../redux/actions/apprisal\";\nimport moment from \"moment\";\n// import { roleType } from \"../../redux/actions/roleType\";\n\ninterface ParamTypes {\n  appraisalId: string;\n}\n\nfunction Appraisal(props: any) {\n  // const [hasMoreRecord, setHasMoreRecord] = useState(true);\n  const [limitStart, setLimitSTart] = useState(0);\n  const [limitPageLength, setLimitPageLength] = useState(5);\n  const [orderBy, setOrderBy] = useState(\"asc\");\n  const [orderByField, setOrderByField] = useState(\"id\");\n  const [filtersById, setFiltersById] = useState(\"\");\n  const [filtersByDescription, setFiltersByDescription] = useState(\"\");\n  const [filtersByReviewFreq, setFiltersByReviewFreq] = useState(\"\");\n  const [filtersByAppraisal, setFiltersByAppraisal] = useState(\"\");\n  const [filtersByFormat, setFiltersByFormat] = useState(\"\");\n  const dispatch = useDispatch();\n  const appraisal = useSelector((state: RootState) => state.appraisal);\n  const { appraisalList, isLoading, count, total_count }: any = appraisal;\n  const [formatDate, setFormatDate] = useState(\"\");\n\n  const params = useParams<ParamTypes>();\n\n  const newAppraisalList = appraisalList.map((element: any) => {\n    // console.log(\"element=>\", element);\n    const a = {\n      ...element,\n      review_from: moment(element.review_from).format(\"DD-MM-YYYY\"),\n      appraisal_to: moment(element.appraisal_to).format(\"DD-MM-YYYY\"),\n    };\n    return a;\n  });\n\n  // console.log(\"newDate==>\", newAppraisalList);\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    if (filtersByDescription) {\n      filters.push([\"appraisal_description\", \"like\", filtersByDescription]);\n    }\n    if (filtersByReviewFreq) {\n      filters.push([\"review_frequency\", \"=\", filtersByReviewFreq]);\n    }\n    if (filtersByAppraisal) {\n      filters.push([\"type\", \"=\", filtersByAppraisal]);\n    }\n    if (filtersByFormat) {\n      filters.push([\"format_type\", \"=\", filtersByFormat]);\n    }\n    dispatch(\n      fetchAppraisalData(\n        limitStart,\n        limitPageLength,\n        `${orderByField} ${orderBy}`,\n        JSON.stringify(filters)\n      )\n    );\n  }, [\n    limitStart,\n    limitPageLength,\n    orderBy,\n    filtersById,\n    filtersByDescription,\n    filtersByReviewFreq,\n    filtersByAppraisal,\n    filtersByFormat,\n  ]);\n\n  // const params = useParams<ParamTypes>();\n  // console.log(\"id => \", params.id);\n\n  const columns: IColumn[] = [\n    {\n      key: \"01\",\n      name: \"ID\",\n      fieldName: \"id\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSorted: true,\n      className: \"idColumn\",\n      isSortedDescending: false,\n      sortAscendingAriaLabel: \"Sorted A to Z\",\n      isRowHeader: true,\n      onColumnClick: _onColumnClick,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    // {\n    //   key: \"03\",\n    //   name: \"Name\",\n    //   fieldName: \"name\",\n    //   minWidth: 10,\n    //   maxWidth: 110,\n    //   isSortedDescending: false,\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\n    //   onColumnClick: _onColumnClick,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"04\",\n      name: \"Description\",\n      fieldName: \"appraisal_description\",\n      minWidth: 100,\n      maxWidth: 200,\n      isMultiline: true,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"05\",\n      name: \"Review From\",\n      fieldName: \"review_from\",\n      minWidth: 50,\n      maxWidth: 120,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: \"Appraisal To\",\n      fieldName: \"appraisal_to\",\n      minWidth: 50,\n      maxWidth: 120,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"06\",\n      name: \"Appraisal Type\",\n      fieldName: \"type\",\n      minWidth: 50,\n      maxWidth: 160,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"07\",\n      name: \"Format Type\",\n      fieldName: \"format_type\",\n      minWidth: 50,\n      maxWidth: 160,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"09\",\n      name: \"Review Frequency\",\n      fieldName: \"review_frequency\",\n      minWidth: 50,\n      maxWidth: 160,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"02\",\n      name: \"Action\",\n      fieldName: \"action\",\n      minWidth: 110,\n      maxWidth: 110,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              viewAppraisal(item);\n            }}\n          >\n            <VisibilityIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              updateAppriasal(item);\n            }}\n          >\n            <CreateIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons\"\n            onClick={() => {\n              deleteAppraisal(item);\n            }}\n          >\n            <DeleteIcon style={{ color: \"#f04336\" }} />\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const [showDelete, setShowDelete] = useState(false);\n  const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const theme = getTheme();\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const [deleteItemId, setDeleteItemId] = useState(null);\n  const [updateData, setUpdateData]: any = useState({});\n\n  const deleteAppraisal = (item: any) => {\n    setDeleteItemId(item.id);\n    // console.log(\"item id\", item)\n    const filters = [];\n    if (item.name) {\n      filters.push([\"id\", \"like\", item.name]);\n    }\n    fetchAppraisalDataById(\n      limitStart,\n      limitPageLength,\n      `${orderByField} ${orderBy}`,\n      JSON.stringify(filters)\n    ).then((response) => {\n      // console.log(response.data)\n      setUpdateData(response.data[0]);\n    });\n    setShowDelete(true);\n  };\n\n  // console.log(\"deleteItemId=>\", deleteItemId);\n\n  const handleDeleteAppraisal = () => {\n    const deleteQuery = {\n      id: deleteItemId,\n      is_deleted: 1,\n    };\n    // console.log(\"deleteQuery==>\", deleteQuery);\n    edit_appraisal(deleteQuery).then((response) => {\n      // console.log(\"response=>\", response);\n      setShowDelete(false);\n      setShowDeleteSuccess(true);\n      setDeleteItemId(null);\n      setUpdateData(null);\n    });\n  };\n\n  const viewAppraisal = (item: any) => {\n    history.push(`/appraisal/view/${item.id}`);\n  };\n\n  const updateAppriasal = (item: any) => {\n    // localStorage.setItem('apprisal_data', JSON.stringify(item));\n    history.push(`/appraisal/update/${item.id}`);\n  };\n\n  const _onBreadcrumbItemClicked = () => {};\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\", onClick: _onBreadcrumbItemClicked },\n    { text: \"Appraisal\", key: \"d2\", isCurrentItem: true, as: \"h4\" },\n  ];\n\n  const handleSearchClick = () => {\n    setFiltersById(`${searchById}%`);\n    setFiltersByDescription(`${searchByDescription}%`);\n    setFiltersByReviewFreq(`${reviewSearch?.key || \"\"}`);\n    setFiltersByAppraisal(`${AppraisalSearch?.key || \"\"}`);\n    setFiltersByFormat(`${formatSearch?.key || \"\"}`);\n    setLimitSTart(0);\n    setCurentPage(0);\n  };\n\n  function _onColumnClick(\n    ev?: React.MouseEvent<HTMLElement>,\n    column?: IColumn\n  ): void {\n    // console.log('column', column)\n    if (column?.fieldName === orderByField) {\n      if (orderBy === \"asc\") {\n        setOrderBy(\"desc\");\n      } else {\n        setOrderBy(\"asc\");\n      }\n    } else {\n      setOrderByField(column?.fieldName || \"id\");\n    }\n  }\n\n  const controlStyles = {\n    root: {\n      margin: \"0 10px 20px 0\",\n      maxWidth: \"300px\",\n      // borderRadius: \"20px\",\n    },\n\n    wrapper: {\n      \".ms-TextField-fieldGroup fieldGroup-91\": {\n        borderRadius: \"10px\",\n      },\n    },\n  };\n\n  const [currentPage, setCurentPage] = useState(0);\n\n  const [searchById, setSearchById] = useState(\"\");\n  const [searchByDescription, setSearchByDescription] = useState(\"\");\n  // const [appraisalToSearch, setAppraisalToSearch] = useState(\"\");\n  // const [role, setRole] = useState<IDropdownOption>({\n  //   key: \"employee\",\n  //   text: \"\",\n  // });\n\n  const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [AppraisalSearch, setAppraisalSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [formatSearch, setForamtSearch] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const itemSearch = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchById(text || \"\");\n    // if(text === \"\" && searchById !== \"\") {\n    //   setFiltersById(\"\");\n    //   setLimitSTart(0);\n    //   setCurentPage(0)\n    // }\n  };\n\n  const itemSearchDescription = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    setSearchByDescription(text || \"\");\n    // if(text === \"\" && searchById !== \"\") {\n    //   setFiltersById(\"\");\n    //   setLimitSTart(0);\n    //   setCurentPage(0)\n    // }\n  };\n\n  const itemSearchReview = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const itemSearchAppraisal = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setAppraisalSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const itemSearchFormatType = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setForamtSearch(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  // const handleRoles = (\n  //   ev?: React.FormEvent<HTMLDivElement>,\n  //   item?: IDropdownOption\n  // ): void => {\n  //   setRole(\n  //     item || {\n  //       key: \"\",\n  //       text: \"\",\n  //     }\n  //   );\n  // };\n\n  // const itemSearchApprisalTo = (\n  //   ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n  //   text?: string\n  // ): void => {\n  //   setAppraisalToSearch(text || \"\");\n  //   // if(text === \"\" && searchById !== \"\") {\n  //   //   setFiltersById(\"\");\n  //   //   setLimitSTart(0);\n  //   //   setCurentPage(0)\n  //   // }\n  // };\n\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        backgroundColor: \"#344f84\",\n      },\n    },\n    root: {\n      backgroundColor: \"#344f84\",\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const searchOptions: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Yearly\", text: \"Yearly\" },\n    { key: \"Monthly\", text: \"Monthly\" },\n  ];\n\n  const searchFormatType: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Sales Employees\", text: \"Sales Employees\" },\n    { key: \"Non Sales Employees\", text: \"Non Sales Employees\" },\n  ];\n\n  const searchAppraisal: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Annual Appraisal\", text: \"Annual Appraisal\" },\n    { key: \"Confirmation Appraisal\", text: \"Confirmation Appraisal\" },\n  ];\n\n  // const rolesOption: IDropdownOption[] = [\n  //   { key: \"employee\", text: \"Employee\" },\n  //   { key: \"manager\", text: \"Manager\" },\n  //   { key: \"hrContact\", text: \"HR Contact\" },\n  // ];\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      // width: 170,\n      border: \"0px\",\n    },\n  };\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n  const history = useHistory();\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const [advanceSearch, setAdvanceSearch] = useState(false);\n\n  const handleAdvanceSearch = () => {\n    if (advanceSearch == false) {\n      setAdvanceSearch(true);\n    }\n    if (advanceSearch == true) {\n      setAdvanceSearch(false);\n    }\n  };\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const renderRow: IDetailsListProps[\"onRenderRow\"] = (props) => {\n    const customStyles: Partial<IDetailsRowStyles> = {};\n    if (props) {\n      if (props.itemIndex % 2 === 0) {\n        // Every other row renders with a different background color\n        customStyles.root = { backgroundColor: theme.palette.themeLighterAlt };\n      }\n\n      return <DetailsRow {...props} styles={customStyles} />;\n    }\n    return null;\n  };\n\n  const renderNoData = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        {/* <PrimaryButton\n          text=\"New Appraisal\"\n          iconProps={{ iconName: \"Add\" }}\n          allowDisabledFocus\n          onClick={() => {\n            history.push(\"/addApprisal\");\n          }}\n          style={{ marginLeft: \"auto\", alignSelf: \"center\" }}\n          disabled={false}\n          checked={false}\n        /> */}\n        <Text\n          style={{\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: 50,\n            fontSize: 30,\n          }}\n        >\n          No Appraisal Data Found\n        </Text>\n      </div>\n    );\n  };\n\n  // console.log(\"appraisal data=>>\", appraisalList);\n\n  const renderData = () => {\n    return (\n      <React.Fragment>\n        <div className=\"card advance-search-section\">\n          <div className=\"searchBarClass\">\n            <TextField\n              label=\"ID\"\n              onChange={itemSearch}\n              placeholder=\"Enter ID\"\n              className=\"searchInput\"\n              styles={controlStyles}\n            />\n            <TextField\n              label=\"Description\"\n              className=\"searchInput\"\n              onChange={itemSearchDescription}\n              placeholder=\"Enter Description\"\n              styles={controlStyles}\n            />\n            <Dropdown\n              label=\"Review Frequency\"\n              placeholder=\"Select\"\n              options={searchOptions}\n              className=\"reviewFrequency\"\n              onChange={itemSearchReview}\n              style={{ padding: \"0px\" }}\n              styles={dropdownStyles}\n            />\n            <div\n              style={{ marginTop: \"30px\", cursor: \"pointer\" }}\n              onClick={() => {\n                handleAdvanceSearch();\n                // setAdvanceSearch(true);\n                // setAdvanceSearch(false);\n              }}\n            >\n              <MoreHorizIcon style={{ color: \"#344f84\", marginLeft: \"20px\" }} />\n            </div>\n            <PrimaryButton\n              iconProps={{ iconName: \"Search\" }}\n              onClick={handleSearchClick}\n              style={{\n                marginLeft: \"10px\",\n                alignSelf: \"center\",\n                marginTop: \"14px\",\n              }}\n            />\n            <PrimaryButton\n              text=\"New Appraisal\"\n              iconProps={{ iconName: \"Add\" }}\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\"/addApprisal\");\n              }}\n              style={{\n                marginLeft: \"auto\",\n                alignSelf: \"center\",\n                marginTop: \"14px\",\n              }}\n              disabled={false}\n              checked={false}\n            />\n          </div>\n          <div\n            className={\n              advanceSearch == true ? `advanceSearch` : `advanceSearchNull`\n            }\n          >\n            <Dropdown\n              label=\"Appraisal Type\"\n              placeholder=\"Select\"\n              options={searchAppraisal}\n              className=\"reviewFrequency\"\n              onChange={itemSearchAppraisal}\n              style={{ padding: \"0px\", marginRight: \"10px\" }}\n              styles={dropdownStyles}\n            />\n            <Dropdown\n              label=\"Format Type\"\n              placeholder=\"Select\"\n              options={searchFormatType}\n              className=\"reviewFrequency\"\n              onChange={itemSearchFormatType}\n              style={{ padding: \"0px\" }}\n              styles={dropdownStyles}\n            />\n          </div>\n        </div>\n\n        {isLoading ? (\n          <Spinner\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"50px\",\n              color: \"#00597d\",\n            }}\n            size={SpinnerSize.large}\n          />\n        ) : appraisalList.length === 0 ? (\n          renderNoData()\n        ) : (\n          <div className=\"card\">\n            <DetailsList\n              styles={listStyle}\n              items={newAppraisalList}\n              className=\"detail-list\"\n              // onRenderRow={renderRow}\n              columns={columns}\n              selectionMode={0}\n            />\n            <div className=\"pagination-style\">\n              <Pagination\n                format=\"buttons\"\n                // nextPageIconProps={{iconName: \"CaretRightSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                // previousPageIconProps={{iconName: \"CaretLeftSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                selectedPageIndex={currentPage}\n                // pageCount={hasMoreRecord ? currentPage + 2 : currentPage + 1}\n                pageCount={Math.ceil(total_count / limitPageLength)}\n                // itemsCount\n                itemsPerPage={limitPageLength}\n                // itemsPerPage={appraisalList.count}\n                // pageRangeDisplayed= {currentPage}\n                // totalItemCount={limitPageLength * 2}\n                totalItemCount={total_count}\n                // numberOfPageButton={2}\n                // lastPageIconProps={{\n                //   iconName: \"DoubleChevronRight\",\n                //   style: { display: \"none\" },\n                // }}\n                // firstPageIconProps={{\n                //   iconName: \"ChevronRight\",\n                //   style: { display: \"none\" },\n                // }}\n                onPageChange={(page) => {\n                  setLimitSTart(page * limitPageLength);\n                  setCurentPage(page);\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDelete}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Delete</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Are you sure you want to delete this item?\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Delete\"\n                allowDisabledFocus\n                onClick={handleDeleteAppraisal}\n                disabled={false}\n                checked={false}\n              />\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDeleteSuccess}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDeleteSuccess(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Item deleted successfully.\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Ok\"\n                allowDisabledFocus\n                onClick={() => {\n                  handleSearchClick();\n                  setShowDeleteSuccess(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  // console.log(\"data=>\", appraisal);\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            \n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderData()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(Appraisal);\n\n// const styles = {\n//   advanceSearch:{\n//     dispaly:\"flex\"\n//   }\n// }\n","/home/pratik/Documents/mega-soft/src/Views/AddAppraisal/index.tsx",["287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import React, { useState } from \"react\";\nimport {\n  TextField,\n  ITextFieldStyles,\n} from \"office-ui-fabric-react/lib/TextField\";\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport \"./style.css\";\nimport {\n  DatePicker,\n  DayOfWeek,\n  Dropdown,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStrings,\n  IDatePickerStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  IIconProps,\n  IModalStyles,\n  Label,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Separator,\n} from \"office-ui-fabric-react\";\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport Header from \"../../Header\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"./style.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { add_apprisal } from \"../../redux/actions/apprisal\";\n\nconst formateTypeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Sales Employees\" },\n  { key: \"key3\", text: \"Non Sales Employees\" },\n  // { key: \"key4\", text: \"Management\" },\n];\n\nconst reviewFrequencyOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Monthly\" },\n  { key: \"key2\", text: \"Yearly\" },\n];\n\nconst typeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Annual Appraisal\" },\n  { key: \"key2\", text: \"Confirmation Appraisal\" },\n];\n\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  dropdown: {\n    width: 170,\n    border: \"0px\",\n  },\n};\n\n// interface ParamTypes {\n//   id: string\n// }\n\nfunction AddAppraisal(props: any) {\n  const { t, i18n } = useTranslation();\n  // const params = useParams<ParamTypes>();\n  // console.log(\"id => \", params.id);\n  const stackTokens = { childrenGap: 10 };\n\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      borderRadius: \"10px\",\n      \".ms-TextField-wrapper\": {\n        // borderRadius: \"10px\",\n      },\n\n      \".ms-TextField-fieldGroup fieldGroup-195\": {\n        // borderRadius: \"10px\",\n      },\n    },\n  };\n\n  const DayPickerStrings: IDatePickerStrings = {\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ],\n\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n\n    goToToday: \"Go to today\",\n    prevMonthAriaLabel: \"Go to previous month\",\n    nextMonthAriaLabel: \"Go to next month\",\n    prevYearAriaLabel: \"Go to previous year\",\n    nextYearAriaLabel: \"Go to next year\",\n    closeButtonAriaLabel: \"Close date picker\",\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\n  };\n  const DayPickerStringsAppraisal: IDatePickerStrings = {\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ],\n\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n\n    goToToday: \"Go to today\",\n    prevMonthAriaLabel: \"Go to previous month\",\n    nextMonthAriaLabel: \"Go to next month\",\n    prevYearAriaLabel: \"Go to previous year\",\n    nextYearAriaLabel: \"Go to next year\",\n    closeButtonAriaLabel: \"Close date picker\",\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const [firstDayOfWeek] = React.useState(DayOfWeek.Sunday);\n  const [firstDayOfWeekAppraisal] = React.useState(DayOfWeek.Sunday);\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    icon: {\n      color: \"#344f84\",\n    },\n  };\n\n  const [claimsData, setClaimsData] = useState({\n    id: \"\",\n    description: \"\",\n    owner: \"\",\n    kraSettingGoal: false,\n    kraSettingCompetencies: false,\n    kraSettingDevelopmentPlan: false,\n    kraSettingSummary: false,\n    assessmentGoal: false,\n    assessmentCompetencies: false,\n    assessmentDevelopmentPlan: false,\n    assessmentSummary: false,\n  });\n\n  const [selectedType, setSelectedType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [reviewFrequency, setReviewFrequency] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const [formateType, setFormateType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  function onChangeCheckbox(\n    ev?: React.FormEvent<HTMLElement>,\n    isChecked?: boolean\n  ) {\n    const target = ev?.target as HTMLInputElement;\n    setClaimsData({\n      ...claimsData,\n      [target.name]: isChecked || false,\n    });\n  }\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setClaimsData({\n      ...claimsData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onChangeType = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setSelectedType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n  // console.log(\"type==>\", selectedType.text )\n\n  const onChangeReviewFrequency = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setReviewFrequency(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const onChangeFormateType = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setFormateType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/home\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      isCurrentItem: true,\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    { text: \"Add Appraisal\", key: \"d3\", as: \"h4\" },\n  ];\n\n  const [dateReview, setDateReview] = useState<Date | undefined>();\n  const [dateAppraisal, setdDateAppraisal] = useState<Date | undefined>();\n\n  const reviewFromDate = (date: Date | null | undefined): void => {\n    setDateReview(date || undefined);\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n  const appraisalToDate = (date: Date | null | undefined): void => {\n    setdDateAppraisal(date || undefined);\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const history = useHistory();\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      marginTop: \"-1rem\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  // // const rolesOption: IDropdownOption[] = [\n  // //   { key: \"employee\", text: \"Employee\" },\n  // //   { key: \"manager\", text: \"Manager\" },\n  // //   { key: \"hrContent\", text: \"HR content\" },\n  // // ];\n\n  // const [roles, setRoles] = useState<IDropdownOption>({\n  //   key: \"employee\",\n  //   text: \"\",\n  // });\n\n  // const handleRoles = (\n  //   ev?: React.FormEvent<HTMLDivElement>,\n  //   item?: IDropdownOption\n  // ): void => {\n  //   setRoles(\n  //     item || {\n  //       key: \"\",\n  //       text: \"\",\n  //     }\n  //   );\n  // };\n  // const dispatch = useDispatch();\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [errMsgDescription, setErrMsgDescription] = useState(\"\");\n  const [errMsgOwner, setErrMsgOwner] = useState(\"\");\n  const [errMsgFormatType, setErrMsgFormatType] = useState(\"\");\n  const [errMsgType, setErrMsgType] = useState(\"\");\n  const [errMsgReviewFrequency, setErrMsgReviewFrequency] = useState(\"\");\n  const [errMsgReviewDate, setErrMsgReviewDate] = useState(\"\");\n  const [errMsgAppraisalDate, setErrMsgAppraisalDate] = useState(\"\");\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const handleAddApprisal = () => {\n    if (claimsData.id === \"\" || claimsData.id.length > 5) {\n      setErrMsg(\"ID is required\");\n    }\n    if (claimsData.description === \"\") {\n      setErrMsgDescription(\"Description is required\");\n    }\n    // if (claimsData.owner === \"\") {\n    //   setErrMsgOwner(\"Somthing went wrong\");\n    // }\n    if (formateType.text === \"\") {\n      setErrMsgFormatType(\"Select format Type\");\n    }\n    if (reviewFrequency.text === \"\") {\n      setErrMsgReviewFrequency(\"Select review Frequency\");\n    }\n    if (selectedType.text === \"\") {\n      setErrMsgType(\"Select type\");\n    }\n    if (dateReview === null) {\n      setErrMsgReviewDate(\"Select review date\");\n    }\n    const addQuery = {\n      id: claimsData.id,\n      appraisal_description: claimsData.description,\n      description: \"22\",\n      format_type: formateType.text,\n      review_frequency: reviewFrequency.text,\n      type: selectedType.text,\n      kra_settings_tab_goals: claimsData.kraSettingGoal,\n      kra_settings_tab_competencies: claimsData.kraSettingCompetencies,\n      kra_settings_tab_development_plan: claimsData.kraSettingDevelopmentPlan,\n      kra_settings_tab_summary: claimsData.kraSettingSummary,\n      assessment_tab_goals: claimsData.assessmentGoal,\n      assessment_tab_competencies: claimsData.assessmentCompetencies,\n      assessment_tab_development_plan: claimsData.assessmentCompetencies,\n      assessment_tab_summary: claimsData.assessmentSummary,\n      route: \"appraisal/BB00002\",\n      review_from: moment(dateReview).format(\"YYYY-MM-DD\"),\n      appraisal_to: moment(dateAppraisal).format(\"YYYY-MM-DD\"),\n      appraisal_owner: claimsData.owner,\n    };\n    // console.log(\"addQueary=>\", addQuery);\n    add_apprisal(addQuery).then((response) => {\n      // console.log(\"response=>\", response.data);\n      if (response?.status === 200) {\n        setSuccessModal(true);\n        // history.push(\"/home\");\n      } else {\n        // console.log(\"failed==>\", failedModal);\n        setFailedModal(true);\n      }\n\n      // else {\n      //   console.log(\"then error msg btnClick==>\", response);\n      // }\n    });\n    // .catch((err) => {\n    //   console.log(\"Error in btnClick=>\", err);\n    // });\n  };\n\n  const renderForm = () => {\n    return (\n      <React.Fragment>\n        <div className=\"form-container card\">\n          <div className=\"goal-details\">\n            <TextField\n              required\n              placeholder={t(\"ID\")}\n              value={claimsData.id}\n              errorMessage={errMsg}\n              name=\"id\"\n              label={t(\"ID\")}\n              onChange={onChangeInput}\n              className=\"flexGrowTextInput\"\n            />\n            <TextField\n              required\n              placeholder={t(\"Description\")}\n              label={t(\"Description\")}\n              value={claimsData.description}\n              errorMessage={errMsgDescription}\n              // styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"description\"\n              onChange={onChangeInput}\n            />\n          </div>\n          {/* <div className=\"input-form\"></div> */}\n          <div className=\"goal-details\">\n            <DatePicker\n              isRequired={true}\n              label={t(\"Review_From\")}\n              className={`${controlClass.control} flexGrow w33`}\n              firstDayOfWeek={firstDayOfWeek}\n              strings={DayPickerStrings}\n              value={dateReview}\n              onSelectDate={reviewFromDate}\n              placeholder=\"Select a date\"\n              ariaLabel=\"Select a date\"\n              styles={datePickerStyle}\n            />\n            <DatePicker\n              isRequired={true}\n              label={t(\"Appraisal_To\")}\n              className={`${controlClass.control} flexGrow w33`}\n              firstDayOfWeek={firstDayOfWeekAppraisal}\n              strings={DayPickerStringsAppraisal}\n              onSelectDate={appraisalToDate}\n              styles={datePickerStyle}\n              value={dateAppraisal}\n              placeholder=\"Select a date\"\n              ariaLabel=\"Select a date\"\n            />\n            <Dropdown\n              required\n              errorMessage={errMsgReviewFrequency}\n              label={t(\"Review_Frequency\")}\n              placeholder=\"Select\"\n              className=\"flexGrow w33\"\n              onChange={onChangeReviewFrequency}\n              options={reviewFrequencyOptions}\n              // styles={dropdownStyles}\n            />\n          </div>\n\n          <div className=\"goal-details\">\n            <Dropdown\n              required\n              label={t(\"Type\")}\n              errorMessage={errMsgType}\n              placeholder=\"Select Type\"\n              className=\"flexGrow w33\"\n              options={typeOptions}\n              onChange={onChangeType}\n              // styles={typeDropdownStyles}\n            />\n            <Dropdown\n              required\n              label={t(\"Format_Type\")}\n              errorMessage={errMsgFormatType}\n              className=\"flexGrow w33\"\n              onChange={onChangeFormateType}\n              placeholder=\"Select Format Type\"\n              options={formateTypeOptions}\n              // styles={typeDropdownStyles}\n            />\n            <TextField\n              required\n              label={t(\"Owner\")}\n              placeholder=\"Owner\"\n              pattern={\"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"}\n              onGetErrorMessage={(v) =>\n                new RegExp(\n                  \"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"\n                ).test(v)\n                  ? \"\"\n                  : \"Please give currect pattern\"\n              }\n              value={claimsData.owner}\n              className=\"flexGrow w33\"\n              // styles={textfelidStyle}\n              // errorMessage={errMsgOwner}\n              name=\"owner\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <Separator />\n          <div className=\"rowCheckBox\">\n            <div>\n              <Label>{t(\"KRA_Settings_Tabs\")} </Label>\n              <Checkbox\n                label={\"Job History\"}\n                title={\"Competencies\"}\n                checked={claimsData.kraSettingCompetencies}\n                className=\"flexGrowCheckBox\"\n                name=\"kraSettingCompetencies\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Goals\"}\n                title={\"Goals\"}\n                checked={claimsData.kraSettingGoal}\n                className=\"flexGrowCheckBox\"\n                name=\"kraSettingGoal\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Training/ Development Plan\"}\n                title={\"Development Plans\"}\n                checked={claimsData.kraSettingDevelopmentPlan}\n                className=\"flexGrowCheckBox\"\n                name=\"kraSettingDevelopmentPlan\"\n                onChange={onChangeCheckbox}\n              />\n              {/* <Checkbox\n                label={\"Summary\"}\n                title={\"Summary\"}\n                checked={claimsData.kraSettingSummary}\n                className=\"flexGrowCheckBox\"\n                name=\"kraSettingSummary\"\n                onChange={onChangeCheckbox}\n              /> */}\n            </div>\n            <div>\n              {/* <Label>Assessment Tabs: </Label>\n              <Checkbox\n                label={\"Goals\"}\n                title={\"Goals\"}\n                checked={claimsData.assessmentGoal}\n                className=\"flexGrowCheckBox\"\n                name=\"assessmentGoal\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Competencies\"}\n                title={\"Competencies\"}\n                checked={claimsData.assessmentCompetencies}\n                className=\"flexGrowCheckBox\"\n                name=\"assessmentCompetencies\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Development Plans\"}\n                title={\"Development Plans\"}\n                checked={claimsData.assessmentDevelopmentPlan}\n                className=\"flexGrowCheckBox\"\n                name=\"assessmentSummary\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Summary\"}\n                title={\"Summary\"}\n                checked={claimsData.assessmentSummary}\n                className=\"flexGrowCheckBox\"\n                name=\"assessmentSummary\"\n                onChange={onChangeCheckbox}\n              /> */}\n            </div>\n            <div>\n              <Modal\n                titleAriaId={\"Title\"}\n                isOpen={successModal}\n                isBlocking={false}\n                styles={modalStyle}\n                // containerClassName={contentStyles.container}\n              >\n                <div className=\"modal-header-local\">\n                  <div className=\"modal-title\">Success</div>\n                  <IconButton\n                    styles={iconButtonStyles}\n                    iconProps={cancelIcon}\n                    ariaLabel=\"Close popup modal\"\n                    onClick={() => {\n                      setSuccessModal(false);\n                    }}\n                  />\n                </div>\n                <div className=\"modal-content-success\">\n                  Appraisal added Successfully.\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                  <PrimaryButton\n                    text=\"OK\"\n                    allowDisabledFocus\n                    onClick={() => {\n                      history.push(\"/home\");\n                    }}\n                    disabled={false}\n                    checked={false}\n                  />\n                </div>\n              </Modal>\n              <Modal\n                titleAriaId={\"Title failed\"}\n                isOpen={failedModal}\n                isBlocking={false}\n                styles={modalStyle}\n                // containerClassName={contentStyles.container}\n              >\n                <div className=\"modal-header-local\">\n                  <div className=\"modal-title\">Error</div>\n                  <IconButton\n                    styles={iconButtonStyles}\n                    iconProps={cancelIcon}\n                    ariaLabel=\"Close popup modal\"\n                    onClick={() => {\n                      setFailedModal(false);\n                    }}\n                  />\n                </div>\n                <div className=\"modal-content\">\n                  Somthing went wrong. Please try again.\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                  <PrimaryButton\n                    text=\"Go Back\"\n                    allowDisabledFocus\n                    onClick={() => {\n                      setFailedModal(false);\n                    }}\n                    disabled={false}\n                    checked={false}\n                  />\n                </div>\n              </Modal>\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\", marginBottom: \"1rem\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Add Appraisal\"\n                allowDisabledFocus\n                onClick={handleAddApprisal}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                disabled={false}\n                onClick={() => {\n                  history.push(\"/home\");\n                }}\n                checked={false}\n              />\n            </div>\n          </Stack>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(AddAppraisal);\n","/home/pratik/Documents/mega-soft/src/Views/AppraisalDetail/index.tsx",["301","302","303","304","305","306","307","308","309","310","311"],"import {\n  Checkbox,\n  DatePicker,\n  Dropdown,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IDatePickerStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  ITextFieldStyles,\n  Label,\n  mergeStyleSets,\n  PrimaryButton,\n  Separator,\n  Stack,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport { fetchAppraisalDataById } from \"../../redux/actions/apprisal\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport Header from \"../../Header\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  appraisalId: string;\n}\n\nconst stackTokens = { childrenGap: 10 };\n\nfunction AppraisalDetail(props: any) {\n  const params = useParams<ParamTypes>();\n\n  const [limitStart] = useState(0);\n  const [limitPageLength] = useState(5);\n  const [orderBy] = useState(\"asc\");\n  const [orderByField] = useState(\"id\");\n  const [filtersById] = useState(params.appraisalId);\n\n  const [appraisalDetail, setAppraisalDetail]: any = useState({});\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    fetchAppraisalDataById(\n      limitStart,\n      limitPageLength,\n      `${orderByField} ${orderBy}`,\n      JSON.stringify(filters)\n    ).then((response) => {\n      setAppraisalDetail(response.data[0]);\n    });\n  }, []);\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      marginTop: \"-1rem\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/home\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      isCurrentItem: true,\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    { text: \"Appraisal Details\", key: \"d3\", as: \"h4\" },\n  ];\n\n  const reviewDate = moment(appraisalDetail.review_from).format(\"DD-MM-YYYY\");\n  const appraisalTo = moment(appraisalDetail.appraisal_to).format(\"DD-MM-YYYY\");\n\n  const renderData = () => {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"emp-details-section\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <span>ID</span> : {appraisalDetail.id}\n              </div>\n              <div className=\"col-md-8\">\n                <span>Description</span> :{\" \"}\n                {appraisalDetail.appraisal_description}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Review From</span> : {reviewDate}\n              </div>\n              <div className=\"col-md-8\">\n                <span>Appraisal To</span> : {appraisalTo}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Review Frequency</span> :{\" \"}\n                {appraisalDetail.review_frequency}\n              </div>\n              <div className=\"col-md-8\">\n                <span>Type</span> : {appraisalDetail.type}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Format Type</span> : {appraisalDetail.format_type}\n              </div>\n              <div className=\"col-md-8\">\n                <span>Owner</span> : {appraisalDetail.appraisal_owner}\n              </div>\n              {/* <div className=\"col-md-4\">\n                <span>Counter signing</span> :{\" \"}\n                {appraisalDetail.counter_signing_name}\n              </div> */}\n            </div>\n          </div>\n          <Separator />\n          <div className=\"rowCheckBox\">\n            <div>\n              <Label>KRA/ Goal </Label>\n              <Checkbox\n                disabled={true}\n                label={\"Job History\"}\n                title={\"Competencies\"}\n                checked={appraisalDetail.kra_settings_tab_competencies}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_competencies\"\n              />\n              <Checkbox\n                disabled={true}\n                label={\"Goals\"}\n                title={\"Goals\"}\n                checked={appraisalDetail.kra_settings_tab_goals}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_goals\"\n              />\n              <Checkbox\n                disabled={true}\n                label={\"Training/ Development Plan\"}\n                title={\"Development Plans\"}\n                checked={appraisalDetail.kra_settings_tab_development_plan}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_development_plan\"\n              />\n              {/* <Checkbox\n                label={\"Summary\"}\n                title={\"Summary\"}\n                checked={updateData.kra_settings_tab_summary}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_summary\"\n                onChange={onChangeCheckbox}\n              /> */}\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            ></div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Back\"\n                allowDisabledFocus\n                disabled={false}\n                onClick={() => {\n                  history.push(\"/home\");\n                }}\n                checked={false}\n              />\n            </div>\n          </Stack>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            \n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderData()} </div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(AppraisalDetail);\n","/home/pratik/Documents/mega-soft/src/Views/UpdateAppraisal/index.tsx",["312","313","314","315","316","317","318","319","320","321","322"],"import React, { useEffect, useState } from \"react\";\nimport {\n  TextField,\n  ITextFieldStyles,\n} from \"office-ui-fabric-react/lib/TextField\";\nimport { useParams } from \"react-router-dom\";\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport \"./style.css\";\nimport {\n  DatePicker,\n  DayOfWeek,\n  Dropdown,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStrings,\n  IDatePickerStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  IIconProps,\n  IModalStyles,\n  Label,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Separator,\n} from \"office-ui-fabric-react\";\nimport { Checkbox } from \"office-ui-fabric-react/lib/Checkbox\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\nimport Header from \"../../Header\";\nimport moment from \"moment\";\n\nimport \"./style.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { edit_appraisal } from \"../../redux/actions/apprisal\";\nimport { fetchAppraisalDataById } from \"../../redux/actions/apprisal\";\n\nconst formateTypeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Sales Employees\" },\n  { key: \"key3\", text: \"Non Sales Employees\" },\n  // { key: \"key4\", text: \"Management\" },\n];\nconst reviewFrequencyOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Monthly\" },\n  { key: \"key2\", text: \"Yearly\" },\n];\n\nconst typeOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Annual Appraisal\" },\n  { key: \"key2\", text: \"Confirmation Appraisal\" },\n];\n\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  dropdown: {\n    width: 170,\n    border: \"0px\",\n  },\n};\n\ninterface ParamTypes {\n  appraisalId: string;\n}\n\nfunction UpdateAppraisal(props: any) {\n  const params = useParams<ParamTypes>();\n  const stackTokens = { childrenGap: 10 };\n\n  const [limitStart] = useState(0);\n  const [limitPageLength] = useState(5);\n  const [orderBy] = useState(\"asc\");\n  const [orderByField] = useState(\"id\");\n  const [filtersById] = useState(params.appraisalId);\n\n  const [updateData, setUpdateData]: any = useState({});\n\n  useEffect(() => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"id\", \"like\", filtersById]);\n    }\n    fetchAppraisalDataById(\n      limitStart,\n      limitPageLength,\n      `${orderByField} ${orderBy}`,\n      JSON.stringify(filters)\n    ).then((response) => {\n      setUpdateData(response.data[0]);\n    });\n  }, []);\n\n  // console.log(\"upadetdata==>\", updateData);\n\n  // const appraisalList = useSelector((state: RootState) => state.appraisal.appraisalList) || [];\n  //   const updateData = appraisalList.find(item => item.id === params.appraisalId);\n\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      \".ms-TextField-wrapper\": {\n        borderRadius: \"10px\",\n      },\n\n      \".ms-TextField-fieldGroup fieldGroup-195\": {\n        borderRadius: \"10px\",\n      },\n    },\n  };\n\n  const DayPickerStrings: IDatePickerStrings = {\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ],\n\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ],\n\n    shortDays: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n\n    goToToday: \"Go to today\",\n    prevMonthAriaLabel: \"Go to previous month\",\n    nextMonthAriaLabel: \"Go to next month\",\n    prevYearAriaLabel: \"Go to previous year\",\n    nextYearAriaLabel: \"Go to next year\",\n    closeButtonAriaLabel: \"Close date picker\",\n    monthPickerHeaderAriaLabel: \"{0}, select to change the year\",\n    yearPickerHeaderAriaLabel: \"{0}, select to change the month\",\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const [firstDayOfWeek, setFirstDayOfWeek] = React.useState(DayOfWeek.Sunday);\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   marginRight: \"10px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n\n  const [formateType, setFormateType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  function onChangeCheckbox(\n    ev?: React.FormEvent<HTMLElement>,\n    isChecked?: boolean\n  ) {\n    const target = ev?.target as HTMLInputElement;\n    setUpdateData({\n      ...updateData,\n      [target.name]: isChecked || false,\n    });\n  }\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setUpdateData({\n      ...updateData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onChangeFormateType = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setFormateType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/home\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      isCurrentItem: true,\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    { text: \"Update Appraisal\", key: \"d3\", as: \"h4\" },\n  ];\n\n  // const [dateReview, setDateReview] = useState<Date | null | undefined>(\n  //   new Date(updateData.review_from)\n  // );\n  // const [dateAppraisal, setdDateAppraisal] = useState<Date | null | undefined>(\n  //   new Date(updateData.appraisal_to)\n  // );\n\n  // const reviewFromDate = (date: Date | null | undefined): void => {\n  //   const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  //   // console.log(\"date==>\", reviewFrequencyDate);\n  //   setDateReview(reviewFrequencyDate);\n  // };\n  // const appraisalToDate = (date: Date | null | undefined): void => {\n  //   const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  //   // console.log(\"date==>\", reviewFrequencyDate);\n  //   setdDateAppraisal(appraisalDate);\n  // };\n\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const history = useHistory();\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      marginTop: \"-1rem\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  // const rolesOption: IDropdownOption[] = [\n  //   { key: \"key1\", text: \"HR\" },\n  //   { key: \"key2\", text: \"Manager\" },\n  //   { key: \"key3\", text: \"Employee\" },\n  // ];\n\n  // const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\n  //   key: \"\",\n  //   text: \"\",\n  // });\n\n  // const handleRoles = (\n  //   ev?: React.FormEvent<HTMLDivElement>,\n  //   item?: IDropdownOption\n  // ): void => {\n  //   setReviewSearch(\n  //     item || {\n  //       key: \"\",\n  //       text: \"\",\n  //     }\n  //   );\n  // };\n  // const dispatch = useDispatch();\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const handleUpdateApprisal = () => {\n    const updateQuery = {\n      ...updateData,\n      review_from: moment(updateData.review_from).format(\"YYYY-MM-DD\"),\n      appraisal_to: moment(updateData.appraisal_to).format(\"YYYY-MM-DD\"),\n      description: \"22\",\n      route: \"appraisal/BB00002\",\n    };\n    // console.log(\"updateQuery=>\", updateQuery);\n    edit_appraisal(updateQuery).then((response) => {\n      // console.log(\"response=>\", response);\n      if (response?.status === 200) {\n        setSuccessModal(true);\n      } else {\n        setFailedModal(true);\n      }\n    });\n    // .catch((err) => {\n    //   console.log(\"Error in btnClick=>\", err);\n    // });\n  };\n\n  const renderUpdateForm = () => {\n    return (\n      <React.Fragment>\n        <div className=\"form-container card\">\n          <div className=\"goal-details\">\n            <TextField\n              disabled\n              placeholder=\"ID\"\n              value={updateData.id}\n              name=\"id\"\n              label=\"Id\"\n              onChange={onChangeInput}\n              className=\"flexGrowTextInput\"\n            />\n            <TextField\n              required\n              placeholder=\"Description\"\n              label=\"Description\"\n              value={updateData.appraisal_description}\n              // styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n              onChange={onChangeInput}\n            />\n          </div>\n          {/* <div className=\"input-form\"></div> */}\n          <div className=\"goal-details\">\n            <DatePicker\n              isRequired\n              label=\"Review From\"\n              // value={updateData.review_from}\n              className={`${controlClass.control} flexGrow w33`}\n              firstDayOfWeek={firstDayOfWeek}\n              strings={DayPickerStrings}\n              value={new Date(updateData.review_from)}\n              onSelectDate={(date) =>\n                setUpdateData({ ...updateData, review_from: date })\n              }\n              placeholder=\"Select a date\"\n              ariaLabel=\"Select a date\"\n              styles={datePickerStyle}\n            />\n            <DatePicker\n              isRequired\n              label=\"Appraisal To\"\n              value={new Date(updateData.appraisal_to)}\n              className={`${controlClass.control} flexGrow w33`}\n              firstDayOfWeek={firstDayOfWeek}\n              strings={DayPickerStrings}\n              onSelectDate={(date) =>\n                setUpdateData({ ...updateData, appraisal_to: date })\n              }\n              styles={datePickerStyle}\n              placeholder=\"Select a date\"\n              ariaLabel=\"Select a date\"\n            />\n            <Dropdown\n              required\n              selectedKey={\n                reviewFrequencyOptions.find(\n                  (item) => item.text === updateData.review_frequency\n                )?.key\n              }\n              label=\"Review Frequency\"\n              placeholder=\"Select\"\n              className=\"flexGrow w33\"\n              onChange={(ev, item) =>\n                setUpdateData({ ...updateData, review_frequency: item?.text })\n              }\n              options={reviewFrequencyOptions}\n              // styles={dropdownStyles}\n            />\n          </div>\n          <div className=\"goal-details\">\n            <Dropdown\n              required\n              selectedKey={\n                typeOptions.find((item) => item.text === updateData.type)?.key\n              }\n              label=\"Type\"\n              placeholder=\"Select Type\"\n              className=\"flexGrow w33\"\n              options={typeOptions}\n              onChange={(ev, item) =>\n                setUpdateData({ ...updateData, type: item?.text })\n              }\n              // styles={typeDropdownStyles}\n            />\n            <Dropdown\n              required\n              selectedKey={\n                formateTypeOptions.find(\n                  (item) => item.text === updateData.format_type\n                )?.key\n              }\n              label=\"Format Type\"\n              className=\"flexGrow w33\"\n              onChange={(ev, item) =>\n                setUpdateData({ ...updateData, format_type: item?.text })\n              }\n              placeholder=\"Select Format Type\"\n              options={formateTypeOptions}\n              // styles={typeDropdownStyles}\n            />\n            <TextField\n              required\n              label=\"Owner\"\n              placeholder=\"Owner\"\n              pattern={\"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"}\n              onGetErrorMessage={(v) =>\n                new RegExp(\n                  \"^[a-zA-Z]+[.,-]{0,1}[ ]{0,1}[a-zA-Z]+[.]{0,1}$\"\n                ).test(v)\n                  ? \"\"\n                  : \"Please give currect pattern\"\n              }\n              value={updateData.appraisal_owner}\n              styles={textfelidStyle}\n              name=\"appraisal_owner\"\n              className=\"flexGrow w33\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <Separator />\n          <div className=\"rowCheckBox\">\n            <div>\n              <Label>KRA Settings Tabs: </Label>\n              <Checkbox\n                label={\"Job History\"}\n                title={\"Competencies\"}\n                checked={updateData.kra_settings_tab_competencies}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_competencies\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Goals\"}\n                title={\"Goals\"}\n                checked={updateData.kra_settings_tab_goals}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_goals\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Training/ Development Plan\"}\n                title={\"Development Plans\"}\n                checked={updateData.kra_settings_tab_development_plan}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_development_plan\"\n                onChange={onChangeCheckbox}\n              />\n              {/* <Checkbox\n                label={\"Summary\"}\n                title={\"Summary\"}\n                checked={updateData.kra_settings_tab_summary}\n                className=\"flexGrowCheckBox\"\n                name=\"kra_settings_tab_summary\"\n                onChange={onChangeCheckbox}\n              /> */}\n            </div>\n            <div>\n              {/* <Label>Assessment Tabs: </Label>\n              <Checkbox\n                label={\"Goals\"}\n                title={\"Goals\"}\n                checked={updateData.assessment_tab_goals}\n                className=\"flexGrowCheckBox\"\n                name=\"assessment_tab_goals\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Competencies\"}\n                title={\"Competencies\"}\n                checked={updateData.assessment_tab_competencies}\n                className=\"flexGrowCheckBox\"\n                name=\"assessment_tab_competencies\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Development Plans\"}\n                title={\"Development Plans\"}\n                checked={updateData.assessment_tab_development_plan}\n                className=\"flexGrowCheckBox\"\n                name=\"assessment_tab_development_plan\"\n                onChange={onChangeCheckbox}\n              />\n              <Checkbox\n                label={\"Summary\"}\n                title={\"Summary\"}\n                checked={updateData.assessment_tab_summary}\n                className=\"flexGrowCheckBox\"\n                name=\"assessment_tab_summary\"\n                onChange={onChangeCheckbox}\n              /> */}\n            </div>\n            <div>\n              <Modal\n                titleAriaId={\"Title\"}\n                isOpen={successModal}\n                isBlocking={false}\n                styles={modalStyle}\n                // containerClassName={contentStyles.container}\n              >\n                <div className=\"modal-header\">\n                  <div className=\"modal-title\">Success</div>\n                  <IconButton\n                    styles={iconButtonStyles}\n                    iconProps={cancelIcon}\n                    ariaLabel=\"Close popup modal\"\n                    onClick={() => {\n                      history.push(\"/home\");\n                    }}\n                  />\n                </div>\n                <div className=\"modal-content-success\">\n                  Appraisal updated Successfully.\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                  <PrimaryButton\n                    text=\"OK\"\n                    allowDisabledFocus\n                    onClick={() => {\n                      history.push(\"/home\");\n                    }}\n                    disabled={false}\n                    checked={false}\n                  />\n                </div>\n              </Modal>\n              <Modal\n                titleAriaId={\"Title failed\"}\n                isOpen={failedModal}\n                isBlocking={false}\n                styles={modalStyle}\n                // containerClassName={contentStyles.container}\n              >\n                <div className=\"modal-header\">\n                  <div className=\"modal-title\">Error</div>\n                  <IconButton\n                    styles={iconButtonStyles}\n                    iconProps={cancelIcon}\n                    ariaLabel=\"Close popup modal\"\n                    onClick={() => {\n                      setFailedModal(false);\n                    }}\n                  />\n                </div>\n                <div className=\"modal-content\">\n                  Somthing went wrong. Please try again.\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                  <PrimaryButton\n                    text=\"Go Back\"\n                    allowDisabledFocus\n                    onClick={() => {\n                      setFailedModal(false);\n                    }}\n                    disabled={false}\n                    checked={false}\n                  />\n                </div>\n              </Modal>\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Update\"\n                allowDisabledFocus\n                onClick={handleUpdateApprisal}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                disabled={false}\n                onClick={() => {\n                  history.push(\"/home\");\n                }}\n                checked={false}\n              />\n            </div>\n          </Stack>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            \n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderUpdateForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\nexport default connect((state) => ({\n  ...state,\n}))(UpdateAppraisal);\n","/home/pratik/Documents/mega-soft/src/Views/GoalSetting/index.tsx",["323","324","325","326","327","328","329","330","331","332","333"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport {\n  DetailsList,\n  Dropdown,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IColumn,\n  IDetailsListStyles,\n  IDropdownOption,\n  IDropdownStyles,\n  PrimaryButton,\n  Spinner,\n  SpinnerSize,\n  Text,\n} from \"office-ui-fabric-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchEmployeeData } from \"../../redux/actions/employeeData\";\nimport { RootState } from \"../../redux/reducers\";\nimport { Pagination } from \"@uifabric/experiments\";\n\nfunction GoalSetting(props: any) {\n  const dispatch = useDispatch();\n\n  const [doctype, setDoctype] = useState(\"EmployeeAppraisal\");\n  const [limit_start, setLimitStart] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [role, setRole] = useState(\"Employee\");\n  const [currentPage, setCurentPage] = useState(0);\n  const [limitPageLength, setLimitPageLength] = useState(3);\n  const [limitStart, setLimitSTart] = useState(0);\n  const [filterByStatus, setFilterByStatus] = useState(\"\");\n\n  const employee = useSelector((state: RootState): any => state.employeeList);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  // console.log(\"roleTYpe==>\", roleType)\n  const { employeeList, isLoading, total_count, count } = employee;\n\n  useEffect((): void => {\n    const filters = [];\n    if (filterByStatus) {\n      filters.push([\"status\", \"like\", filterByStatus]);\n    }\n    const newRoleType = sessionStorage.getItem(\"roleType\");\n    dispatch(\n      fetchEmployeeData(\n        doctype,\n        limit_start,\n        limit,\n        newRoleType,\n        JSON.stringify(filters)\n      )\n    );\n  }, [doctype, limit_start, limit, filterByStatus]);\n\n  const [status, setStatus] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n  const history = useHistory();\n\n  const dropdownStyles: Partial<IDropdownStyles> = {\n    dropdown: {\n      width: 250,\n      border: \"0px\",\n    },\n  };\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        backgroundColor: \"#344f84\",\n      },\n    },\n    root: {\n      backgroundColor: \"#344f84\",\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const statusOption: IDropdownOption[] = [\n    { key: \"\", text: \"Select\" },\n    { key: \"Pending with Employee\", text: \"Pending with Employee\" },\n    { key: \"Pending with Reviewer\", text: \"Pending with Reviewer\" },\n    { key: \"Pending Counter Signing\", text: \"Pending Counter Signing\" },\n    { key: \"Complete\", text: \"Complete\" },\n  ];\n\n  const columns: IColumn[] = [\n    // {\n    //   key: \"01\",\n    //   name: \"S.No\",\n    //   fieldName: \"sno\",\n    //   minWidth: 50,\n    //   maxWidth: 50,\n    //   isSorted: true,\n    //   className: \"idColumn\",\n    //   isSortedDescending: false,\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\n    //   isRowHeader: true,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"02\",\n      name: \"Action\",\n      fieldName: \"action\",\n      minWidth: 80,\n      maxWidth: 110,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <PrimaryButton\n            text=\"KRA Setting\"\n            allowDisabledFocus\n            onClick={() => {\n              handleKraData(item);\n            }}\n            className=\"action-btn\"\n            style={{\n              padding: \"0px\",\n              fontSize: \"0.75rem\",\n              height: \"24px\",\n              borderRadius: \"3px\",\n            }}\n            disabled={false}\n            checked={false}\n          />\n        </div>\n      ),\n    },\n\n    {\n      key: \"03\",\n      name: \"Employee ID\",\n      fieldName: \"employee_id\",\n      minWidth: 50,\n      maxWidth: 90,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"04\",\n      name: \"Employee Name\",\n      fieldName: \"employee_name\",\n      minWidth: 50,\n      maxWidth: 120,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    // {\n    //   key: \"05\",\n    //   name: \"Manager ID\",\n    //   fieldName: \"manager_id\",\n    //   minWidth: 50,\n    //   maxWidth: 100,\n    //   isSortedDescending: false,\n    //   isRowHeader: true,\n    //   isResizable: false,\n    // },\n    {\n      key: \"06\",\n      name: \"Manager Name\",\n      fieldName: \"manager_name\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"07\",\n      name: \"Status\",\n      fieldName: \"status\",\n      minWidth: 50,\n      maxWidth: 170,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: \"Appraisal Type\",\n      fieldName: \"appraisal_type\",\n      minWidth: 50,\n      maxWidth: 260,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n  ];\n\n  const handleKraData = (item: any) => {\n    history.push(\n      `/appraisal/goalsetting/view/${item.employee_id}/${item.appraisal_id}`\n    );\n    // history.push(\"/appraisal/goalsetting/view\");\n  };\n\n  const handleSearch = () => {\n    setFilterByStatus(`${status?.key || \"\"}`);\n  };\n\n  const onChangeStatus = (\n    ev?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setStatus(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const _onBreadcrumbItemClicked = () => {\n    history.push(\"/home\");\n  };\n\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: _onBreadcrumbItemClicked,\n    },\n    // { text: \"Employee\", key: \"d3\", as: \"h4\" },\n    { text: \"Goal Setting\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n\n  const renderNoData = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Text\n          style={{\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: 50,\n            fontSize: 30,\n          }}\n        >\n          No Data Found.\n        </Text>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">\n          <div className=\"card advance-search-section\">\n            <div\n              // className=\"card\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <Dropdown\n                label=\"Status\"\n                placeholder=\"Select\"\n                options={statusOption}\n                className=\"reviewFrequency\"\n                onChange={onChangeStatus}\n                style={{ padding: \"0px\" }}\n                styles={dropdownStyles}\n              />\n              <PrimaryButton\n                iconProps={{ iconName: \"Search\" }}\n                style={{\n                  marginLeft: \"20px\",\n                  alignSelf: \"center\",\n                  marginTop: \"24px\",\n                }}\n                onClick={handleSearch}\n              />\n            </div>\n          </div>\n          {isLoading ? (\n            <Spinner\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                padding: \"50px\",\n                color: \"#00597d\",\n              }}\n              size={SpinnerSize.large}\n            />\n          ) : employeeList.length === 0 ? (\n            renderNoData()\n          ) : (\n            <div className=\"card\">\n              <DetailsList\n                styles={listStyle}\n                items={employeeList}\n                className=\"detail-list\"\n                columns={columns}\n                selectionMode={0}\n              />\n              <div className=\"pagination-style\">\n                <Pagination\n                  format=\"buttons\"\n                  // nextPageIconProps={{iconName: \"CaretRightSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                  // previousPageIconProps={{iconName: \"CaretLeftSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                  selectedPageIndex={currentPage}\n                  pageCount={Math.ceil(total_count / limitPageLength)}\n                  itemsPerPage={limitPageLength}\n                  totalItemCount={total_count}\n                  onPageChange={(page) => {\n                    setLimitSTart(page * limitPageLength);\n                    setCurentPage(page);\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(GoalSetting);\n","/home/pratik/Documents/mega-soft/src/Views/EmployeeDetails/index.tsx",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import {\n  DetailsList,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IColumn,\n  IconButton,\n  IDetailsListStyles,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  Label,\n  Link,\n  Modal,\n  Pivot,\n  PivotItem,\n  PivotLinkFormat,\n  PrimaryButton,\n  Spinner,\n  SpinnerSize,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  fetchJobHistory,\n  jobHistoryData,\n  update_JobHistory,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport { fetchEmployeeDataByID } from \"../../redux/actions/employeeData\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { Pagination } from \"@uifabric/experiments\";\nimport jobHistory from \"../../redux/reducers/jobHistory\";\nimport JobHistoryDetails from \"../JobHistoryDetails\";\nimport {\n  fetchGoalData,\n  fetchGoalDataName,\n  update_goals,\n} from \"../../redux/actions/goal\";\nimport {\n  fetchDevelopmentPlan,\n  handleDevelopmentDataChange,\n} from \"../../redux/actions/developmentPlan\";\nimport \"./style.css\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  employeeId: string;\n  appraisalId: string;\n}\n\nfunction EmployeeDetails(props: any) {\n  const params = useParams<ParamTypes>();\n  const [doctype] = useState(\"EmployeeAppraisal\");\n  const [limit_start] = useState(0);\n  const [limit] = useState(10);\n  const [filtersById] = useState(params.employeeId);\n  const [filtersByApprisal] = useState(params.appraisalId);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n\n  const [employeeData, setEmployeeData]: any = useState({});\n  const history = useHistory();\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\n\n  const [currentPage, setCurentPage] = useState(0);\n  const [currentPageGoal, setCurentPageGoal] = useState(0);\n  const [limitPageLength] = useState(5);\n  const [limitPageLengthGoal] = useState(5);\n  const [limitStart, setLimitSTart] = useState(0);\n  const [limitStartGoal, setLimitSTartGoal] = useState(0);\n\n  const [limitStartDevelopment, setLimitStartDevelopment] = useState(0);\n  const [orderByDevelopment, setOrderByDevelopment] = useState(\"serial_no asc\");\n  const [count, setCount] = useState(0);\n\n  const [totalCount, setTotalCount] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\n  const [orderByJobHistory] = useState(\"from_date asc\");\n  const [limitPageLengthDevelopment] = useState(5);\n  const [developmentData, setDevelopmentData]: any = useState([]);\n\n  const [goalData, setGoalData]: any = useState({});\n  const [goalCount, setGoalCount] = useState(0);\n  const [employeeCount, setEmployeeCount] = useState(0);\n  const [goalTotalCount, setGoalTotalCount] = useState(0);\n  const [developmentCount, setDevelopmentCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  const jobHistoryDataLocal = useSelector(\n    (state: RootState) => state.jobHistory\n  );\n  const { jobHistory, isLoading, total_count }: any = jobHistoryDataLocal;\n  // console.log(\"jobHistoryDataLocal=>\", jobHistory);\n\n  const newRoleType: any = sessionStorage.getItem(\"roleType\");\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    if (filtersByApprisal) {\n      filters.push([\"appraisal_id\", \"=\", filtersByApprisal]);\n    }\n    fetchEmployeeDataByID(\n      doctype,\n      limit_start,\n      limit,\n      newRoleType,\n      JSON.stringify(filters)\n    ).then((response) => {\n      setLoading(true);\n      // console.log(\"employee response ==>\", response);\n      setEmployeeCount(response.count);\n      setEmployeeData(response.data[0]);\n      setLoading(false);\n    });\n  }, [doctype, limit_start, limit, newRoleType]);\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    dispatch(\n      jobHistoryData(\n        newRoleType,\n        JSON.stringify(filters),\n        limitStart,\n        limitPageLength,\n        orderByJobHistory\n      )\n    );\n  }, [newRoleType, limitStart, limitPageLength, orderByJobHistory]);\n  const newJobHistoryData = jobHistory.map((element: any) => {\n    const a = {\n      ...element,\n      from_date: moment(element.from_date).format(\"DD-MM-YYYY\"),\n      to_date: moment(element.to_date).format(\"DD-MM-YYYY\"),\n    };\n    return a;\n  });\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    fetchGoalData(\n      limitStartGoal,\n      limitPageLengthGoal,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response) => {\n      // console.log(\"response of Goal===>\", response);\n      setGoalData(response.data);\n      setGoalCount(response.count);\n      setGoalTotalCount(response.total_count);\n    });\n  }, [limitStartGoal, limitPageLengthGoal]);\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    fetchDevelopmentPlan(\n      limitStartDevelopment,\n      limitPageLengthDevelopment,\n      orderByDevelopment,\n      JSON.stringify(filters)\n    ).then((response) => {\n      // console.log(\"response of Development===>\", response.data);\n      setDevelopmentCount(response.count);\n      let res = response.data;\n      for (let i = response.count; i < 5; i++) {\n        let emptyPlan = {\n          name: \"\",\n          appraisal_id: params.appraisalId,\n          employee_id: params.employeeId,\n          serial_no: i + 1,\n          development_plan: \"\",\n          reviewer_remarks: \"\",\n          frozen: 0,\n        };\n        res.push(emptyPlan);\n      }\n      setDevelopmentData(res);\n    });\n  }, [limitStartGoal, limitPageLengthGoal]);\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Employee Details\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const updateJobhistory = (item: any) => {\n    history.push(\n      `/appraisal/goalsetting/view/jobhistory/updateJobHistory/${item.name}`\n    );\n  };\n\n  const jobHistoryDetails = (item: any) => {\n    history.push(\n      `/appraisal/goalsetting/view/jobhistory/jobHistoryDetail/${item.name}`\n    );\n  };\n\n  const handleDevelopemntChange = (\n    index: number | undefined,\n    value: string | undefined\n  ) => {\n    setDevelopmentData(\n      developmentData.map((item: any, i: any) =>\n        index === i\n          ? {\n              ...item,\n              development_plan: value || \"\",\n            }\n          : item\n      )\n    );\n  };\n\n  const handleRemarkChange = (\n    index: number | undefined,\n    value: string | undefined\n  ) => {\n    setDevelopmentData(\n      developmentData.map((item: any, i: any) =>\n        index === i\n          ? {\n              ...item,\n              reviewer_remarks: value || \"\",\n            }\n          : item\n      )\n    );\n  };\n\n  const columnsJobHistory: IColumn[] = [\n    // {\n    //   key: \"02\",\n    //   name: \"Appraisal ID\",\n    //   fieldName: \"appraisal_id\",\n    //   minWidth: 50,\n    //   maxWidth: 90,\n    //   isSortedDescending: false,\n    //   isRowHeader: true,\n    //   isResizable: false,\n    // },\n    // {\n    //   key: \"03\",\n    //   name: \"Employee ID\",\n    //   fieldName: \"employee_id\",\n    //   minWidth: 50,\n    //   maxWidth: 80,\n    //   isRowHeader: true,\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\n    //   isResizable: false,\n    // },\n    {\n      key: \"06\",\n      name: \"Position Held\",\n      fieldName: \"position_held\",\n      minWidth: 50,\n      maxWidth: 140,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"05\",\n      name: \"Place of Posting\",\n      fieldName: \"place_of_posting\",\n      minWidth: 50,\n      maxWidth: 110,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"09\",\n      name: \"From Date\",\n      fieldName: \"from_date\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: \"To Date\",\n      fieldName: \"to_date\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"04\",\n      name: \"Key Responsibilities\",\n      fieldName: \"key_responsibilities\",\n      minWidth: 60,\n      maxWidth: 350,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"01\",\n      name: \"Action\",\n      fieldName: \"action\",\n      minWidth: 80,\n      maxWidth: 100,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              jobHistoryDetails(item);\n            }}\n          >\n            <VisibilityIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              updateJobhistory(item);\n            }}\n          >\n            <CreateIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons \"\n            onClick={() => {\n              deleteJobHistoryData(item);\n            }}\n          >\n            <DeleteIcon style={{ color: \"#f04336\" }} />\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const [jobHistoryUpdate, setJobHistoryUpdateData]: any = useState({});\n  const [showDeleteSuccessJob, setShowDeleteSuccessJob] = useState(false);\n  const [showDeleteJob, setShowDeleteJob] = useState(false);\n  const [deleteItemJobName, setDeleteItemJobName] = useState(null);\n\n  const deleteJobHistoryData = (item: any) => {\n    setDeleteItemId(item.name);\n    // console.log(\"item id\", item.name);\n    const filters = [];\n    if (item.name) {\n      filters.push([\"name\", \"=\", item.name]);\n    }\n    fetchJobHistory(roleType, JSON.stringify(filters)).then((response) => {\n      //   console.log(\"update response =>.>>>\", response.data);\n      setJobHistoryUpdateData(response.data[0]);\n    });\n    setShowDeleteJob(true);\n  };\n\n  // console.log(\"deleteItemId=>\", updateData)\n\n  const handleDeleteJobhistory = () => {\n    const deleteQuery = {\n      name: jobHistoryUpdate.name,\n      is_deleted: 1,\n    };\n    update_JobHistory(deleteQuery).then((response) => {\n      // console.log(\"response=>\", response);\n      setShowDeleteJob(false);\n      setShowDeleteSuccessJob(true);\n      setDeleteItemJobName(null);\n      setJobHistoryUpdateData(null);\n    });\n  };\n\n  const columnsTraning: IColumn[] = [\n    // {\n    //   key: \"1\",\n    //   name: \"S.No.\",\n    //   fieldName: \"serial_no\",\n    //   minWidth: 20,\n    //   maxWidth: 40,\n    //   isSortedDescending: false,\n    //   isRowHeader: true,\n    //   isResizable: false,\n    //   // onRender: (item, index) => (index || 0) + 1,\n    // },\n    {\n      key: \"02\",\n      name: \"Development Plan/Training Needs\",\n      fieldName: \"development_plan\",\n      minWidth: 60,\n      maxWidth: 550,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n      onRender: (item, index) => (\n        <div>\n          <TextField\n            multiline\n            rows={3}\n            value={item.development_plan}\n            onChange={(\n              ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n              text?: string\n            ) => handleDevelopemntChange(index, text)}\n            resizable={false}\n          />\n        </div>\n      ),\n    },\n    {\n      key: \"03\",\n      name: \"Remark by Appraiser\",\n      fieldName: \"reviewer_remarks\",\n      minWidth: 80,\n      maxWidth: 350,\n      isRowHeader: true,\n      onRender: (item, index) => (\n        <div>\n          <TextField\n            multiline\n            rows={3}\n            onChange={(\n              ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n              text?: string\n            ) => handleRemarkChange(index, text)}\n            value={item.reviewer_remarks}\n            resizable={false}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  const columnsGoal: IColumn[] = [\n    {\n      key: \"02\",\n      name: \"S.No.\",\n      fieldName: \"order_no\",\n      minWidth: 20,\n      maxWidth: 50,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"11\",\n      name: \"Goal ID\",\n      fieldName: \"name\",\n      minWidth: 40,\n      maxWidth: 60,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"03\",\n      name: \"KRA\",\n      fieldName: \"kra\",\n      minWidth: 50,\n      maxWidth: 120,\n      isRowHeader: true,\n      sortDescendingAriaLabel: \"Sorted Z to A\",\n      isResizable: false,\n    },\n    {\n      key: \"04\",\n      name: \"\",\n      fieldName: \"goal_type\",\n      minWidth: 10,\n      maxWidth: 30,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n      onRender: (item) => (\n        <div>\n          {item.goal_type == \"Goal\" ? (\n            <div\n              className=\"link-icons\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                // console.log(\"item\", item);\n              }}\n            >\n              <ArrowDropDownIcon\n                style={{ color: \"#00597d\", fontSize: \"30px\" }}\n              />\n            </div>\n          ) : (\n            <div\n              className=\"link-icons\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                // console.log(\"item\", item);\n              }}\n            >\n              <RadioButtonUncheckedIcon\n                style={{\n                  color: \"#00597d\",\n                  fontSize: \"10px\",\n                  marginLeft: \"25px\",\n                }}\n              />\n            </div>\n          )}\n        </div>\n      ),\n    },\n    {\n      key: \"05\",\n      name: \"Goal\",\n      fieldName: \"goal\",\n      minWidth: 50,\n      maxWidth: 280,\n      isMultiline: true,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"06\",\n      name: \"Measure\",\n      fieldName: \"measure\",\n      minWidth: 50,\n      maxWidth: 100,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"07\",\n      name: \"Weightage\",\n      fieldName: \"weightage\",\n      minWidth: 50,\n      maxWidth: 80,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"08\",\n      name: \"Target\",\n      fieldName: \"target\",\n      minWidth: 50,\n      maxWidth: 80,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"09\",\n      name: \"Threshold\",\n      fieldName: \"threshold\",\n      minWidth: 50,\n      maxWidth: 80,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"10\",\n      name: \"Stretch\",\n      fieldName: \"stretch\",\n      minWidth: 50,\n      maxWidth: 80,\n      isSortedDescending: false,\n      isRowHeader: true,\n      isResizable: false,\n    },\n    {\n      key: \"01\",\n      name: \"Action\",\n      fieldName: \"action\",\n      minWidth: 80,\n      maxWidth: 80,\n      isRowHeader: true,\n      onRender: (item) => (\n        <div>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              goalDetails(item);\n            }}\n          >\n            <VisibilityIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons mr-3\"\n            onClick={() => {\n              updateGoals(item);\n            }}\n          >\n            <CreateIcon style={{ color: \"#00597d\" }} />\n          </Link>\n          <Link\n            className=\"link-icons\"\n            onClick={() => {\n              deleteGoalData(item);\n            }}\n          >\n            <DeleteIcon style={{ color: \"#f04336\" }} />\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const [deleteItemId, setDeleteItemId] = useState(null);\n  const [updateData, setUpdateData]: any = useState({});\n  const [showDelete, setShowDelete] = useState(false);\n  const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const theme = getTheme();\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const deleteGoalData = (item: any) => {\n    setDeleteItemId(item.name);\n    // console.log(\"item id\", item.name);\n    const filters = [];\n    if (item.name) {\n      filters.push([\"name\", \"=\", item.name]);\n    }\n    fetchGoalDataName(\n      limit_start,\n      limitPageLength,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response: any) => {\n      // console.log(response.data);\n      setUpdateData(response.data[0]);\n    });\n    setShowDelete(true);\n  };\n\n  // console.log(\"deleteItemId=>\", updateData)\n\n  const handleDeleteGoal = () => {\n    const deleteQuery = {\n      name: updateData.name,\n      is_deleted: 1,\n    };\n    update_goals(deleteQuery).then((response) => {\n      // console.log(\"response=>\", response);\n      setShowDelete(false);\n      setShowDeleteSuccess(true);\n      setDeleteItemId(null);\n      setUpdateData(null);\n    });\n  };\n\n  const operations = [\n    {\n      sno: \"01\",\n      action: \"action1\",\n      employeeID: \"145728\",\n      employeeName: \"PRIYA GUPTA\",\n      managerID: \"124590\",\n      managerName: \"PINKO KUMAR\",\n      status: \"Pending With Employee\",\n      apprisalType: \"Goal Sheet\",\n    },\n    {\n      sno: \"02\",\n      action: \"action1\",\n      employeeID: \"145728\",\n      employeeName: \"PRIYA GUPTA\",\n      managerID: \"124590\",\n      managerName: \"PINKO KUMAR\",\n      status: \"Pending With Employee\",\n      apprisalType: \"Goal Sheet\",\n    },\n  ];\n\n  const [showDevelopment, setShowDevelopment] = useState(false);\n\n  const handleDevelpmentDatachange = () => {\n    // console.log(\"developmentData=> \", developmentData);\n    const devPlan = [...developmentData];\n    // console.log(\"devPlan=>\", devPlan);\n    const changedQuery = {\n      doctype: \"EmployeeDevelopmentPlan\",\n      data: {\n        dev_plans: devPlan,\n      },\n    };\n    handleDevelopmentDataChange(changedQuery).then((response: any) => {\n      // console.log(\"update successfully =>\", response);\n      setShowDevelopment(true);\n    });\n  };\n\n  const updateGoals = (item: any) => {\n    history.push(`/appraisal/goalsetting/view/goals/updategoal/${item.name}`);\n  };\n\n  const goalDetails = (item: any) => {\n    history.push(`/appraisal/goalsetting/view/goal/goaldetail/${item.name}`);\n  };\n\n  const listStyle: Partial<IDetailsListStyles> = {\n    headerWrapper: {\n      \".root-106\": {\n        backgroundColor: \"#344f84\",\n      },\n    },\n    root: {\n      marginTop: \"10px\",\n      backgroundColor: \"#344f84\",\n      paddingBottom: \"0px\",\n      \".ms-Viewport\": {\n        minWidth: \"200px\",\n      },\n    },\n    contentWrapper: {\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\n        paddingTop: \"0px\",\n      },\n    },\n  };\n\n  const renderNoData = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          marginTop: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Text\n          style={{\n            color: \"#aaa\",\n            textAlign: \"center\",\n            padding: 50,\n            fontSize: 30,\n          }}\n        >\n          No Data Found\n        </Text>\n      </div>\n    );\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistory = () => {\n    return (\n      <div>\n        {isLoading ? (\n          <Spinner\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: \"50px\",\n              color: \"#00597d\",\n            }}\n            size={SpinnerSize.large}\n          />\n        ) : jobHistory.length === 0 ? (\n          renderNoData()\n        ) : (\n          <div>\n            <DetailsList\n              styles={listStyle}\n              items={newJobHistoryData}\n              className=\"detail-list\"\n              columns={columnsJobHistory}\n              selectionMode={0}\n            />\n            <div className=\"pagination-style\">\n              <Pagination\n                format=\"buttons\"\n                // nextPageIconProps={{iconName: \"CaretRightSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                // previousPageIconProps={{iconName: \"CaretLeftSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                selectedPageIndex={currentPage}\n                pageCount={Math.ceil(totalCount / limitPageLength)}\n                itemsPerPage={limitPageLength}\n                totalItemCount={totalCount}\n                onPageChange={(page) => {\n                  setLimitSTart(page * limitPageLength);\n                  setCurentPage(page);\n                }}\n              />\n            </div>\n          </div>\n        )}\n        <Stack\n          horizontal\n          tokens={stackTokens}\n          style={{ justifyContent: \"flex-end\" }}\n        >\n          <div\n            style={{\n              marginTop: \"15px\",\n            }}\n          >\n            <PrimaryButton\n              text=\"Add\"\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\n                  `/appraisal/goalsetting/view/addjobhistory/${params.employeeId}/${params.appraisalId}`\n                );\n              }}\n            />\n          </div>\n          <div\n            style={{\n              marginTop: \"15px\",\n            }}\n          >\n            <PrimaryButton\n              text=\"Cancel\"\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\"/appraisal/goalsetting\");\n              }}\n            />\n          </div>\n        </Stack>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDeleteJob}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Delete</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDeleteJob(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Are you sure you want to delete this item?\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Delete\"\n                allowDisabledFocus\n                onClick={handleDeleteJobhistory}\n                disabled={false}\n                checked={false}\n              />\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDeleteSuccessJob}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDeleteSuccessJob(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Item successfully Deleted.\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Ok\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDeleteSuccessJob(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  const renderGoals = () => {\n    return (\n      <div className=\"form-conatiner\">\n        {goalCount === 0 ? (\n          renderNoData()\n        ) : (\n          <div>\n            <DetailsList\n              styles={listStyle}\n              items={goalData}\n              className=\"detail-list\"\n              columns={columnsGoal}\n              selectionMode={0}\n            />\n            <div className=\"pagination-style\">\n              <Pagination\n                format=\"buttons\"\n                // nextPageIconProps={{iconName: \"CaretRightSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                // previousPageIconProps={{iconName: \"CaretLeftSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\n                selectedPageIndex={currentPageGoal}\n                pageCount={Math.ceil(goalTotalCount / limitPageLengthGoal)}\n                itemsPerPage={limitPageLengthGoal}\n                totalItemCount={goalTotalCount}\n                onPageChange={(pageGoal) => {\n                  setLimitSTartGoal(pageGoal * limitPageLengthGoal);\n                  setCurentPageGoal(pageGoal);\n                }}\n              />\n            </div>\n          </div>\n        )}\n        <Stack\n          horizontal\n          tokens={stackTokens}\n          style={{ justifyContent: \"flex-end\" }}\n        >\n          <div\n            style={{\n              marginTop: \"15px\",\n            }}\n          >\n            <PrimaryButton\n              text=\"Add\"\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\n                  `/appraisal/goalsetting/view/addgoal/${params.employeeId}/${params.appraisalId}`\n                );\n              }}\n            />\n          </div>\n          <div\n            style={{\n              marginTop: \"15px\",\n            }}\n          >\n            <PrimaryButton\n              text=\"Cancel\"\n              allowDisabledFocus\n              onClick={() => {\n                history.push(\"/appraisal/goalsetting\");\n              }}\n            />\n          </div>\n        </Stack>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDelete}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Delete</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Are you sure you want to delete this item?\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Delete\"\n                allowDisabledFocus\n                onClick={handleDeleteGoal}\n                disabled={false}\n                checked={false}\n              />\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDelete(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDeleteSuccess}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDeleteSuccess(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Item successfully Deleted.\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Ok\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDeleteSuccess(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  const renderTrainingDevelopment = () => {\n    return (\n      <div className=\"form-conatiner\">\n        <div>\n          <DetailsList\n            styles={listStyle}\n            items={developmentData}\n            className=\"detail-list\"\n            columns={columnsTraning}\n            selectionMode={0}\n          />\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Save\"\n                allowDisabledFocus\n                onClick={() => {\n                  handleDevelpmentDatachange();\n                }}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.push(\"/appraisal/goalsetting\");\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={showDevelopment}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setShowDevelopment(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Development data saved successfully.\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"10px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Ok\"\n                allowDisabledFocus\n                onClick={() => {\n                  setShowDevelopment(false);\n                }}\n                style={{ marginLeft: \"10px\" }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  const joiningDate = moment(employeeData.date_of_joining).format(\"DD-MM-YYYY\");\n\n  const renderEmployeeDetails = () => {\n    return (\n      <div>\n        <div className=\"card\">\n          <div className=\"emp-details-section\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <span>Employee Id</span> : {employeeData.employee_id}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Employee Name</span> : {employeeData.employee_name}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Designation</span> : {employeeData.designation}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Location</span> : {employeeData.location}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Department</span> : {employeeData.department}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Date of Joining</span> : {joiningDate}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Reporting Officer</span> : {employeeData.manager_name}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Reviewer</span> : {employeeData.reviewer_name}\n              </div>\n              <div className=\"col-md-4\">\n                <span>Counter signing</span> :{\" \"}\n                {employeeData.counter_signing_name}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"row-jobHistory d-none\">\n            <TextField\n              readOnly={true}\n              value={employeeData.employee_id}\n              placeholder=\"Employee ID\"\n              label=\"Employee Id\"\n              name=\"id\"\n              styles={textfelidStyle}\n              // value={jobHistory[0].employee_id}\n              // onChange={onChangeInput}\n              className=\"flexGrow\"\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.employee_name}\n              placeholder=\"Employee Name\"\n              label=\"Employee Name\"\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n              // onChange={onChangeInput}\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.designation}\n              placeholder=\"Designation\"\n              label=\"Designation\"\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n            />\n          </div>\n          <div className=\"row-jobHistory d-none\">\n            <TextField\n              readOnly={true}\n              value={employeeData.location}\n              placeholder=\"Location\"\n              label=\"Location\"\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.department}\n              placeholder=\"Department\"\n              label=\"Department\"\n              name=\"id\"\n              // onChange={onChangeInput}\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.date_of_joining}\n              placeholder=\"Date of Joining\"\n              label=\"Date of Joining\"\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n            />\n          </div>\n          <div className=\"row-jobHistory d-none\">\n            <TextField\n              readOnly={true}\n              // value={employeeData.date_of_joining}\n              placeholder=\"Reporting Officer\"\n              label=\"Reporting Officer\"\n              styles={textfelidStyle}\n              className=\"flexGrow\"\n              name=\"appraisal_description\"\n              // onChange={onChangeInput}\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.reviewer_name}\n              placeholder=\"Reviewer\"\n              label=\"Reviewer\"\n              name=\"id\"\n              styles={textfelidStyle}\n              // onChange={onChangeInput}\n              className=\"flexGrow\"\n            />\n            <TextField\n              readOnly={true}\n              value={employeeData.counter_signing_name}\n              placeholder=\"Counter signing\"\n              label=\"Counter signing\"\n              name=\"id\"\n              styles={textfelidStyle}\n              // onChange={onChangeInput}\n              className=\"flexGrow\"\n            />\n          </div> */}\n        </div>\n        <div\n          style={{ marginTop: \"10px\" }}\n          className=\"card employee-details-tabs\"\n        >\n          <Pivot linkFormat={PivotLinkFormat.tabs}>\n            <PivotItem\n              headerButtonProps={{\n                \"data-order\": 1,\n                \"data-title\": \"My Files Title\",\n              }}\n              headerText=\"Job History\"\n            >\n              {renderJobHistory()}\n            </PivotItem>\n            <PivotItem headerText=\"Goals\">{renderGoals()}</PivotItem>\n            <PivotItem headerText=\"Training/ Development Plan\">\n              {renderTrainingDevelopment()}\n            </PivotItem>\n          </Pivot>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">\n          {loading ? (\n            <Spinner\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                padding: \"80px\",\n                color: \"#00597d\",\n              }}\n              size={SpinnerSize.large}\n            />\n          ) : employeeCount === 0 ? (\n            renderNoData()\n          ) : (\n            renderEmployeeDetails()\n          )}\n        </div>\n        {/* <div className=\"right-container\">\n          <div className=\"stepper\">\n            <ul className=\"progress\">\n              <li>\n                <div className=\"node green\"></div>\n                <p className=\"green\">\n                  <span>Provide your job history</span>\n                </p>\n              </li>\n              <li>\n                <div className=\"divider green\"></div>\n              </li>\n              <li>\n                <div className=\"node green\"></div>\n                <p className=\"green\">\n                  <span>Perform goal setting</span>\n                </p>\n              </li>\n              <li>\n                <div className=\"divider green\"></div>\n              </li>\n              <li>\n                <div className=\"node grey\"></div>\n                <p className=\"grey\">\n                  <span>Update training needs</span>\n                </p>\n              </li>\n              <li>\n                <div className=\"divider grey\"></div>\n              </li>\n              <li>\n                <div className=\"node grey\"></div>\n                <p className=\"grey\">\n                  <span>Create development plan</span>\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(EmployeeDetails);\n","/home/pratik/Documents/mega-soft/src/Views/JobHistory/index.tsx",["358","359","360","361","362","363","364","365","366"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  add_JobHistory,\n  fetchJobHistory,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  DatePicker,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  employeeId: string;\n  appraisalId: string;\n}\n\nfunction JobHistory(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const [appraisalId] = useState(params.appraisalId);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\n  const [jobHistoryData, setJobHistoryData] = useState({\n    position: \"\",\n    place: \"\",\n    responsibilities: \"\",\n    qualifications: \"\",\n  });\n  const [toDate, setToDate] = useState<Date | undefined>();\n  const [fromDate, setFromDate] = useState<Date | undefined>();\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    fetchJobHistory(roleType, JSON.stringify(filters)).then((response) => {\n      setEmployeeDetails(response.data[0]);\n    });\n  }, []);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   width: \"250px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setJobHistoryData({\n      ...jobHistoryData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onchangeToDate = (date: Date | null | undefined): void => {\n    setToDate(date || undefined);\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n  const onchangeFromDate = (date: Date | null | undefined): void => {\n    setFromDate(date || undefined);\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Job History\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const [errMsgResponsibility, setErrMsgResponsibility] = useState(\"\");\n  const [errMsgPlace, setErrMsgPlace] = useState(\"\");\n  const [errMsgPosition, setErrMsgPosition] = useState(\"\");\n  const [errMsgQualifications, setErrMsgQualifications] = useState(\"\");\n\n  const handleAddJobHistory = () => {\n    if (jobHistoryData.responsibilities === \"\") {\n      setErrMsgResponsibility(\"Key Responsibilities is required\");\n    }\n    if (jobHistoryData.place === \"\") {\n      setErrMsgPlace(\"Place of posting is required\");\n    }\n    if (jobHistoryData.position === \"\") {\n      setErrMsgPosition(\"Position held is required\");\n    }\n    if (jobHistoryData.qualifications === \"\") {\n      setErrMsgQualifications(\"Qualifications is required\");\n    }\n    const addQuery = {\n      appraisal_id: appraisalId,\n      employee_id: filtersById,\n      key_responsibilities: jobHistoryData.responsibilities,\n      place_of_posting: jobHistoryData.place,\n      position_held: jobHistoryData.position,\n      qualifications: jobHistoryData.qualifications,\n      from_date: moment(fromDate).format(\"YYYY-MM-DD\"),\n      to_date: moment(toDate).format(\"YYYY-MM-DD\"),\n    };\n    add_JobHistory(addQuery).then((response: any) => {\n      if (response.status === 200) {\n        setSuccessModal(true);\n      } else {\n        setFailedModal(true);\n      }\n    });\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"form-conatiner\">\n        <div className=\"jobHistory-details card\">\n          <TextField\n            required\n            errorMessage={errMsgPosition}\n            label=\"Position Held\"\n            value={jobHistoryData.position}\n            placeholder=\"Enter your job position\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"position\"\n            onChange={onChangeInput}\n          />\n          <div className=\"goal-details\">\n            <TextField\n              required\n              errorMessage={errMsgPlace}\n              label=\"Place of Posting\"\n              value={jobHistoryData.place}\n              placeholder=\"Enter your place of posting\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"place\"\n              onChange={onChangeInput}\n            />\n            <DatePicker\n              isRequired={true}\n              label=\"From Date\"\n              placeholder=\"Select a date\"\n              className={`${controlClass.control} flexGrow w33`}\n              onSelectDate={onchangeFromDate}\n              value={fromDate}\n              styles={datePickerStyle}\n              // textField={{ errorMessage: \"Form date is required\" }}\n            />\n            <DatePicker\n              isRequired={true}\n              label=\"To Date\"\n              placeholder=\"Select a date\"\n              className={`${controlClass.control} flexGrow w33`}\n              onSelectDate={onchangeToDate}\n              value={toDate}\n              // textField={{ errorMessage = { errMsgPlace } }}\n              styles={datePickerStyle}\n            />\n          </div>\n\n          <TextField\n            required\n            errorMessage={errMsgResponsibility}\n            label=\"Key Responsibilities\"\n            value={jobHistoryData.responsibilities}\n            placeholder=\"Describe your key responsibilities\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"responsibilities\"\n            onChange={onChangeInput}\n          />\n          <TextField\n            required\n            errorMessage={errMsgQualifications}\n            label=\"Qualifications\"\n            value={jobHistoryData.qualifications}\n            placeholder=\"Qualifications\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"qualifications\"\n            onChange={onChangeInput}\n          />\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Add\"\n                allowDisabledFocus\n                onClick={handleAddJobHistory}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={successModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setSuccessModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Job History added successfully.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"OK\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title failed\"}\n            isOpen={failedModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Error</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content\">\n              Somthing went wrong. Please try again.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"Go Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(JobHistory);\n","/home/pratik/Documents/mega-soft/src/Views/UpdateJobHistory/index.tsx",["367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  add_JobHistory,\n  fetchJobHistory,\n  update_JobHistory,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  DatePicker,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  name: string;\n}\n\nfunction UpdateJobHistory(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.name);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\n  const [jobHistoryData, setJobHistoryData] = useState({\n    position: \"\",\n    place: \"\",\n    responsibilities: \"\",\n    qualifications: \"\",\n  });\n  const [toDate, setToDate] = useState<Date | undefined>();\n  const [fromDate, setFromDate] = useState<Date | undefined>();\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n  const [jobHistoryUpdateData, setJobHistoryUpdateData]: any = useState({});\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"name\", \"=\", filtersById]);\n    }\n    fetchJobHistory(roleType, JSON.stringify(filters)).then((response) => {\n      //   console.log(\"update response =>.>>>\", response.data);\n      setJobHistoryUpdateData(response.data[0]);\n    });\n  }, []);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   width: \"250px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setJobHistoryUpdateData({\n      ...jobHistoryUpdateData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onchangeToDate = (date: Date | null | undefined): void => {\n    setToDate(date || undefined);\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n  const onchangeFromDate = (date: Date | null | undefined): void => {\n    setFromDate(date || undefined);\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const jobHistoryClicked = () => {\n    history.goBack();\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Job History\", key: \"d4\", as: \"h4\", onClick: jobHistoryClicked },\n    { text: \"Update Job History\", key: \"d5\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const [errMsgResponsibility, setErrMsgResponsibility] = useState(\"\");\n  const [errMsgPlace, setErrMsgPlace] = useState(\"\");\n  const [errMsgPosition, setErrMsgPosition] = useState(\"\");\n  const [errMsgQualifications, setErrMsgQualifications] = useState(\"\");\n\n  const handleUpdateJobHistory = () => {\n    if (jobHistoryUpdateData.responsibilities === \"\") {\n      setErrMsgResponsibility(\"Key Responsibilities is required\");\n    }\n    if (jobHistoryUpdateData.place === \"\") {\n      setErrMsgPlace(\"Place of Posting is required\");\n    }\n    if (jobHistoryUpdateData.position === \"\") {\n      setErrMsgPosition(\"Position Held is required\");\n    }\n    if (jobHistoryUpdateData.qualifications === \"\") {\n      setErrMsgQualifications(\"Qualifications is required\");\n    }\n    const updateQuery = {\n      ...jobHistoryUpdateData,\n      from_date: moment(jobHistoryUpdateData.from_date).format(\"YYYY-MM-DD\"),\n      to_date: moment(jobHistoryUpdateData.to_date).format(\"YYYY-MM-DD\"),\n    };\n    update_JobHistory(updateQuery).then((response: any) => {\n      if (response.status === 200) {\n        setSuccessModal(true);\n      } else {\n        setFailedModal(true);\n      }\n    });\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"form-conatiner\">\n        <div className=\"card jobHistory-details\">\n          <TextField\n            required\n            errorMessage={errMsgPosition}\n            label=\"Position Held\"\n            value={jobHistoryUpdateData.position_held}\n            placeholder=\"Enter your job position\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"position_held\"\n            onChange={onChangeInput}\n          />\n          <div className=\"goal-details\">\n            <TextField\n              required\n              errorMessage={errMsgPlace}\n              label=\"Place of Posting\"\n              value={jobHistoryUpdateData.place_of_posting}\n              placeholder=\"Enter your place of posting\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"place_of_posting\"\n              onChange={onChangeInput}\n            />\n            <DatePicker\n              isRequired={true}\n              label=\"From Date\"\n              placeholder=\"Select a date\"\n              className={`${controlClass.control} flexGrow w33`}\n              value={new Date(jobHistoryUpdateData.from_date)}\n              onSelectDate={(date) =>\n                setJobHistoryUpdateData({\n                  ...jobHistoryUpdateData,\n                  from_date: date,\n                })\n              }\n              styles={datePickerStyle}\n              // textField={{ errorMessage: \"Form date is required\" }}\n            />\n            <DatePicker\n              isRequired={true}\n              label=\"To Date\"\n              placeholder=\"Select a date\"\n              className={`${controlClass.control} flexGrow w33`}\n              value={new Date(jobHistoryUpdateData.to_date)}\n              onSelectDate={(date) =>\n                setJobHistoryUpdateData({\n                  ...jobHistoryUpdateData,\n                  to_date: date,\n                })\n              }\n              // textField={{ errorMessage = { errMsgPlace } }}\n              styles={datePickerStyle}\n            />\n          </div>\n\n          <TextField\n            required\n            errorMessage={errMsgResponsibility}\n            label=\"Key Responsibilities\"\n            value={jobHistoryUpdateData.key_responsibilities}\n            placeholder=\"Describe your key responsibilities\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"key_responsibilities\"\n            onChange={onChangeInput}\n          />\n          <TextField\n            required\n            errorMessage={errMsgQualifications}\n            label=\"Qualifications\"\n            value={jobHistoryUpdateData.qualifications}\n            placeholder=\"Qualifications\"\n            styles={textfelidStyle}\n            className=\"flexGrow w100\"\n            name=\"qualifications\"\n            onChange={onChangeInput}\n          />\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Update\"\n                allowDisabledFocus\n                onClick={handleUpdateJobHistory}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={successModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setSuccessModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Job History updated successfully.{\" \"}\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"OK\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title failed\"}\n            isOpen={failedModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Error</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content\">\n              Somthing went wrong. Please try again.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"Go Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(UpdateJobHistory);\n","/home/pratik/Documents/mega-soft/src/Views/JobHistoryDetails/index.tsx",["384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  add_JobHistory,\n  fetchJobHistory,\n  fetchJobHistoryByName,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  DatePicker,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport moment from \"moment\";\n\ninterface ParamTypes {\n  employeeId: string;\n  name: string;\n}\n\nfunction JobHistoryDetails(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const [filtersByName] = useState(params.name);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [employeeDetails, setEmployeeDetails]: any = useState({});\n  const [jobHistoryData, setJobHistoryData] = useState({\n    position: \"\",\n    place: \"\",\n    responsibilities: \"\",\n    qualifications: \"\",\n  });\n  const [toDate, setToDate] = useState<Date | undefined>();\n  const [fromDate, setFromDate] = useState<Date | undefined>();\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersByName) {\n      filters.push([\"name\", \"=\", filtersByName]);\n    }\n    fetchJobHistoryByName(roleType, JSON.stringify(filters)).then(\n      (response) => {\n        setEmployeeDetails(response.data[0]);\n      }\n    );\n  }, []);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   width: \"250px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setJobHistoryData({\n      ...jobHistoryData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onchangeToDate = (date: Date | null | undefined): void => {\n    setToDate(date || undefined);\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n  const onchangeFromDate = (date: Date | null | undefined): void => {\n    setFromDate(date || undefined);\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Job History\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n\n  const fromDateFormat = moment(employeeDetails.from_date).format(\"DD-MM-YYYY\");\n  const toDateFormat = moment(employeeDetails.to_date).format(\"DD-MM-YYYY\");\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"emp-details-section\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <span>Position Held</span> : {employeeDetails.position_held}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Place of Posting</span> : {employeeDetails.place_of_posting}\n            </div>\n            <div className=\"col-md-4\">\n              <span>From Date</span> : {fromDateFormat}\n            </div>\n            <div className=\"col-md-8\">\n              <span>To Date</span> : {toDateFormat}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Key Responsibilities</span> :{\" \"}\n              {employeeDetails.key_responsibilities}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Qualifications</span> : {employeeDetails.qualifications}\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(JobHistoryDetails);\n","/home/pratik/Documents/mega-soft/src/Views/AddGoals/index.tsx",["406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  add_JobHistory,\n  fetchJobHistory,\n} from \"../../redux/actions/jobHistory\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  DatePicker,\n  Dropdown,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IDropdownOption,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport moment from \"moment\";\nimport { add_goals, fetchGoalData } from \"../../redux/actions/goal\";\n\ninterface ParamTypes {\n  employeeId: string;\n  appraisalId: string;\n}\n\nconst goalOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Goal\" },\n  { key: \"key2\", text: \"Sub-Goal\" },\n];\n\nfunction AddGoals(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [limitPageLength] = useState(5);\n  const [limit_start] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\n  const [goalInputData, setGoalInputData] = useState({\n    goal: \"\",\n    goal_type: \"\",\n    kra: \"\",\n    measure: \"\",\n    order_no: \"\",\n    parent_goal_id: \"\",\n    stretch: \"\",\n    target: \"\",\n    threshold: \"\",\n    weightage: \"\",\n  });\n  const [toDate, setToDate] = useState<Date | undefined>();\n  const [fromDate, setFromDate] = useState<Date | undefined>();\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n  const [goalData, setGoalData]: any = useState({});\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersById) {\n      filters.push([\"employee_id\", \"=\", filtersById]);\n    }\n    fetchGoalData(\n      limit_start,\n      limitPageLength,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response) => {\n      // console.log(\"response of Goal===>\", response);\n      setGoalData(response.data[0]);\n    });\n  }, []);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   width: \"250px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setGoalInputData({\n      ...goalInputData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const onchangeToDate = (date: Date | null | undefined): void => {\n    setToDate(date || undefined);\n    // const reviewFrequencyDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n  const onchangeFromDate = (date: Date | null | undefined): void => {\n    setFromDate(date || undefined);\n    // const appraisalDate: any = moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Add Goals\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\n\n  const [goalType, setGoalType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const onChangeGoalType = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setGoalType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const handleAddJobHistory = () => {\n    if (goalInputData.order_no === \"\") {\n      setErrMsgOrder(\"Order number is required\");\n    }\n    if (goalInputData.kra === \"\") {\n      setErrMsgKra(\"KRA is required\");\n    }\n    if (goalInputData.goal === \"\") {\n      setErrMsgGoal(\"Goal is required\");\n    }\n    if (goalInputData.measure === \"\") {\n      setErrMsgMeasure(\"Measure is required\");\n    }\n    if (goalInputData.weightage === \"\") {\n      setErrMsgWeightage(\"Weightage is required\");\n    }\n    if (goalType.text === \"\") {\n      setErrMsgGoalType(\"Select goal type\");\n    }\n    const addQuery = {\n      appraisal_id: params.appraisalId,\n      employee_id: params.employeeId,\n      goal_type: goalType.text,\n      goal: goalInputData.goal,\n      kra: goalInputData.kra,\n      order_no: goalInputData.order_no,\n      measure: goalInputData.measure,\n      parent_goal_id: goalInputData.parent_goal_id,\n      stretch: goalInputData.stretch,\n      target: goalInputData.target,\n      threshold: goalInputData.threshold,\n      weightage: goalInputData.weightage,\n    };\n    add_goals(addQuery).then((response: any) => {\n      if (response.status === 200) {\n        setSuccessModal(true);\n      } else {\n        setFailedModal(true);\n      }\n    });\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"form-conatiner\">\n        <div className=\"card\">\n          <div className=\"goal-details\">\n            <TextField\n              disabled={true}\n              label=\"ID\"\n              // value={goalData.name}\n              placeholder=\"New\"\n              styles={textfelidStyle}\n              className=\"flexGrowTextInput\"\n              name=\"position\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              required\n              errorMessage={errMsgOrder}\n              label=\"Order Number\"\n              value={goalInputData.order_no}\n              placeholder=\"Enter order number\"\n              styles={textfelidStyle}\n              className=\"flexGrow w25\"\n              name=\"order_no\"\n              onChange={onChangeInput}\n            />\n            <Dropdown\n              required\n              errorMessage={errMsgGoalType}\n              label=\"Goal Type\"\n              placeholder=\"Select goal type\"\n              className=\"flexGrow w25\"\n              onChange={onChangeGoalType}\n              options={goalOptions}\n              // styles={dropdownStyles}\n            />\n            <TextField\n              disabled={goalType.text === \"Goal\" ? true : false}\n              label=\"Parent Goal\"\n              value={goalInputData.parent_goal_id}\n              placeholder=\"Enter parent goal ID \"\n              styles={textfelidStyle}\n              className=\"flexGrow w25\"\n              name=\"parent_goal_id\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div>\n            <TextField\n              required\n              errorMessage={errMsgKra}\n              label=\"KRA\"\n              value={goalInputData.kra}\n              placeholder=\"Enter KRA\"\n              styles={textfelidStyle}\n              className=\"flexGrow w100\"\n              name=\"kra\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              required\n              errorMessage={errMsgGoal}\n              label=\"Goal\"\n              value={goalInputData.goal}\n              placeholder=\"Enter Goal\"\n              styles={textfelidStyle}\n              className=\"flexGrow w100\"\n              name=\"goal\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div className=\"goal-details\">\n            <TextField\n              required\n              errorMessage={errMsgMeasure}\n              label=\"Measure\"\n              value={goalInputData.measure}\n              placeholder=\"Enter Measure\"\n              styles={textfelidStyle}\n              className=\"flexGrow w50\"\n              name=\"measure\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              required\n              errorMessage={errMsgWeightage}\n              label=\"Weightage\"\n              value={goalInputData.weightage}\n              placeholder=\"Enter Weightage\"\n              styles={textfelidStyle}\n              className=\"flexGrow w50\"\n              name=\"weightage\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div className=\"goal-details\">\n            <TextField\n              label=\"Target\"\n              value={goalInputData.target}\n              placeholder=\"Enter Target\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"target\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              label=\"Threshold\"\n              value={goalInputData.threshold}\n              placeholder=\"Enter Threshold\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"threshold\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              label=\"Stretch\"\n              value={goalInputData.stretch}\n              placeholder=\"Enter Stretch\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"stretch\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Add\"\n                allowDisabledFocus\n                onClick={handleAddJobHistory}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={successModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setSuccessModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Goal added successfully.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"OK\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title failed\"}\n            isOpen={failedModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Error</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content\">\n              Somthing went wrong. Please try again.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"Go Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(AddGoals);\n","/home/pratik/Documents/mega-soft/src/Views/UpdateGoals/index.tsx",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  Dropdown,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IDropdownOption,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport {\n  fetchGoalData,\n  fetchGoalDataName,\n  update_goals,\n} from \"../../redux/actions/goal\";\n\ninterface ParamTypes {\n  employeeId: string;\n  name: string;\n}\n\nconst goalOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Goal\" },\n  { key: \"key2\", text: \"Sub-Goal\" },\n];\n\nfunction UpdateGoals(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\n  const [limitPageLength] = useState(5);\n  const [limit_start] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\n  const [filtersByName] = useState(params.name);\n\n  const [successModal, setSuccessModal] = useState(false);\n  const [failedModal, setFailedModal] = useState(false);\n  const [goalData, setGoalData]: any = useState({});\n  const [updateGoalData, setUpdateGoalData]: any = useState({});\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersByName) {\n      filters.push([\"name\", \"=\", filtersByName]);\n    }\n    fetchGoalDataName(\n      limit_start,\n      limitPageLength,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response: any) => {\n      console.log(\"response of Goal===>\", response.data);\n      setUpdateGoalData(response.data[0]);\n    });\n  }, []);\n\n  const theme = getTheme();\n  const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n  const iconButtonStyles = {\n    root: {\n      color: \"#FFF\",\n      marginLeft: \"auto\",\n      marginTop: \"4px\",\n      marginRight: \"2px\",\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n  const modalStyle: Partial<IModalStyles> = {\n    root: {},\n    main: {\n      height: \"20%\",\n      width: \"20%\",\n      backgroundColor: \"#FFF\",\n      // padding: \"5px\",\n    },\n  };\n\n  const datePickerStyle: Partial<IDatePickerStyles> = {\n    // root: {\n    //   width: \"250px\",\n    // },\n    icon: {\n      color: \"rgb(111 144 220)\",\n    },\n  };\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const controlClass = mergeStyleSets({\n    control: {\n      // margin: \"0 0 15px 0\",\n      // maxWidth: \"150px\",\n    },\n  });\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setUpdateGoalData({\n      ...updateGoalData,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Update Goals\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\n\n  const [goalType, setGoalType] = useState<IDropdownOption>({\n    key: \"\",\n    text: \"\",\n  });\n\n  const onChangeGoalType = (\n    event?: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption\n  ): void => {\n    setGoalType(\n      item || {\n        key: \"\",\n        text: \"\",\n      }\n    );\n  };\n\n  const handleUpdateGoal = () => {\n    // if (goalInputData.order_no === \"\") {\n    //   setErrMsgOrder(\"Order number is required\");\n    // }\n    // if (goalInputData.kra === \"\") {\n    //   setErrMsgKra(\"KRA is required\");\n    // }\n    // if (goalInputData.goal === \"\") {\n    //   setErrMsgGoal(\"Goal is required\");\n    // }\n    // if (goalInputData.measure === \"\") {\n    //   setErrMsgMeasure(\"Measure is required\");\n    // }\n    // if (goalInputData.weightage === \"\") {\n    //   setErrMsgWeightage(\"Weightage is required\");\n    // }\n    // if (goalType.text === \"\") {\n    //   setErrMsgGoalType(\"Select goal type\");\n    // }\n    const addQuery = {\n      ...updateGoalData,\n    };\n    update_goals(addQuery).then((response: any) => {\n      if (response.status === 200) {\n        setSuccessModal(true);\n      } else {\n        setFailedModal(true);\n      }\n    });\n  };\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"form-conatiner\">\n        <div className=\"card\">\n          <div className=\"goal-details\">\n            <TextField\n              readOnly={true}\n              label=\"ID\"\n              value={params.name}\n              placeholder=\"Enter your job position\"\n              styles={textfelidStyle}\n              className=\"flexGrowTextInput\"\n              name=\"position\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              required\n              errorMessage={errMsgOrder}\n              label=\"Order Number\"\n              value={updateGoalData.order_no}\n              placeholder=\"Enter order number\"\n              styles={textfelidStyle}\n              className=\"flexGrow w25\"\n              name=\"order_no\"\n              onChange={onChangeInput}\n            />\n            <Dropdown\n              required\n              errorMessage={errMsgGoalType}\n              label=\"Goal Type\"\n              placeholder=\"Select goal type\"\n              className=\"flexGrow w25\"\n              selectedKey={\n                goalOptions.find(\n                  (item) => item.text === updateGoalData.goal_type\n                )?.key\n              }\n              onChange={(ev, item) =>\n                setUpdateGoalData({\n                  ...updateGoalData,\n                  goal_type: item?.text,\n                })\n              }\n              options={goalOptions}\n              // styles={dropdownStyles}\n            />\n            <TextField\n              disabled={updateGoalData.goal_type === \"Goal\" ? true : false}\n              label=\"Parent Goal\"\n              value={updateGoalData.parent_goal_id}\n              placeholder=\"Enter KRA\"\n              styles={textfelidStyle}\n              className=\"flexGrow w25\"\n              name=\"parent_goal_id\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div className=\"goal-details\"></div>\n          <div>\n            <TextField\n              required\n              errorMessage={errMsgKra}\n              label=\"KRA\"\n              value={updateGoalData.kra}\n              placeholder=\"Enter KRA\"\n              styles={textfelidStyle}\n              className=\"flexGrow w100\"\n              name=\"kra\"\n              onChange={onChangeInput}\n            />\n            <div className=\"goal-details\"></div>\n            <TextField\n              required\n              errorMessage={errMsgGoal}\n              label=\"Goal\"\n              value={updateGoalData.goal}\n              placeholder=\"Enter Goal\"\n              styles={textfelidStyle}\n              className=\"flexGrow w100\"\n              name=\"goal\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div className=\"goal-details\">\n            <TextField\n              required\n              errorMessage={errMsgMeasure}\n              label=\"Measure\"\n              value={updateGoalData.measure}\n              placeholder=\"Enter Measure\"\n              styles={textfelidStyle}\n              className=\"flexGrow w50\"\n              name=\"measure\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              required\n              errorMessage={errMsgWeightage}\n              label=\"Weightage\"\n              value={updateGoalData.weightage}\n              placeholder=\"Enter Weightage\"\n              styles={textfelidStyle}\n              className=\"flexGrow w50\"\n              name=\"weightage\"\n              onChange={onChangeInput}\n            />\n          </div>\n          <div className=\"goal-details\">\n            <TextField\n              label=\"Target\"\n              value={updateGoalData.target}\n              placeholder=\"Enter Target\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"target\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              label=\"Threshold\"\n              value={updateGoalData.threshold}\n              placeholder=\"Enter Threshold\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"threshold\"\n              onChange={onChangeInput}\n            />\n            <TextField\n              label=\"Stretch\"\n              value={updateGoalData.stretch}\n              placeholder=\"Enter Stretch\"\n              styles={textfelidStyle}\n              className=\"flexGrow w33\"\n              name=\"stretch\"\n              onChange={onChangeInput}\n            />\n          </div>\n\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Update\"\n                allowDisabledFocus\n                onClick={handleUpdateGoal}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Cancel\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n        <div>\n          <Modal\n            titleAriaId={\"Title\"}\n            isOpen={successModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Success</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setSuccessModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content-success\">\n              Goal updated successfully.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"OK\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n          <Modal\n            titleAriaId={\"Title failed\"}\n            isOpen={failedModal}\n            isBlocking={false}\n            styles={modalStyle}\n            // containerClassName={contentStyles.container}\n          >\n            <div className=\"modal-header\">\n              <div className=\"modal-title\">Error</div>\n              <IconButton\n                styles={iconButtonStyles}\n                iconProps={cancelIcon}\n                ariaLabel=\"Close popup modal\"\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n              />\n            </div>\n            <div className=\"modal-content\">\n              Somthing went wrong. Please try again.\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <PrimaryButton\n                text=\"Go Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  setFailedModal(false);\n                }}\n                disabled={false}\n                checked={false}\n              />\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(UpdateGoals);\n","/home/pratik/Documents/mega-soft/src/Views/GoalDetails/index.tsx",["451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\nimport Header from \"../../Header\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { RootState } from \"../../redux/reducers\";\nimport {\n  Dropdown,\n  getTheme,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IconButton,\n  IDatePickerStyles,\n  IDropdownOption,\n  IIconProps,\n  IModalStyles,\n  ITextFieldStyles,\n  mergeStyleSets,\n  Modal,\n  PrimaryButton,\n  Stack,\n  Text,\n  TextField,\n} from \"office-ui-fabric-react\";\nimport { fetchGoalData, fetchGoalDataName } from \"../../redux/actions/goal\";\n\ninterface ParamTypes {\n  employeeId: string;\n  name: string;\n}\n\nconst goalOptions: IDropdownOption[] = [\n  { key: \"key1\", text: \"Goal\" },\n  { key: \"key2\", text: \"Sub-Goal\" },\n];\n\nfunction GoalDetails(props: any) {\n  const params = useParams<ParamTypes>();\n  const [filtersById] = useState(params.employeeId);\n  const [filtersByName] = useState(params.name);\n  const [limitPageLength] = useState(5);\n  //   console.log(params.name);\n  const [limit_start] = useState(0);\n  const [orderBy, setOrderBy] = useState(\"order_no asc\");\n\n  const [goalDetails, setGoalDetails]: any = useState({});\n\n  useEffect((): void => {\n    const filters = [];\n    if (filtersByName) {\n      filters.push([\"name\", \"=\", filtersByName]);\n    }\n    fetchGoalDataName(\n      limit_start,\n      limitPageLength,\n      orderBy,\n      JSON.stringify(filters)\n    ).then((response) => {\n      // console.log(\"response of Goal===>\", response.data);\n      setGoalDetails(response.data[0]);\n    });\n  }, []);\n\n  const textfelidStyle: Partial<ITextFieldStyles> = {\n    root: {\n      //   width: \"50px\",\n    },\n  };\n\n  const onChangeInput = (\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    text?: string\n  ): void => {\n    const target = ev?.target as HTMLInputElement;\n    setGoalDetails({\n      ...goalDetails,\n      [target.name]: target.value || \"\",\n    });\n  };\n\n  const history = useHistory();\n  const onBreadcrumbAppraisalClicked = () => {\n    history.push(\"/home\");\n  };\n  const onBreadcrumbGoalsettingClicked = () => {\n    history.push(\"/appraisal/goalsetting\");\n  };\n  const itemsWithHeading: IBreadcrumbItem[] = [\n    { text: \"Performance\", key: \"d1\" },\n    {\n      text: \"Appraisal\",\n      key: \"d2\",\n      as: \"h4\",\n      onClick: onBreadcrumbAppraisalClicked,\n    },\n    {\n      text: \"Goal Setting\",\n      key: \"d3\",\n      as: \"h4\",\n      onClick: onBreadcrumbGoalsettingClicked,\n    },\n    { text: \"Goals Details\", key: \"d4\", isCurrentItem: true, as: \"h4\" },\n  ];\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\n    root: {\n      margin: \"0px\",\n      padding: \"0px\",\n      marginTop: \"-10px\",\n    },\n    itemLink: {\n      fontSize: \"20px\",\n    },\n  };\n  const userName = props.userData.UserData[0].name;\n  const userId = props.userData.UserData[0].id;\n  const dateNow = new Date().toLocaleDateString();\n  const timeNow = new Date().toLocaleTimeString();\n\n  const [errMsgOrder, setErrMsgOrder] = useState(\"\");\n  const [errMsgGoal, setErrMsgGoal] = useState(\"\");\n  const [errMsgGoalType, setErrMsgGoalType] = useState(\"\");\n  const [errMsgMeasure, setErrMsgMeasure] = useState(\"\");\n  const [errMsgWeightage, setErrMsgWeightage] = useState(\"\");\n  const [errMsgKra, setErrMsgKra] = useState(\"\");\n\n  const stackTokens = { childrenGap: 10 };\n  const renderJobHistoryForm = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"emp-details-section\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <span>ID</span> : {params.name}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Order Number</span> : {goalDetails.order_no}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Goal Type</span> : {goalDetails.goal_type}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Parent Goal</span> : {goalDetails.parent_goal_id}\n            </div>\n            <div className=\"col-md-4\">\n              <span>KRA</span> : {goalDetails.kra}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Goal</span> : {goalDetails.goal}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Measure</span> : {goalDetails.measure}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Weightage</span> : {goalDetails.weightage}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Target</span> : {goalDetails.target}\n            </div>\n            <div className=\"col-md-4\">\n              <span>Threshold</span> : {goalDetails.threshold}\n            </div>\n            <div className=\"col-md-8\">\n              <span>Stretch</span> :{\" \"}\n              {/* {goalDetails.stretch == \"\" ? \"N/A\" : goalDetails.stretch} */}\n              {goalDetails.stretch}\n            </div>\n          </div>\n          <Stack\n            horizontal\n            tokens={stackTokens}\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n              }}\n            >\n              <PrimaryButton\n                text=\"Back\"\n                allowDisabledFocus\n                onClick={() => {\n                  history.goBack();\n                }}\n              />\n            </div>\n          </Stack>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"view\">\n      {/* <WelcomeHeader>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <Text style={{ marginRight: \"10px\" }}>\n              Welcome {userName} ({userId})\n            </Text>\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\n              Logged In:\n            </Text>\n            <Text style={{ marginRight: \"5px\" }}>\n              {dateNow} {timeNow}\n            </Text>\n          </div>\n        </div>\n      </WelcomeHeader> */}\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\n      <div className=\"content\">\n        <div className=\"data-container\">{renderJobHistoryForm()}</div>\n        {/* <div className=\"right-container\"></div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default connect((state) => ({\n  ...state,\n}))(GoalDetails);\n","/home/pratik/Documents/mega-soft/src/SideNavigation/index.tsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport $ from \"jquery\";\nimport { initSideBar } from \"./sideBar\";\nimport { customSideBar } from \"./custom\";\nimport { useHistory } from \"react-router-dom\";\nimport { sideNavigationData } from \"../redux/actions/navigation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/reducers\";\nimport { setMenuType } from \"../redux/actions/roleType\";\nimport React from \"react\";\n\nconst handleSideBar = () => {\n  initSideBar();\n};\n\nfunction SideNavigation() {\n  const [navData, setNavData]: any = useState();\n  const [doctype, setDoctype] = useState(\"Appraisal\");\n  const [home_menu, setHomeMenu] = useState(0);\n  const menuType = useSelector((state: RootState) => state.menuType.menuType);\n  // useEffect(() => {\n  //   initSideBar();\n  //   customSideBar();\n  // }, []);\n\n  useEffect((): void => {\n    if (menuType == 1) {\n      sideMenuLocal();\n    } else {\n      sideNavigationData(menuType).then((response) => {\n        // console.log(\"side nav response==>\", response.message);\n        setNavData(response.message);\n        initSideBar();\n        customSideBar();\n      });\n    }\n  }, [menuType]);\n\n  const sideMenuLocal = () => {\n    return (\n      <aside className=\"left-sidebar\" data-sidebarbg=\"skin5\">\n        <div\n          className=\"scroll-sidebar leftpanel-scrollbar\"\n          id=\"style-scrollbar\"\n        >\n          <nav className=\"sidebar-nav\">\n            {/* <button\n              className=\"btn btn-link btn-nav-left hide-menu\"\n              id=\"nav_employee\"\n            >\n              Employee\n            </button> */}\n            <ul id=\"sidebarnav\" className=\"p-t-30 nav_employee\">\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Profile\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-face-profile\"></i>\n                  <span className=\"hide-menu\">Profile</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"/#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Leave\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-book\"></i>\n                  <span className=\"hide-menu\">Leave</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"/home\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Performance\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-areaspline\"></i>\n                  <span className=\"hide-menu\">Performance</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"/home\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Training\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-wunderlist\"></i>\n                  <span className=\"hide-menu\">Training</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Payroll\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-currency-inr\"></i>\n                  <span className=\"hide-menu\">Payroll</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Separation\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-export\"></i>\n                  <span className=\"hide-menu\">Separation</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              {/* <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Travel Desk\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Travel Desk</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Mediclaim\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Mediclaim</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Leaving Us?\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Leaving Us?</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Help Desk\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Help Desk</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Policies & Forms\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Policies & Forms</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Reports\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Reports</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li>\n              <li className=\"sidebar-item\">\n                <a\n                  className=\"sidebar-link  waves-effect waves-dark\"\n                  href=\"#\"\n                  onClick={(event) => {\n                    handleMainMenu(event, \"Forms\");\n                  }}\n                  aria-expanded=\"false\"\n                >\n                  <i className=\"mdi mdi-chart-bar\"></i>\n                  <span className=\"hide-menu\">Forms</span>\n                </a>\n                <ul\n                  aria-expanded=\"false\"\n                  className=\"collapse  first-level\"\n                ></ul>\n              </li> */}\n            </ul>\n          </nav>\n        </div>\n      </aside>\n    );\n  };\n\n  const renderNavData = () => {\n    // return <div dangerouslySetInnerHTML={{ __html: navData }} />;\n    return { __html: navData };\n  };\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleMainMenu = (e: any, item: any) => {\n    e.preventDefault();\n    console.log(\"inside function  handleMainMenu==>\", item);\n    dispatch(setMenuType(\"0\"));\n  };\n\n  return (\n    <React.Fragment>\n      {menuType == 0 ? (\n        <aside className=\"left-sidebar\" data-sidebarbg=\"skin5\">\n          <div\n            className=\"scroll-sidebar leftpanel-scrollbar\"\n            id=\"style-scrollbar\"\n          >\n            <nav className=\"sidebar-nav\">\n              <div dangerouslySetInnerHTML={renderNavData()} />\n            </nav>\n          </div>\n        </aside>\n      ) : (\n        sideMenuLocal()\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default SideNavigation;\n","/home/pratik/Documents/mega-soft/src/redux/reducers/index.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/roleType.tsx",[],"/home/pratik/Documents/mega-soft/src/Header.tsx",["507","508","509"],"import * as React from \"react\";\nimport {\n  Breadcrumb,\n  IBreadcrumbItem,\n  IBreadcrumbStyles,\n  IDividerAsProps,\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\nimport { IContextualMenuProps } from \"office-ui-fabric-react\";\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport \"./Header.css\";\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: \"action01\",\n      text: \"Action 1\",\n      //   iconProps: { iconName: 'Mail' },\n    },\n    {\n      key: \"action02\",\n      text: \"Action 2\",\n      //   iconProps: { iconName: 'Calendar' },\n    },\n  ],\n};\nfunction _onBreadcrumbItemClicked(\n  ev?: React.MouseEvent<HTMLElement>,\n  item?: IBreadcrumbItem\n): void {\n  console.log(`Breadcrumb item with key \"${item?.key}\" has been clicked.`);\n}\nconst itemsWithHeading: IBreadcrumbItem[] = [\n  {\n    text: \"Performance\",\n    key: \"Files\",\n    onClick: _onBreadcrumbItemClicked,\n    href: \"\",\n  },\n  { text: \"Appraisal\", key: \"d1\", isCurrentItem: true },\n];\nfunction _getCustomOverflowIcon(): JSX.Element {\n  return <Icon iconName={\"ChevronDown\"} />;\n}\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\n  const tooltipText = dividerProps.item ? dividerProps.item.text : \"\";\n  return (\n    <TooltipHost\n      content={`Show ${tooltipText} contents`}\n      calloutProps={{ gapSpace: 0 }}\n    >\n      <span aria-hidden=\"true\" style={{ cursor: \"pointer\", padding: 5 }}>\n        /\n      </span>\n    </TooltipHost>\n  );\n}\n\nconst breadCrumStyle: Partial<IBreadcrumbStyles> = {\n  root: {\n    margin: \"0px\",\n    padding: \"0px\",\n    marginTop: \"-10px\",\n  },\n  itemLink: {\n    fontSize: \"22px\",\n  },\n};\n\nfunction Header(props: { item?: IBreadcrumbItem[]; styles: any }) {\n  // const _alertClicked = () => {\n  //   console.log(\"clicked==>\")\n  // }\n  // const horizontalStackProps: IStackProps = {\n  //     horizontal: true,\n  //     tokens: { childrenGap: 100, },\n  // };\n  // const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\n\n  return (\n    <div className=\"header\">\n      <Breadcrumb\n        // items={itemsWithHeading}\n        items={props.item || []}\n        styles={props.styles}\n        maxDisplayedItems={5}\n        ariaLabel=\"With custom rendered divider and overflow icon\"\n        dividerAs={_getCustomDivider}\n        onRenderOverflowIcon={_getCustomOverflowIcon}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","/home/pratik/Documents/mega-soft/src/redux/actions/goal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/application.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/apprisal.tsx",["510"],"import axios from \"axios\";\nimport accessToken from \"../../apiBase.json\";\n\nexport const addApprisal = (item: any) => {\n  return {\n    type: \"ADD_APPRISAL\",\n    payload: item,\n  };\n};\n\nexport const deleteAppraisalByID = (item: any) => {\n  return {\n    type: \"DELETE_APPRAISAL\",\n    payload: item,\n  };\n};\n\nexport const fetchAppraisalData = (\n  limit_start = 0,\n  limit_page_length = 10,\n  order_by = \"id asc\",\n  filters: any\n) => async (dispatch: any): Promise<any> => {\n  const token = sessionStorage.getItem(\"access_token\");\n  if (token === null) {\n    return false;\n  }\n  const accessToken = \"bearer \" + token;\n  try {\n    dispatch({\n      type: \"FETCH_APPRAISAL_LIST_START\",\n    });\n    const response = await axios({\n      url: `http://52.146.0.154/api/resource/Appraisal`,\n      params: {\n        limit_start,\n        limit_page_length,\n        order_by,\n        filters,\n        fields: JSON.stringify([\n          \"name\",\n          \"id\",\n          \"appraisal_description\",\n          \"review_from\",\n          \"appraisal_to\",\n          \"review_frequency\",\n          \"type\",\n          \"format_type\",\n          \"format_type\",\n          \"appraisal_owner\",\n          \"kra_settings_tab_goals\",\n          \"kra_settings_tab_competencies\",\n          \"kra_settings_tab_development_plan\",\n          \"kra_settings_tab_summary\",\n          \"assessment_tab_goals\",\n          \"assessment_tab_competencies\",\n          \"assessment_tab_development_plan\",\n          \"assessment_tab_summary\",\n          \"is_deleted\",\n        ]),\n      },\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n    });\n    const responseBody = await response.data;\n    // console.log(\"api response =>\", responseBody);\n    dispatch({\n      type: \"FETCH_APPRAISAL_LIST_SUCCESS\",\n      payload: responseBody,\n    });\n    return responseBody;\n  } catch (error) {\n    // console.log(\"error in getting data\", error);\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const fetchAppraisalDataById = async (\n  limit_start = 0,\n  limit_page_length = 10,\n  order_by = \"id asc\",\n  filters: any\n) => {\n  try {\n    const token = sessionStorage.getItem(\"access_token\");\n    if (token === null) {\n      return false;\n    }\n    const accessToken = \"bearer \" + token;\n    const response = await axios({\n      url: `http://52.146.0.154/api/resource/Appraisal`,\n      params: {\n        limit_start,\n        limit_page_length,\n        order_by,\n        filters,\n        fields: JSON.stringify([\n          \"name\",\n          \"id\",\n          \"appraisal_description\",\n          \"review_from\",\n          \"appraisal_to\",\n          \"review_frequency\",\n          \"type\",\n          \"format_type\",\n          \"format_type\",\n          \"appraisal_owner\",\n          \"kra_settings_tab_goals\",\n          \"kra_settings_tab_competencies\",\n          \"kra_settings_tab_development_plan\",\n          \"kra_settings_tab_summary\",\n          \"assessment_tab_goals\",\n          \"assessment_tab_competencies\",\n          \"assessment_tab_development_plan\",\n          \"assessment_tab_summary\",\n          \"is_deleted\",\n        ]),\n      },\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n    });\n    const responseBody = await response.data;\n    // console.log(\"api data by id\", responseBody)\n    return responseBody;\n  } catch (error) {\n    // console.log(\"error in getting data\", error);\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const add_apprisal = async (data: any) => {\n  try {\n    const token = sessionStorage.getItem(\"access_token\");\n    if (token === null) {\n      return false;\n    }\n    const accessToken = \"bearer \" + token;\n    const response = await axios({\n      url: `http://52.146.0.154/api/resource/Appraisal`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n      data: JSON.stringify(data),\n    });\n    return response;\n  } catch (error) {\n    console.log(\"error in catch block=>\", JSON.stringify(error));\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const edit_appraisal = async (data: any) => {\n  try {\n    const token = sessionStorage.getItem(\"access_token\");\n    if (token === null) {\n      return false;\n    }\n    const accessToken = \"bearer \" + token;\n    const response = await axios({\n      url: `http://52.146.0.154/api/resource/Appraisal/${data.id}`,\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken,\n      },\n      data: JSON.stringify(data),\n    });\n    // console.log(\"api response ==>\", response)\n    return await response;\n  } catch (error) {\n    return {\n      ...error,\n    };\n  }\n};\n\nexport const delete_appraisal = async (data: any) => {\n  try {\n    const response = await axios({\n      url: `http://52.146.0.154/api/resource/Appraisal/${data}`,\n      method: \"DELETE\",\n      headers: {\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, DELETE\",\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\n      },\n      data: JSON.stringify(data),\n    });\n    console.log(\"delete api response ==>\", response);\n    return await response;\n  } catch (error) {\n    return {\n      ...error,\n    };\n  }\n};\n","/home/pratik/Documents/mega-soft/src/redux/actions/jobHistory.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/developmentPlan.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/employeeData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/actions/navigation.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/tasks.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/userData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/employeeList.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/navigationData.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/roleType.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/jobHistory.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/menuType.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/auth.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/apprisal.tsx",[],"/home/pratik/Documents/mega-soft/src/redux/reducers/application.tsx",[],"/home/pratik/Documents/mega-soft/src/Utils/index.tsx",["511","512"],"export const languageFromCode = (code: any) => {\n  switch (code) {\n    case \"en\":\n      return \"English\";\n    case \"vi\":\n      return \"Vietnamese\";\n    case \"fr\":\n      return \"French\";\n    case \"ar\":\n      return \"Arabic\";\n    case \"da\":\n      return \"Danish\";\n    case \"de\":\n      return \"German\";\n    case \"el\":\n      return \"Greek\";\n    case \"fr\":\n      return \"French\";\n    case \"he\":\n      return \"Hebrew\";\n    case \"id\":\n      return \"Indonesian\";\n    case \"ja\":\n      return \"Japanese\";\n    case \"ko\":\n      return \"Korean\";\n    case \"lo\":\n      return \"Lao\";\n    case \"nl\":\n      return \"Dutch\";\n    case \"zh\":\n      return \"Chinese\";\n    case \"fa\":\n      return \"Iran\";\n    case \"km\":\n      return \"Cambodian\";\n    default:\n      return \"Unknown\";\n  }\n};\n\nexport const isLanguageRTL = (code: any) => {\n  switch (code) {\n    case \"ar\":\n    case \"he\":\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const reloadLocale = (oldLanguage: any, newLanguage: any) => {\n  const oldStyle = isLanguageRTL(oldLanguage);\n  const newStyle = isLanguageRTL(newLanguage);\n  if (oldStyle != newStyle) {\n  }\n};\n",{"ruleId":"513","severity":1,"message":"514","line":8,"column":8,"nodeType":"515","messageId":"516","endLine":8,"endColumn":12},{"ruleId":"517","replacedBy":"518"},{"ruleId":"519","replacedBy":"520"},{"ruleId":"513","severity":1,"message":"521","line":1,"column":38,"nodeType":"515","messageId":"516","endLine":1,"endColumn":46},{"ruleId":"513","severity":1,"message":"522","line":26,"column":8,"nodeType":"515","messageId":"516","endLine":26,"endColumn":9},{"ruleId":"513","severity":1,"message":"523","line":70,"column":9,"nodeType":"515","messageId":"516","endLine":70,"endColumn":13},{"ruleId":"524","severity":1,"message":"525","line":93,"column":6,"nodeType":"526","endLine":93,"endColumn":8,"suggestions":"527"},{"ruleId":"524","severity":1,"message":"525","line":110,"column":6,"nodeType":"526","endLine":110,"endColumn":8,"suggestions":"528"},{"ruleId":"529","severity":1,"message":"530","line":119,"column":26,"nodeType":"531","messageId":"532","endLine":119,"endColumn":28},{"ruleId":"513","severity":1,"message":"533","line":3,"column":3,"nodeType":"515","messageId":"516","endLine":3,"endColumn":6},{"ruleId":"513","severity":1,"message":"534","line":12,"column":8,"nodeType":"515","messageId":"516","endLine":12,"endColumn":18},{"ruleId":"513","severity":1,"message":"535","line":14,"column":3,"nodeType":"515","messageId":"516","endLine":14,"endColumn":21},{"ruleId":"513","severity":1,"message":"536","line":15,"column":3,"nodeType":"515","messageId":"516","endLine":15,"endColumn":21},{"ruleId":"513","severity":1,"message":"537","line":17,"column":10,"nodeType":"515","messageId":"516","endLine":17,"endColumn":19},{"ruleId":"513","severity":1,"message":"538","line":150,"column":7,"nodeType":"515","messageId":"516","endLine":150,"endColumn":37},{"ruleId":"513","severity":1,"message":"539","line":193,"column":9,"nodeType":"515","messageId":"516","endLine":193,"endColumn":17},{"ruleId":"513","severity":1,"message":"540","line":194,"column":10,"nodeType":"515","messageId":"516","endLine":194,"endColumn":17},{"ruleId":"513","severity":1,"message":"541","line":194,"column":19,"nodeType":"515","messageId":"516","endLine":194,"endColumn":29},{"ruleId":"513","severity":1,"message":"542","line":195,"column":9,"nodeType":"515","messageId":"516","endLine":195,"endColumn":17},{"ruleId":"513","severity":1,"message":"543","line":196,"column":10,"nodeType":"515","messageId":"516","endLine":196,"endColumn":17},{"ruleId":"513","severity":1,"message":"544","line":196,"column":19,"nodeType":"515","messageId":"516","endLine":196,"endColumn":29},{"ruleId":"513","severity":1,"message":"545","line":199,"column":9,"nodeType":"515","messageId":"516","endLine":199,"endColumn":19},{"ruleId":"513","severity":1,"message":"546","line":216,"column":10,"nodeType":"515","messageId":"516","endLine":216,"endColumn":24},{"ruleId":"513","severity":1,"message":"547","line":217,"column":9,"nodeType":"515","messageId":"516","endLine":217,"endColumn":20},{"ruleId":"548","severity":1,"message":"549","line":221,"column":39,"nodeType":"550","messageId":"551","endLine":221,"endColumn":41},{"ruleId":"548","severity":1,"message":"549","line":223,"column":34,"nodeType":"550","messageId":"551","endLine":223,"endColumn":36},{"ruleId":"548","severity":1,"message":"552","line":231,"column":13,"nodeType":"553","messageId":"554","endLine":231,"endColumn":20},{"ruleId":"548","severity":1,"message":"552","line":242,"column":11,"nodeType":"553","messageId":"554","endLine":242,"endColumn":18},{"ruleId":"555","severity":1,"message":"556","line":255,"column":11,"nodeType":"557","endLine":255,"endColumn":34},{"ruleId":"513","severity":1,"message":"558","line":11,"column":10,"nodeType":"515","messageId":"516","endLine":11,"endColumn":21},{"ruleId":"513","severity":1,"message":"559","line":11,"column":23,"nodeType":"515","messageId":"516","endLine":11,"endColumn":34},{"ruleId":"513","severity":1,"message":"560","line":12,"column":10,"nodeType":"515","messageId":"516","endLine":12,"endColumn":19},{"ruleId":"561","severity":1,"message":"562","line":15,"column":3,"nodeType":"563","messageId":"564","endLine":15,"endColumn":18,"fix":"565"},{"ruleId":"513","severity":1,"message":"566","line":17,"column":7,"nodeType":"515","messageId":"516","endLine":17,"endColumn":11},{"ruleId":"561","severity":1,"message":"562","line":4,"column":3,"nodeType":"563","messageId":"564","endLine":4,"endColumn":18,"fix":"567"},{"ruleId":"513","severity":1,"message":"568","line":102,"column":7,"nodeType":"515","messageId":"516","endLine":102,"endColumn":21},{"ruleId":"513","severity":1,"message":"569","line":4,"column":3,"nodeType":"515","messageId":"516","endLine":4,"endColumn":12},{"ruleId":"513","severity":1,"message":"537","line":6,"column":17,"nodeType":"515","messageId":"516","endLine":6,"endColumn":26},{"ruleId":"513","severity":1,"message":"521","line":6,"column":28,"nodeType":"515","messageId":"516","endLine":6,"endColumn":36},{"ruleId":"513","severity":1,"message":"570","line":8,"column":10,"nodeType":"515","messageId":"516","endLine":8,"endColumn":15},{"ruleId":"513","severity":1,"message":"571","line":10,"column":8,"nodeType":"515","messageId":"516","endLine":10,"endColumn":19},{"ruleId":"513","severity":1,"message":"539","line":14,"column":9,"nodeType":"515","messageId":"516","endLine":14,"endColumn":17},{"ruleId":"513","severity":1,"message":"572","line":15,"column":9,"nodeType":"515","messageId":"516","endLine":15,"endColumn":50},{"ruleId":"555","severity":1,"message":"556","line":53,"column":13,"nodeType":"557","endLine":53,"endColumn":60},{"ruleId":"513","severity":1,"message":"573","line":26,"column":10,"nodeType":"515","messageId":"516","endLine":26,"endColumn":23},{"ruleId":"513","severity":1,"message":"574","line":35,"column":11,"nodeType":"515","messageId":"516","endLine":35,"endColumn":12},{"ruleId":"513","severity":1,"message":"575","line":55,"column":9,"nodeType":"515","messageId":"516","endLine":55,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":71,"column":18,"nodeType":"531","messageId":"532","endLine":71,"endColumn":20},{"ruleId":"513","severity":1,"message":"576","line":80,"column":10,"nodeType":"515","messageId":"516","endLine":80,"endColumn":18},{"ruleId":"513","severity":1,"message":"577","line":107,"column":9,"nodeType":"515","messageId":"516","endLine":107,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":115,"column":11,"nodeType":"557","endLine":118,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":121,"column":11,"nodeType":"557","endLine":128,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":139,"column":11,"nodeType":"557","endLine":147,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":158,"column":15,"nodeType":"557","endLine":163,"endColumn":16},{"ruleId":"555","severity":1,"message":"556","line":168,"column":15,"nodeType":"557","endLine":168,"endColumn":39},{"ruleId":"578","severity":1,"message":"579","line":248,"column":15,"nodeType":"557","endLine":254,"endColumn":16},{"ruleId":"580","severity":1,"message":"581","line":248,"column":15,"nodeType":"557","endLine":254,"endColumn":16},{"ruleId":"578","severity":1,"message":"579","line":259,"column":17,"nodeType":"557","endLine":259,"endColumn":55},{"ruleId":"578","severity":1,"message":"579","line":262,"column":17,"nodeType":"557","endLine":262,"endColumn":55},{"ruleId":"578","severity":1,"message":"579","line":266,"column":17,"nodeType":"557","endLine":266,"endColumn":55},{"ruleId":"578","severity":1,"message":"579","line":272,"column":15,"nodeType":"557","endLine":279,"endColumn":16},{"ruleId":"580","severity":1,"message":"581","line":272,"column":15,"nodeType":"557","endLine":279,"endColumn":16},{"ruleId":"578","severity":1,"message":"579","line":290,"column":23,"nodeType":"557","endLine":290,"endColumn":63},{"ruleId":"578","severity":1,"message":"579","line":303,"column":23,"nodeType":"557","endLine":303,"endColumn":63},{"ruleId":"578","severity":1,"message":"579","line":316,"column":23,"nodeType":"557","endLine":316,"endColumn":63},{"ruleId":"578","severity":1,"message":"579","line":329,"column":23,"nodeType":"557","endLine":329,"endColumn":63},{"ruleId":"555","severity":1,"message":"556","line":355,"column":13,"nodeType":"557","endLine":355,"endColumn":61},{"ruleId":"513","severity":1,"message":"582","line":32,"column":8,"nodeType":"515","messageId":"516","endLine":32,"endColumn":21},{"ruleId":"513","severity":1,"message":"583","line":40,"column":8,"nodeType":"515","messageId":"516","endLine":40,"endColumn":18},{"ruleId":"513","severity":1,"message":"584","line":45,"column":3,"nodeType":"515","messageId":"516","endLine":45,"endColumn":22},{"ruleId":"513","severity":1,"message":"585","line":51,"column":10,"nodeType":"515","messageId":"516","endLine":51,"endColumn":26},{"ruleId":"513","severity":1,"message":"586","line":62,"column":27,"nodeType":"515","messageId":"516","endLine":62,"endColumn":45},{"ruleId":"513","severity":1,"message":"587","line":72,"column":37,"nodeType":"515","messageId":"516","endLine":72,"endColumn":42},{"ruleId":"513","severity":1,"message":"588","line":73,"column":10,"nodeType":"515","messageId":"516","endLine":73,"endColumn":20},{"ruleId":"513","severity":1,"message":"589","line":73,"column":22,"nodeType":"515","messageId":"516","endLine":73,"endColumn":35},{"ruleId":"513","severity":1,"message":"590","line":75,"column":9,"nodeType":"515","messageId":"516","endLine":75,"endColumn":15},{"ruleId":"524","severity":1,"message":"591","line":114,"column":6,"nodeType":"526","endLine":123,"endColumn":4,"suggestions":"592"},{"ruleId":"513","severity":1,"message":"593","line":281,"column":10,"nodeType":"515","messageId":"516","endLine":281,"endColumn":20},{"ruleId":"513","severity":1,"message":"594","line":533,"column":9,"nodeType":"515","messageId":"516","endLine":533,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":534,"column":9,"nodeType":"515","messageId":"516","endLine":534,"endColumn":16},{"ruleId":"513","severity":1,"message":"596","line":536,"column":9,"nodeType":"515","messageId":"516","endLine":536,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":537,"column":9,"nodeType":"515","messageId":"516","endLine":537,"endColumn":15},{"ruleId":"529","severity":1,"message":"530","line":541,"column":23,"nodeType":"531","messageId":"532","endLine":541,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":544,"column":23,"nodeType":"531","messageId":"532","endLine":544,"endColumn":25},{"ruleId":"513","severity":1,"message":"598","line":559,"column":9,"nodeType":"515","messageId":"516","endLine":559,"endColumn":52},{"ruleId":"529","severity":1,"message":"530","line":675,"column":29,"nodeType":"531","messageId":"532","endLine":675,"endColumn":31},{"ruleId":"513","severity":1,"message":"582","line":29,"column":8,"nodeType":"515","messageId":"516","endLine":29,"endColumn":21},{"ruleId":"513","severity":1,"message":"599","line":30,"column":10,"nodeType":"515","messageId":"516","endLine":30,"endColumn":14},{"ruleId":"513","severity":1,"message":"600","line":56,"column":7,"nodeType":"515","messageId":"516","endLine":56,"endColumn":47},{"ruleId":"513","severity":1,"message":"601","line":68,"column":14,"nodeType":"515","messageId":"516","endLine":68,"endColumn":18},{"ruleId":"513","severity":1,"message":"572","line":73,"column":9,"nodeType":"515","messageId":"516","endLine":73,"endColumn":50},{"ruleId":"513","severity":1,"message":"594","line":322,"column":9,"nodeType":"515","messageId":"516","endLine":322,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":323,"column":9,"nodeType":"515","messageId":"516","endLine":323,"endColumn":16},{"ruleId":"513","severity":1,"message":"596","line":324,"column":9,"nodeType":"515","messageId":"516","endLine":324,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":325,"column":9,"nodeType":"515","messageId":"516","endLine":325,"endColumn":15},{"ruleId":"513","severity":1,"message":"602","line":363,"column":10,"nodeType":"515","messageId":"516","endLine":363,"endColumn":21},{"ruleId":"513","severity":1,"message":"603","line":363,"column":23,"nodeType":"515","messageId":"516","endLine":363,"endColumn":37},{"ruleId":"513","severity":1,"message":"604","line":367,"column":10,"nodeType":"515","messageId":"516","endLine":367,"endColumn":26},{"ruleId":"513","severity":1,"message":"605","line":368,"column":10,"nodeType":"515","messageId":"516","endLine":368,"endColumn":29},{"ruleId":"513","severity":1,"message":"606","line":368,"column":31,"nodeType":"515","messageId":"516","endLine":368,"endColumn":53},{"ruleId":"513","severity":1,"message":"607","line":3,"column":3,"nodeType":"515","messageId":"516","endLine":3,"endColumn":13},{"ruleId":"513","severity":1,"message":"608","line":4,"column":3,"nodeType":"515","messageId":"516","endLine":4,"endColumn":11},{"ruleId":"513","severity":1,"message":"609","line":7,"column":3,"nodeType":"515","messageId":"516","endLine":7,"endColumn":20},{"ruleId":"513","severity":1,"message":"610","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":18},{"ruleId":"513","severity":1,"message":"611","line":9,"column":3,"nodeType":"515","messageId":"516","endLine":9,"endColumn":18},{"ruleId":"513","severity":1,"message":"612","line":10,"column":3,"nodeType":"515","messageId":"516","endLine":10,"endColumn":19},{"ruleId":"513","severity":1,"message":"613","line":12,"column":3,"nodeType":"515","messageId":"516","endLine":12,"endColumn":17},{"ruleId":"513","severity":1,"message":"569","line":16,"column":3,"nodeType":"515","messageId":"516","endLine":16,"endColumn":12},{"ruleId":"513","severity":1,"message":"582","line":21,"column":8,"nodeType":"515","messageId":"516","endLine":21,"endColumn":21},{"ruleId":"513","severity":1,"message":"599","line":23,"column":10,"nodeType":"515","messageId":"516","endLine":23,"endColumn":14},{"ruleId":"524","severity":1,"message":"614","line":59,"column":6,"nodeType":"526","endLine":59,"endColumn":8,"suggestions":"615"},{"ruleId":"513","severity":1,"message":"582","line":30,"column":8,"nodeType":"515","messageId":"516","endLine":30,"endColumn":21},{"ruleId":"513","severity":1,"message":"599","line":31,"column":10,"nodeType":"515","messageId":"516","endLine":31,"endColumn":14},{"ruleId":"513","severity":1,"message":"600","line":56,"column":7,"nodeType":"515","messageId":"516","endLine":56,"endColumn":47},{"ruleId":"524","severity":1,"message":"614","line":92,"column":6,"nodeType":"526","endLine":92,"endColumn":8,"suggestions":"616"},{"ruleId":"513","severity":1,"message":"617","line":171,"column":26,"nodeType":"515","messageId":"516","endLine":171,"endColumn":43},{"ruleId":"513","severity":1,"message":"618","line":182,"column":10,"nodeType":"515","messageId":"516","endLine":182,"endColumn":21},{"ruleId":"513","severity":1,"message":"619","line":209,"column":9,"nodeType":"515","messageId":"516","endLine":209,"endColumn":28},{"ruleId":"513","severity":1,"message":"594","line":254,"column":9,"nodeType":"515","messageId":"516","endLine":254,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":255,"column":9,"nodeType":"515","messageId":"516","endLine":255,"endColumn":16},{"ruleId":"513","severity":1,"message":"596","line":256,"column":9,"nodeType":"515","messageId":"516","endLine":256,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":257,"column":9,"nodeType":"515","messageId":"516","endLine":257,"endColumn":15},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"541","line":27,"column":19,"nodeType":"515","messageId":"516","endLine":27,"endColumn":29},{"ruleId":"513","severity":1,"message":"620","line":28,"column":23,"nodeType":"515","messageId":"516","endLine":28,"endColumn":36},{"ruleId":"513","severity":1,"message":"621","line":29,"column":17,"nodeType":"515","messageId":"516","endLine":29,"endColumn":25},{"ruleId":"513","severity":1,"message":"622","line":30,"column":10,"nodeType":"515","messageId":"516","endLine":30,"endColumn":14},{"ruleId":"513","severity":1,"message":"623","line":30,"column":16,"nodeType":"515","messageId":"516","endLine":30,"endColumn":23},{"ruleId":"513","severity":1,"message":"586","line":32,"column":27,"nodeType":"515","messageId":"516","endLine":32,"endColumn":45},{"ruleId":"513","severity":1,"message":"624","line":33,"column":10,"nodeType":"515","messageId":"516","endLine":33,"endColumn":20},{"ruleId":"513","severity":1,"message":"542","line":37,"column":9,"nodeType":"515","messageId":"516","endLine":37,"endColumn":17},{"ruleId":"513","severity":1,"message":"587","line":39,"column":49,"nodeType":"515","messageId":"516","endLine":39,"endColumn":54},{"ruleId":"524","severity":1,"message":"525","line":56,"column":6,"nodeType":"526","endLine":56,"endColumn":51,"suggestions":"625"},{"ruleId":"513","severity":1,"message":"626","line":12,"column":3,"nodeType":"515","messageId":"516","endLine":12,"endColumn":8},{"ruleId":"513","severity":1,"message":"582","line":27,"column":8,"nodeType":"515","messageId":"516","endLine":27,"endColumn":21},{"ruleId":"513","severity":1,"message":"627","line":40,"column":8,"nodeType":"515","messageId":"516","endLine":40,"endColumn":22},{"ruleId":"513","severity":1,"message":"628","line":44,"column":8,"nodeType":"515","messageId":"516","endLine":44,"endColumn":18},{"ruleId":"513","severity":1,"message":"629","line":45,"column":8,"nodeType":"515","messageId":"516","endLine":45,"endColumn":25},{"ruleId":"513","severity":1,"message":"630","line":74,"column":10,"nodeType":"515","messageId":"516","endLine":74,"endColumn":25},{"ruleId":"513","severity":1,"message":"631","line":74,"column":27,"nodeType":"515","messageId":"516","endLine":74,"endColumn":45},{"ruleId":"513","severity":1,"message":"632","line":83,"column":33,"nodeType":"515","messageId":"516","endLine":83,"endColumn":57},{"ruleId":"513","severity":1,"message":"633","line":84,"column":30,"nodeType":"515","messageId":"516","endLine":84,"endColumn":51},{"ruleId":"513","severity":1,"message":"587","line":85,"column":10,"nodeType":"515","messageId":"516","endLine":85,"endColumn":15},{"ruleId":"513","severity":1,"message":"634","line":85,"column":17,"nodeType":"515","messageId":"516","endLine":85,"endColumn":25},{"ruleId":"513","severity":1,"message":"635","line":87,"column":22,"nodeType":"515","messageId":"516","endLine":87,"endColumn":35},{"ruleId":"513","severity":1,"message":"636","line":88,"column":19,"nodeType":"515","messageId":"516","endLine":88,"endColumn":29},{"ruleId":"513","severity":1,"message":"637","line":97,"column":10,"nodeType":"515","messageId":"516","endLine":97,"endColumn":26},{"ruleId":"513","severity":1,"message":"638","line":103,"column":34,"nodeType":"515","messageId":"516","endLine":103,"endColumn":45},{"ruleId":"524","severity":1,"message":"639","line":128,"column":6,"nodeType":"526","endLine":128,"endColumn":48,"suggestions":"640"},{"ruleId":"524","severity":1,"message":"641","line":144,"column":6,"nodeType":"526","endLine":144,"endColumn":67,"suggestions":"642"},{"ruleId":"524","severity":1,"message":"643","line":170,"column":6,"nodeType":"526","endLine":170,"endColumn":43,"suggestions":"644"},{"ruleId":"524","severity":1,"message":"645","line":200,"column":6,"nodeType":"526","endLine":200,"endColumn":43,"suggestions":"646"},{"ruleId":"513","severity":1,"message":"572","line":234,"column":9,"nodeType":"515","messageId":"516","endLine":234,"endColumn":50},{"ruleId":"513","severity":1,"message":"647","line":396,"column":10,"nodeType":"515","messageId":"516","endLine":396,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":530,"column":27,"nodeType":"531","messageId":"532","endLine":530,"endColumn":29},{"ruleId":"513","severity":1,"message":"648","line":661,"column":10,"nodeType":"515","messageId":"516","endLine":661,"endColumn":22},{"ruleId":"513","severity":1,"message":"649","line":723,"column":9,"nodeType":"515","messageId":"516","endLine":723,"endColumn":19},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"599","line":25,"column":3,"nodeType":"515","messageId":"516","endLine":25,"endColumn":7},{"ruleId":"513","severity":1,"message":"630","line":40,"column":10,"nodeType":"515","messageId":"516","endLine":40,"endColumn":25},{"ruleId":"524","severity":1,"message":"650","line":60,"column":6,"nodeType":"526","endLine":60,"endColumn":8,"suggestions":"651"},{"ruleId":"513","severity":1,"message":"596","line":159,"column":9,"nodeType":"515","messageId":"516","endLine":159,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":160,"column":9,"nodeType":"515","messageId":"516","endLine":160,"endColumn":15},{"ruleId":"513","severity":1,"message":"594","line":161,"column":9,"nodeType":"515","messageId":"516","endLine":161,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":162,"column":9,"nodeType":"515","messageId":"516","endLine":162,"endColumn":16},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"652","line":7,"column":3,"nodeType":"515","messageId":"516","endLine":7,"endColumn":17},{"ruleId":"513","severity":1,"message":"599","line":26,"column":3,"nodeType":"515","messageId":"516","endLine":26,"endColumn":7},{"ruleId":"513","severity":1,"message":"630","line":39,"column":10,"nodeType":"515","messageId":"516","endLine":39,"endColumn":25},{"ruleId":"513","severity":1,"message":"631","line":39,"column":27,"nodeType":"515","messageId":"516","endLine":39,"endColumn":45},{"ruleId":"513","severity":1,"message":"653","line":40,"column":10,"nodeType":"515","messageId":"516","endLine":40,"endColumn":24},{"ruleId":"513","severity":1,"message":"654","line":40,"column":26,"nodeType":"515","messageId":"516","endLine":40,"endColumn":43},{"ruleId":"513","severity":1,"message":"655","line":46,"column":10,"nodeType":"515","messageId":"516","endLine":46,"endColumn":16},{"ruleId":"513","severity":1,"message":"656","line":47,"column":10,"nodeType":"515","messageId":"516","endLine":47,"endColumn":18},{"ruleId":"524","severity":1,"message":"650","line":61,"column":6,"nodeType":"526","endLine":61,"endColumn":8,"suggestions":"657"},{"ruleId":"513","severity":1,"message":"658","line":118,"column":9,"nodeType":"515","messageId":"516","endLine":118,"endColumn":23},{"ruleId":"513","severity":1,"message":"659","line":122,"column":9,"nodeType":"515","messageId":"516","endLine":122,"endColumn":25},{"ruleId":"513","severity":1,"message":"596","line":164,"column":9,"nodeType":"515","messageId":"516","endLine":164,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":165,"column":9,"nodeType":"515","messageId":"516","endLine":165,"endColumn":15},{"ruleId":"513","severity":1,"message":"594","line":166,"column":9,"nodeType":"515","messageId":"516","endLine":166,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":167,"column":9,"nodeType":"515","messageId":"516","endLine":167,"endColumn":16},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"652","line":7,"column":3,"nodeType":"515","messageId":"516","endLine":7,"endColumn":17},{"ruleId":"513","severity":1,"message":"660","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":18},{"ruleId":"513","severity":1,"message":"607","line":13,"column":3,"nodeType":"515","messageId":"516","endLine":13,"endColumn":13},{"ruleId":"513","severity":1,"message":"661","line":17,"column":3,"nodeType":"515","messageId":"516","endLine":17,"endColumn":13},{"ruleId":"513","severity":1,"message":"662","line":23,"column":3,"nodeType":"515","messageId":"516","endLine":23,"endColumn":8},{"ruleId":"513","severity":1,"message":"599","line":26,"column":3,"nodeType":"515","messageId":"516","endLine":26,"endColumn":7},{"ruleId":"513","severity":1,"message":"569","line":27,"column":3,"nodeType":"515","messageId":"516","endLine":27,"endColumn":12},{"ruleId":"513","severity":1,"message":"663","line":38,"column":10,"nodeType":"515","messageId":"516","endLine":38,"endColumn":21},{"ruleId":"513","severity":1,"message":"655","line":48,"column":10,"nodeType":"515","messageId":"516","endLine":48,"endColumn":16},{"ruleId":"513","severity":1,"message":"656","line":49,"column":10,"nodeType":"515","messageId":"516","endLine":49,"endColumn":18},{"ruleId":"524","severity":1,"message":"664","line":61,"column":6,"nodeType":"526","endLine":61,"endColumn":8,"suggestions":"665"},{"ruleId":"513","severity":1,"message":"666","line":64,"column":9,"nodeType":"515","messageId":"516","endLine":64,"endColumn":31},{"ruleId":"513","severity":1,"message":"667","line":65,"column":9,"nodeType":"515","messageId":"516","endLine":65,"endColumn":25},{"ruleId":"513","severity":1,"message":"668","line":76,"column":9,"nodeType":"515","messageId":"516","endLine":76,"endColumn":42},{"ruleId":"513","severity":1,"message":"669","line":86,"column":9,"nodeType":"515","messageId":"516","endLine":86,"endColumn":52},{"ruleId":"513","severity":1,"message":"572","line":94,"column":9,"nodeType":"515","messageId":"516","endLine":94,"endColumn":50},{"ruleId":"513","severity":1,"message":"670","line":100,"column":9,"nodeType":"515","messageId":"516","endLine":100,"endColumn":21},{"ruleId":"513","severity":1,"message":"671","line":107,"column":9,"nodeType":"515","messageId":"516","endLine":107,"endColumn":22},{"ruleId":"513","severity":1,"message":"658","line":118,"column":9,"nodeType":"515","messageId":"516","endLine":118,"endColumn":23},{"ruleId":"513","severity":1,"message":"659","line":122,"column":9,"nodeType":"515","messageId":"516","endLine":122,"endColumn":25},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"652","line":7,"column":3,"nodeType":"515","messageId":"516","endLine":7,"endColumn":17},{"ruleId":"513","severity":1,"message":"660","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":18},{"ruleId":"513","severity":1,"message":"607","line":12,"column":3,"nodeType":"515","messageId":"516","endLine":12,"endColumn":13},{"ruleId":"513","severity":1,"message":"599","line":27,"column":3,"nodeType":"515","messageId":"516","endLine":27,"endColumn":7},{"ruleId":"513","severity":1,"message":"672","line":30,"column":8,"nodeType":"515","messageId":"516","endLine":30,"endColumn":14},{"ruleId":"513","severity":1,"message":"542","line":46,"column":9,"nodeType":"515","messageId":"516","endLine":46,"endColumn":17},{"ruleId":"513","severity":1,"message":"636","line":49,"column":19,"nodeType":"515","messageId":"516","endLine":49,"endColumn":29},{"ruleId":"513","severity":1,"message":"655","line":62,"column":10,"nodeType":"515","messageId":"516","endLine":62,"endColumn":16},{"ruleId":"513","severity":1,"message":"656","line":63,"column":10,"nodeType":"515","messageId":"516","endLine":63,"endColumn":18},{"ruleId":"513","severity":1,"message":"673","line":66,"column":10,"nodeType":"515","messageId":"516","endLine":66,"endColumn":18},{"ruleId":"524","severity":1,"message":"674","line":82,"column":6,"nodeType":"526","endLine":82,"endColumn":8,"suggestions":"675"},{"ruleId":"513","severity":1,"message":"669","line":107,"column":9,"nodeType":"515","messageId":"516","endLine":107,"endColumn":52},{"ruleId":"513","severity":1,"message":"670","line":121,"column":9,"nodeType":"515","messageId":"516","endLine":121,"endColumn":21},{"ruleId":"513","severity":1,"message":"658","line":139,"column":9,"nodeType":"515","messageId":"516","endLine":139,"endColumn":23},{"ruleId":"513","severity":1,"message":"659","line":143,"column":9,"nodeType":"515","messageId":"516","endLine":143,"endColumn":25},{"ruleId":"513","severity":1,"message":"596","line":181,"column":9,"nodeType":"515","messageId":"516","endLine":181,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":182,"column":9,"nodeType":"515","messageId":"516","endLine":182,"endColumn":15},{"ruleId":"513","severity":1,"message":"594","line":183,"column":9,"nodeType":"515","messageId":"516","endLine":183,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":184,"column":9,"nodeType":"515","messageId":"516","endLine":184,"endColumn":16},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"599","line":22,"column":3,"nodeType":"515","messageId":"516","endLine":22,"endColumn":7},{"ruleId":"513","severity":1,"message":"676","line":26,"column":3,"nodeType":"515","messageId":"516","endLine":26,"endColumn":16},{"ruleId":"513","severity":1,"message":"663","line":43,"column":10,"nodeType":"515","messageId":"516","endLine":43,"endColumn":21},{"ruleId":"513","severity":1,"message":"542","line":44,"column":9,"nodeType":"515","messageId":"516","endLine":44,"endColumn":17},{"ruleId":"513","severity":1,"message":"636","line":47,"column":19,"nodeType":"515","messageId":"516","endLine":47,"endColumn":29},{"ruleId":"513","severity":1,"message":"673","line":52,"column":10,"nodeType":"515","messageId":"516","endLine":52,"endColumn":18},{"ruleId":"513","severity":1,"message":"677","line":52,"column":20,"nodeType":"515","messageId":"516","endLine":52,"endColumn":31},{"ruleId":"524","severity":1,"message":"678","line":69,"column":6,"nodeType":"526","endLine":69,"endColumn":8,"suggestions":"679"},{"ruleId":"513","severity":1,"message":"669","line":94,"column":9,"nodeType":"515","messageId":"516","endLine":94,"endColumn":52},{"ruleId":"513","severity":1,"message":"670","line":108,"column":9,"nodeType":"515","messageId":"516","endLine":108,"endColumn":21},{"ruleId":"513","severity":1,"message":"596","line":159,"column":9,"nodeType":"515","messageId":"516","endLine":159,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":160,"column":9,"nodeType":"515","messageId":"516","endLine":160,"endColumn":15},{"ruleId":"513","severity":1,"message":"594","line":161,"column":9,"nodeType":"515","messageId":"516","endLine":161,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":162,"column":9,"nodeType":"515","messageId":"516","endLine":162,"endColumn":16},{"ruleId":"513","severity":1,"message":"680","line":164,"column":23,"nodeType":"515","messageId":"516","endLine":164,"endColumn":37},{"ruleId":"513","severity":1,"message":"681","line":165,"column":22,"nodeType":"515","messageId":"516","endLine":165,"endColumn":35},{"ruleId":"513","severity":1,"message":"682","line":166,"column":26,"nodeType":"515","messageId":"516","endLine":166,"endColumn":43},{"ruleId":"513","severity":1,"message":"683","line":167,"column":25,"nodeType":"515","messageId":"516","endLine":167,"endColumn":41},{"ruleId":"513","severity":1,"message":"684","line":168,"column":27,"nodeType":"515","messageId":"516","endLine":168,"endColumn":45},{"ruleId":"513","severity":1,"message":"685","line":169,"column":21,"nodeType":"515","messageId":"516","endLine":169,"endColumn":33},{"ruleId":"513","severity":1,"message":"686","line":171,"column":10,"nodeType":"515","messageId":"516","endLine":171,"endColumn":18},{"ruleId":"513","severity":1,"message":"687","line":176,"column":9,"nodeType":"515","messageId":"516","endLine":176,"endColumn":25},{"ruleId":"513","severity":1,"message":"559","line":2,"column":19,"nodeType":"515","messageId":"516","endLine":2,"endColumn":30},{"ruleId":"513","severity":1,"message":"558","line":2,"column":32,"nodeType":"515","messageId":"516","endLine":2,"endColumn":43},{"ruleId":"513","severity":1,"message":"582","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":21},{"ruleId":"513","severity":1,"message":"560","line":6,"column":10,"nodeType":"515","messageId":"516","endLine":6,"endColumn":19},{"ruleId":"513","severity":1,"message":"608","line":8,"column":3,"nodeType":"515","messageId":"516","endLine":8,"endColumn":11},{"ruleId":"513","severity":1,"message":"688","line":9,"column":3,"nodeType":"515","messageId":"516","endLine":9,"endColumn":11},{"ruleId":"513","severity":1,"message":"661","line":12,"column":3,"nodeType":"515","messageId":"516","endLine":12,"endColumn":13},{"ruleId":"513","severity":1,"message":"609","line":13,"column":3,"nodeType":"515","messageId":"516","endLine":13,"endColumn":20},{"ruleId":"513","severity":1,"message":"689","line":15,"column":3,"nodeType":"515","messageId":"516","endLine":15,"endColumn":13},{"ruleId":"513","severity":1,"message":"690","line":16,"column":3,"nodeType":"515","messageId":"516","endLine":16,"endColumn":15},{"ruleId":"513","severity":1,"message":"613","line":18,"column":3,"nodeType":"515","messageId":"516","endLine":18,"endColumn":17},{"ruleId":"513","severity":1,"message":"662","line":19,"column":3,"nodeType":"515","messageId":"516","endLine":19,"endColumn":8},{"ruleId":"513","severity":1,"message":"599","line":22,"column":3,"nodeType":"515","messageId":"516","endLine":22,"endColumn":7},{"ruleId":"513","severity":1,"message":"569","line":23,"column":3,"nodeType":"515","messageId":"516","endLine":23,"endColumn":12},{"ruleId":"513","severity":1,"message":"676","line":25,"column":10,"nodeType":"515","messageId":"516","endLine":25,"endColumn":23},{"ruleId":"513","severity":1,"message":"691","line":32,"column":7,"nodeType":"515","messageId":"516","endLine":32,"endColumn":37},{"ruleId":"513","severity":1,"message":"663","line":39,"column":10,"nodeType":"515","messageId":"516","endLine":39,"endColumn":21},{"ruleId":"513","severity":1,"message":"636","line":44,"column":19,"nodeType":"515","messageId":"516","endLine":44,"endColumn":29},{"ruleId":"524","severity":1,"message":"678","line":62,"column":6,"nodeType":"526","endLine":62,"endColumn":8,"suggestions":"692"},{"ruleId":"513","severity":1,"message":"572","line":64,"column":9,"nodeType":"515","messageId":"516","endLine":64,"endColumn":50},{"ruleId":"513","severity":1,"message":"671","line":70,"column":9,"nodeType":"515","messageId":"516","endLine":70,"endColumn":22},{"ruleId":"513","severity":1,"message":"596","line":114,"column":9,"nodeType":"515","messageId":"516","endLine":114,"endColumn":17},{"ruleId":"513","severity":1,"message":"597","line":115,"column":9,"nodeType":"515","messageId":"516","endLine":115,"endColumn":15},{"ruleId":"513","severity":1,"message":"594","line":116,"column":9,"nodeType":"515","messageId":"516","endLine":116,"endColumn":16},{"ruleId":"513","severity":1,"message":"595","line":117,"column":9,"nodeType":"515","messageId":"516","endLine":117,"endColumn":16},{"ruleId":"513","severity":1,"message":"693","line":119,"column":10,"nodeType":"515","messageId":"516","endLine":119,"endColumn":21},{"ruleId":"513","severity":1,"message":"680","line":119,"column":23,"nodeType":"515","messageId":"516","endLine":119,"endColumn":37},{"ruleId":"513","severity":1,"message":"694","line":120,"column":10,"nodeType":"515","messageId":"516","endLine":120,"endColumn":20},{"ruleId":"513","severity":1,"message":"681","line":120,"column":22,"nodeType":"515","messageId":"516","endLine":120,"endColumn":35},{"ruleId":"513","severity":1,"message":"695","line":121,"column":10,"nodeType":"515","messageId":"516","endLine":121,"endColumn":24},{"ruleId":"513","severity":1,"message":"682","line":121,"column":26,"nodeType":"515","messageId":"516","endLine":121,"endColumn":43},{"ruleId":"513","severity":1,"message":"696","line":122,"column":10,"nodeType":"515","messageId":"516","endLine":122,"endColumn":23},{"ruleId":"513","severity":1,"message":"683","line":122,"column":25,"nodeType":"515","messageId":"516","endLine":122,"endColumn":41},{"ruleId":"513","severity":1,"message":"697","line":123,"column":10,"nodeType":"515","messageId":"516","endLine":123,"endColumn":25},{"ruleId":"513","severity":1,"message":"684","line":123,"column":27,"nodeType":"515","messageId":"516","endLine":123,"endColumn":45},{"ruleId":"513","severity":1,"message":"698","line":124,"column":10,"nodeType":"515","messageId":"516","endLine":124,"endColumn":19},{"ruleId":"513","severity":1,"message":"685","line":124,"column":21,"nodeType":"515","messageId":"516","endLine":124,"endColumn":33},{"ruleId":"513","severity":1,"message":"522","line":3,"column":8,"nodeType":"515","messageId":"516","endLine":3,"endColumn":9},{"ruleId":"513","severity":1,"message":"699","line":13,"column":7,"nodeType":"515","messageId":"516","endLine":13,"endColumn":20},{"ruleId":"513","severity":1,"message":"540","line":19,"column":10,"nodeType":"515","messageId":"516","endLine":19,"endColumn":17},{"ruleId":"513","severity":1,"message":"541","line":19,"column":19,"nodeType":"515","messageId":"516","endLine":19,"endColumn":29},{"ruleId":"513","severity":1,"message":"700","line":20,"column":10,"nodeType":"515","messageId":"516","endLine":20,"endColumn":19},{"ruleId":"513","severity":1,"message":"701","line":20,"column":21,"nodeType":"515","messageId":"516","endLine":20,"endColumn":32},{"ruleId":"529","severity":1,"message":"530","line":28,"column":18,"nodeType":"531","messageId":"532","endLine":28,"endColumn":20},{"ruleId":"524","severity":1,"message":"702","line":38,"column":6,"nodeType":"526","endLine":38,"endColumn":16,"suggestions":"703"},{"ruleId":"578","severity":1,"message":"579","line":56,"column":17,"nodeType":"557","endLine":63,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":67,"column":17,"nodeType":"557","endLine":70,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":84,"column":17,"nodeType":"557","endLine":87,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":101,"column":17,"nodeType":"557","endLine":104,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":118,"column":17,"nodeType":"557","endLine":121,"endColumn":18},{"ruleId":"578","severity":1,"message":"579","line":124,"column":17,"nodeType":"557","endLine":131,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":135,"column":17,"nodeType":"557","endLine":138,"endColumn":18},{"ruleId":"578","severity":1,"message":"579","line":142,"column":17,"nodeType":"557","endLine":149,"endColumn":18},{"ruleId":"580","severity":1,"message":"704","line":153,"column":17,"nodeType":"557","endLine":156,"endColumn":18},{"ruleId":"513","severity":1,"message":"705","line":291,"column":9,"nodeType":"515","messageId":"516","endLine":291,"endColumn":16},{"ruleId":"529","severity":1,"message":"530","line":301,"column":17,"nodeType":"531","messageId":"532","endLine":301,"endColumn":19},{"ruleId":"513","severity":1,"message":"706","line":13,"column":7,"nodeType":"515","messageId":"516","endLine":13,"endColumn":38},{"ruleId":"513","severity":1,"message":"707","line":33,"column":7,"nodeType":"515","messageId":"516","endLine":33,"endColumn":42},{"ruleId":"513","severity":1,"message":"708","line":59,"column":7,"nodeType":"515","messageId":"516","endLine":59,"endColumn":49},{"ruleId":"513","severity":1,"message":"709","line":2,"column":8,"nodeType":"515","messageId":"516","endLine":2,"endColumn":19},{"ruleId":"710","severity":1,"message":"711","line":17,"column":5,"nodeType":"712","messageId":"532","endLine":18,"endColumn":23},{"ruleId":"529","severity":1,"message":"713","line":55,"column":16,"nodeType":"531","messageId":"532","endLine":55,"endColumn":18},"@typescript-eslint/no-unused-vars","'i18n' is defined but never used.","Identifier","unusedVar","no-native-reassign",["714"],"no-negated-in-lhs",["715"],"'useState' is defined but never used.","'$' is defined but never used.","'hist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["716"],["717"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Nav' is defined but never used.","'logo_nuage' is defined but never used.","'fetchNavigationBar' is defined but never used.","'sideNavigationData' is defined but never used.","'useEffect' is defined but never used.","'navStyles' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'doctype' is assigned a value but never used.","'setDoctype' is assigned a value but never used.","'roleType' is assigned a value but never used.","'navData' is assigned a value but never used.","'setNavData' is assigned a value but never used.","'navigation' is assigned a value but never used.","'selectedNavKey' is assigned a value but never used.","'onLinkClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"718","text":"719"},"'path' is assigned a value but never used.",{"range":"720","text":"719"},"'setsidebartype' is assigned a value but never used.","'TextField' is defined but never used.","'login' is defined but never used.","'banner_main' is defined but never used.","'textfelidStyle' is assigned a value but never used.","'changeLanguge' is defined but never used.","'t' is assigned a value but never used.","'handleCustomSidebar' is assigned a value but never used.","'language' is assigned a value but never used.","'changeLanguage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'WelcomeHeader' is defined but never used.","'ZoomInIcon' is defined but never used.","'deleteAppraisalByID' is defined but never used.","'delete_appraisal' is defined but never used.","'setLimitPageLength' is assigned a value but never used.","'count' is assigned a value but never used.","'formatDate' is assigned a value but never used.","'setFormatDate' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderByField'. Either include them or remove the dependency array.",["721"],"'updateData' is assigned a value but never used.","'dateNow' is assigned a value but never used.","'timeNow' is assigned a value but never used.","'userName' is assigned a value but never used.","'userId' is assigned a value but never used.","'renderRow' is assigned a value but never used.","'Text' is defined but never used.","'dropdownStyles' is assigned a value but never used.","'i18n' is assigned a value but never used.","'errMsgOwner' is assigned a value but never used.","'setErrMsgOwner' is assigned a value but never used.","'errMsgReviewDate' is assigned a value but never used.","'errMsgAppraisalDate' is assigned a value but never used.","'setErrMsgAppraisalDate' is assigned a value but never used.","'DatePicker' is defined but never used.","'Dropdown' is defined but never used.","'IDatePickerStyles' is defined but never used.","'IDropdownOption' is defined but never used.","'IDropdownStyles' is defined but never used.","'ITextFieldStyles' is defined but never used.","'mergeStyleSets' is defined but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limitStart', 'orderBy', and 'orderByField'. Either include them or remove the dependency array.",["722"],["723"],"'setFirstDayOfWeek' is assigned a value but never used.","'formateType' is assigned a value but never used.","'onChangeFormateType' is assigned a value but never used.","'setLimitStart' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","'limitStart' is assigned a value but never used.",["724"],"'Label' is defined but never used.","'ArrowRightIcon' is defined but never used.","'jobHistory' is defined but never used.","'JobHistoryDetails' is defined but never used.","'employeeDetails' is assigned a value but never used.","'setEmployeeDetails' is assigned a value but never used.","'setLimitStartDevelopment' is assigned a value but never used.","'setOrderByDevelopment' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setTotalCount' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'developmentCount' is assigned a value but never used.","'total_count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByApprisal' and 'filtersById'. Either include them or remove the dependency array.",["725"],"React Hook useEffect has missing dependencies: 'dispatch' and 'filtersById'. Either include them or remove the dependency array.",["726"],"React Hook useEffect has missing dependencies: 'filtersById' and 'orderBy'. Either include them or remove the dependency array.",["727"],"React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLengthDevelopment', 'limitStartDevelopment', 'orderByDevelopment', 'params.appraisalId', and 'params.employeeId'. Either include them or remove the dependency array.",["728"],"'deleteItemJobName' is assigned a value but never used.","'deleteItemId' is assigned a value but never used.","'operations' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById' and 'roleType'. Either include them or remove the dependency array.",["729"],"'add_JobHistory' is defined but never used.","'jobHistoryData' is assigned a value but never used.","'setJobHistoryData' is assigned a value but never used.","'toDate' is assigned a value but never used.","'fromDate' is assigned a value but never used.",["730"],"'onchangeToDate' is assigned a value but never used.","'onchangeFromDate' is assigned a value but never used.","'fetchJobHistory' is defined but never used.","'IconButton' is defined but never used.","'Modal' is defined but never used.","'filtersById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByName' and 'roleType'. Either include them or remove the dependency array.",["731"],"'cancelIcon' is assigned a value but never used.","'iconButtonStyles' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'datePickerStyle' is assigned a value but never used.","'controlClass' is assigned a value but never used.","'onChangeInput' is assigned a value but never used.","'moment' is defined but never used.","'goalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["732"],"'fetchGoalData' is defined but never used.","'setGoalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersByName', 'limitPageLength', 'limit_start', and 'orderBy'. Either include them or remove the dependency array.",["733"],"'setErrMsgOrder' is assigned a value but never used.","'setErrMsgGoal' is assigned a value but never used.","'setErrMsgGoalType' is assigned a value but never used.","'setErrMsgMeasure' is assigned a value but never used.","'setErrMsgWeightage' is assigned a value but never used.","'setErrMsgKra' is assigned a value but never used.","'goalType' is assigned a value but never used.","'onChangeGoalType' is assigned a value but never used.","'getTheme' is defined but never used.","'IIconProps' is defined but never used.","'IModalStyles' is defined but never used.","'goalOptions' is assigned a value but never used.",["734"],"'errMsgOrder' is assigned a value but never used.","'errMsgGoal' is assigned a value but never used.","'errMsgGoalType' is assigned a value but never used.","'errMsgMeasure' is assigned a value but never used.","'errMsgWeightage' is assigned a value but never used.","'errMsgKra' is assigned a value but never used.","'handleSideBar' is assigned a value but never used.","'home_menu' is assigned a value but never used.","'setHomeMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sideMenuLocal'. Either include it or remove the dependency array.",["735"],"The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","'history' is assigned a value but never used.","'menuProps' is assigned a value but never used.","'itemsWithHeading' is assigned a value but never used.","'breadCrumStyle' is assigned a value but never used.","'accessToken' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"736","fix":"737"},{"desc":"736","fix":"738"},[394,409],"",[70,85],{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"741","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"754","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"761","fix":"763"},{"desc":"764","fix":"765"},"Update the dependencies array to be: [dispatch]",{"range":"766","text":"767"},{"range":"768","text":"767"},"Update the dependencies array to be: [limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, dispatch, orderByField]",{"range":"769","text":"770"},"Update the dependencies array to be: [filtersById, limitPageLength, limitStart, orderBy, orderByField]",{"range":"771","text":"772"},{"range":"773","text":"772"},"Update the dependencies array to be: [doctype, limit_start, limit, filterByStatus, dispatch]",{"range":"774","text":"775"},"Update the dependencies array to be: [doctype, limit_start, limit, newRoleType, filtersById, filtersByApprisal]",{"range":"776","text":"777"},"Update the dependencies array to be: [newRoleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",{"range":"778","text":"779"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",{"range":"780","text":"781"},"Update the dependencies array to be: [limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]",{"range":"782","text":"783"},"Update the dependencies array to be: [filtersById, roleType]",{"range":"784","text":"785"},{"range":"786","text":"785"},"Update the dependencies array to be: [filtersByName, roleType]",{"range":"787","text":"788"},"Update the dependencies array to be: [filtersById, limitPageLength, limit_start, orderBy]",{"range":"789","text":"790"},"Update the dependencies array to be: [filtersByName, limitPageLength, limit_start, orderBy]",{"range":"791","text":"792"},{"range":"793","text":"792"},"Update the dependencies array to be: [menuType, sideMenuLocal]",{"range":"794","text":"795"},[2675,2677],"[dispatch]",[3228,3230],[3630,3798],"[limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, filtersByAppraisal, filtersByFormat, dispatch, orderByField]",[1504,1506],"[filtersById, limitPageLength, limitStart, orderBy, orderByField]",[2419,2421],[1795,1840],"[doctype, limit_start, limit, filterByStatus, dispatch]",[4288,4330],"[doctype, limit_start, limit, newRoleType, filtersById, filtersByApprisal]",[4649,4710],"[newRoleType, limitStart, limitPageLength, orderByJobHistory, filtersById, dispatch]",[5424,5461],"[limitStartGoal, limitPageLengthGoal, filtersById, orderBy]",[6299,6336],"[limitStartGoal, limitPageLengthGoal, filtersById, limitStartDevelopment, limitPageLengthDevelopment, orderByDevelopment, params.appraisalId, params.employeeId]",[1758,1760],"[filtersById, roleType]",[1836,1838],[1681,1683],"[filtersByName, roleType]",[2236,2238],"[filtersById, limitPageLength, limit_start, orderBy]",[1899,1901],"[filtersByName, limitPageLength, limit_start, orderBy]",[1652,1654],[1184,1194],"[menuType, sideMenuLocal]"]