[{"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx":"1","C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts":"2","C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx":"3","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx":"4","C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx":"5","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AppraisalDetail\\index.tsx":"6","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Appraisal\\index.tsx":"7","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalSetting\\index.tsx":"8","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateAppraisal\\index.tsx":"9","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddAppraisal\\index.tsx":"10","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx":"11","C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx":"12","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\apprisal.tsx":"13","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\index.tsx":"14","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\userData.tsx":"15","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx":"16","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\WelcomeHeader\\index.tsx":"17","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\employeeList.tsx":"18","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\apprisal.tsx":"19","C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Panel\\index.tsx":"20","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\navigationData.tsx":"21","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\navigation.tsx":"22","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\roleType.tsx":"23","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\roleType.tsx":"24"},{"size":637,"mtime":1610944959237,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1283,"mtime":1611829298311,"results":"28","hashOfConfig":"26"},{"size":212,"mtime":1611031594119,"results":"29","hashOfConfig":"26"},{"size":6488,"mtime":1611830150029,"results":"30","hashOfConfig":"26"},{"size":13292,"mtime":1611834343425,"results":"31","hashOfConfig":"26"},{"size":17435,"mtime":1611834588049,"results":"32","hashOfConfig":"26"},{"size":12592,"mtime":1611840061076,"results":"33","hashOfConfig":"26"},{"size":20662,"mtime":1611840012867,"results":"34","hashOfConfig":"26"},{"size":22849,"mtime":1611839887459,"results":"35","hashOfConfig":"26"},{"size":481,"mtime":1611826788064,"results":"36","hashOfConfig":"26"},{"size":2548,"mtime":1611747265015,"results":"37","hashOfConfig":"26"},{"size":1307,"mtime":1611820869146,"results":"38","hashOfConfig":"26"},{"size":6037,"mtime":1611821865301,"results":"39","hashOfConfig":"26"},{"size":468,"mtime":1611837747887,"results":"40","hashOfConfig":"26"},{"size":832,"mtime":1611030790303,"results":"41","hashOfConfig":"26"},{"size":1957,"mtime":1611835205468,"results":"42","hashOfConfig":"26"},{"size":812,"mtime":1611815621575,"results":"43","hashOfConfig":"26"},{"size":872,"mtime":1611808946343,"results":"44","hashOfConfig":"26"},{"size":1436,"mtime":1611812171372,"results":"45","hashOfConfig":"26"},{"size":443,"mtime":1611820350797,"results":"46","hashOfConfig":"26"},{"size":920,"mtime":1611820283607,"results":"47","hashOfConfig":"26"},{"size":414,"mtime":1611834660039,"results":"48","hashOfConfig":"26"},{"size":108,"mtime":1611827290551,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jqg13p",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\acer\\Documents\\mega-soft\\src\\index.tsx",[],["106","107"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\reportWebVitals.ts",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\App.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Navigation.tsx",["108","109","110","111","112","113","114","115"],"import * as React from \"react\";\r\nimport {\r\n  Nav,\r\n  INavLink,\r\n  INavStyles,\r\n  INavLinkGroup,\r\n} from \"office-ui-fabric-react/lib/Nav\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport { useHistory, matchPath } from \"react-router-dom\";\r\n\r\nimport hrms_logo from \"./assets/img/hrms_logo.gif\";\r\nimport logo_nuage from \"./assets/img/logo_nuage.png\";\r\nimport { fetchNavigationBar } from \"./redux/actions/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"./redux/reducers\";\r\n\r\ninitializeIcons();\r\n\r\nconst navLinkGroups: INavLinkGroup[] = [\r\n  {\r\n    links: [\r\n      {\r\n        name: \"Appraisal\",\r\n        url: \"\",\r\n        key: \"key01\",\r\n        // icon: \"UpgradeAnalysis\",\r\n        links: [\r\n          {\r\n            name: \"Setup\",\r\n            url: \"/\",\r\n            icon: \"Settings\",\r\n            key: \"key02\",\r\n          },\r\n          // {\r\n          //   name: \"Ratings\",\r\n          //   url: \"/apprisal/rating\",\r\n          //   icon: \"6PointStar\",\r\n          //   key: \"key03\",\r\n          // },\r\n          // {\r\n          //   name: \"Periods\",\r\n          //   url: \"/apprisal/periods\",\r\n          //   icon: \"Timer\",\r\n          //   key: \"key04\",\r\n          // },\r\n          {\r\n            name: \"Goal Setting\",\r\n            url: \"/appraisal/goalsetting\",\r\n            icon: \"6PointStar\",\r\n            key: \"key05\",\r\n          },\r\n          // {\r\n          //   name: \"Self Assessment\",\r\n          //   url: \"\",\r\n          //   icon: \"6PointStar\",\r\n          //   key: \"key06\",\r\n          // },\r\n          // {\r\n          //   name: \"Development Plan\",\r\n          //   url: \"/apprisal/developmentPlan\",\r\n          //   icon: \"TestPlan\",\r\n          //   key: \"key07\",\r\n          // },\r\n          // {\r\n          //   name: \"Release Appraisal\",\r\n          //   url: \"/apprisal/releaseApprisal\",\r\n          //   icon: \"ReleaseGate\",\r\n          //   key: \"key08\",\r\n          // },\r\n          // {\r\n          //   name: \"Market Bench Marketing\",\r\n          //   url: \"/apprisal/marketBenchMarketing\",\r\n          //   icon: \"Market\",\r\n          //   key: \"key09\",\r\n          // },\r\n        ],\r\n        isExpanded: true,\r\n      },\r\n      {\r\n        name: \"Manage\",\r\n        url: \"\",\r\n        key: \"key10\",\r\n        // icon:'MedicationAdmin',\r\n        links: [\r\n          {\r\n            name: \"Team Goal Setting\",\r\n            url: \"/manage/teamGoalSetting\",\r\n            icon: \"Settings\",\r\n            key: \"key11\",\r\n          },\r\n          {\r\n            name: \"Team assess\",\r\n            url: \"/manage/teamAssess\",\r\n            icon: \"AssessmentGroup\",\r\n            key: \"key12\",\r\n          },\r\n        ],\r\n        isExpanded: false,\r\n      },\r\n      {\r\n        name: \"Confirmation\",\r\n        url: \"\",\r\n        key: \"key13\",\r\n        expandAriaLabel: \"Expand Admin section\",\r\n        collapseAriaLabel: \"Collapse admin section\",\r\n        links: [\r\n          {\r\n            name: \"Confirmation Status\",\r\n            url: \"/confirmation/status\",\r\n            icon: \"SplitObject\",\r\n            key: \"key14\",\r\n          },\r\n          {\r\n            name: \"Release\",\r\n            url: \"/confirmation/release\",\r\n            key: \"key15\",\r\n            icon: \"ReleaseGate\",\r\n          },\r\n          {\r\n            name: \"Approval\",\r\n            url: \"/confirmation/approval\",\r\n            key: \"key16\",\r\n            icon: \"DocumentApproval\",\r\n          },\r\n          {\r\n            name: \"Letter\",\r\n            url: \"/confirmation/letter\",\r\n            key: \"key17\",\r\n            icon: \"DietPlanNotebook\",\r\n          },\r\n          {\r\n            name: \"Probation Letter\",\r\n            url: \"/confirmation/probationLetter\",\r\n            key: \"key18\",\r\n            icon: \"QuickNote\",\r\n          },\r\n        ],\r\n        isExpanded: false,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navStyles: Partial<INavStyles> = {\r\n  root: {\r\n    // overflowY: \"auto\",\r\n    // width: 208,\r\n    height: \"100%\",\r\n  },\r\n  link: {\r\n    width: \"200px\",\r\n  },\r\n  linkText: {\r\n    color: \"#FFF\",\r\n    // fontSize: 12,\r\n    selectors: {\r\n      \"&:hover\": {\r\n        color: \"#FFF\",\r\n      },\r\n    },\r\n  },\r\n  chevronIcon: {\r\n    color: \"#FFF\",\r\n  },\r\n  compositeLink: {\r\n    selectors: {\r\n      \"&:hover\": {\r\n        \".ms-Button\": {\r\n          background: \"#29416f\",\r\n        },\r\n        \".ms-Nav-linkText\": {\r\n          // color: \"#FFF\", // your real styling here\r\n        },\r\n        \".ms-Icon\": {\r\n          color: \"#FFF\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nfunction Navigation() {\r\n  // const { children } = props;\r\n  const dispatch = useDispatch();\r\n  const [doctype, setDoctype] = useState(\"EmployeeAppraisal\");\r\n  const roleType = useSelector((state: RootState) => state.roleType.roleType);\r\n  console.log(\"roleType?????=>\", roleType);\r\n\r\n  const navigation = useSelector(\r\n    (state: RootState) => state.navigationData.navigationData\r\n  );\r\n  // console.log(\"navigation data=>\", navigation.links);\r\n\r\n  useEffect((): void => {\r\n    dispatch(fetchNavigationBar(doctype, roleType ? roleType : \"Employee\"));\r\n  }, [doctype, roleType]);\r\n\r\n  let history = useHistory();\r\n  const [selectedNavKey, setSelectedNavKey] = React.useState(\"\");\r\n  const onLinkClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\r\n    setSelectedNavKey(item?.key || \"\");\r\n  };\r\n  React.useEffect(() => {\r\n    navLinkGroups[0].links.map((item) => {\r\n      if (item.links) {\r\n        item.links.map((subItem) => {\r\n          if (\r\n            matchPath(history.location.pathname, {\r\n              path: subItem.url,\r\n              exact: true,\r\n            })\r\n          ) {\r\n            setSelectedNavKey(subItem?.key || \"\");\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        if (\r\n          matchPath(history.location.pathname, {\r\n            path: item.url,\r\n            exact: true,\r\n          })\r\n        ) {\r\n          setSelectedNavKey(item?.key || \"\");\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }, [history.location.pathname]);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"main-logo\">\r\n        <img src={logo_nuage} />\r\n      </div>\r\n      <div className=\"footer-logo\">\r\n        <img src={hrms_logo} />\r\n      </div>\r\n      <Nav\r\n        onLinkClick={onLinkClick}\r\n        selectedKey={selectedNavKey}\r\n        ariaLabel=\"Nav basic example\"\r\n        styles={navStyles}\r\n        groups={navigation.links}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AppraisalDetail\\index.tsx",["116","117","118","119"],"import {\r\n  Checkbox,\r\n  DatePicker,\r\n  Dropdown,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IDatePickerStyles,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  ITextFieldStyles,\r\n  Label,\r\n  mergeStyleSets,\r\n  PrimaryButton,\r\n  Separator,\r\n  Stack,\r\n  TextField,\r\n} from \"office-ui-fabric-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport {\r\n  fetchAppraisalData,\r\n  fetchAppraisalDataById,\r\n} from \"../../redux/actions\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport Header from \"../../Header\";\r\n\r\ninterface ParamTypes {\r\n  appraisalId: string;\r\n}\r\n\r\nconst stackTokens = { childrenGap: 10 };\r\n\r\nconst textfelidStyle: Partial<ITextFieldStyles> = {\r\n  root: {\r\n    \".ms-TextField-wrapper\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n    \".ms-TextField-fieldGroup fieldGroup-195\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n};\r\n\r\nconst formateTypeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Sales Employees\" },\r\n  { key: \"key3\", text: \"HR\" },\r\n  { key: \"key4\", text: \"Management\" },\r\n];\r\n\r\nconst controlClass = mergeStyleSets({\r\n  control: {\r\n    // margin: \"0 0 15px 0\",\r\n    // maxWidth: \"150px\",\r\n  },\r\n});\r\n\r\nconst reviewFrequencyOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Monthly\" },\r\n  { key: \"key2\", text: \"Yearly\" },\r\n];\r\n\r\nconst typeOptions: IDropdownOption[] = [\r\n  { key: \"key1\", text: \"Annual Appraisal\" },\r\n  { key: \"key2\", text: \"Quarterly Appraisal\" },\r\n];\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n  dropdown: {\r\n    width: 170,\r\n    border: \"0px\",\r\n  },\r\n};\r\n\r\nconst datePickerStyle: Partial<IDatePickerStyles> = {\r\n  icon: {\r\n    color: \"rgb(111 144 220)\",\r\n  },\r\n};\r\n\r\nfunction AppraisalDetail(props: any) {\r\n  const params = useParams<ParamTypes>();\r\n\r\n  const [limitStart] = useState(0);\r\n  const [limitPageLength] = useState(5);\r\n  const [orderBy] = useState(\"asc\");\r\n  const [orderByField] = useState(\"id\");\r\n  const [filtersById] = useState(params.appraisalId);\r\n\r\n  const [appraisalDetail, setAppraisalDetail]: any = useState({});\r\n\r\n  // const rolesOption: IDropdownOption[] = [\r\n  //   { key: \"key1\", text: \"Employee\" },\r\n  //   { key: \"key2\", text: \"Manager\" },\r\n  //   { key: \"key3\", text: \"HR content\" },\r\n  // ];\r\n\r\n  // const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\r\n  //   key: \"\",\r\n  //   text: \"\",\r\n  // });\r\n\r\n  // const handleRoles = (\r\n  //   ev?: React.FormEvent<HTMLDivElement>,\r\n  //   item?: IDropdownOption\r\n  // ): void => {\r\n  //   setReviewSearch(\r\n  //     item || {\r\n  //       key: \"\",\r\n  //       text: \"\",\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  const dropdownStyles: Partial<IDropdownStyles> = {\r\n    dropdown: {\r\n      width: 170,\r\n      border: \"0px\",\r\n    },\r\n  };\r\n\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"id\", \"like\", filtersById]);\r\n    }\r\n    fetchAppraisalDataById(\r\n      limitStart,\r\n      limitPageLength,\r\n      `${orderByField} ${orderBy}`,\r\n      JSON.stringify(filters)\r\n    )((response: any) => {\r\n      //   console.log(\"response=>\", response.payload);\r\n      setAppraisalDetail(response.payload[0]);\r\n    });\r\n  }, []);\r\n\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      marginTop: \"-1rem\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n\r\n  const _onBreadcrumbItemClicked = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\" },\r\n    {\r\n      text: \"Appraisal\",\r\n      key: \"d2\",\r\n      isCurrentItem: true,\r\n      as: \"h4\",\r\n      onClick: _onBreadcrumbItemClicked,\r\n    },\r\n    { text: \"Appraisal Details\", key: \"d3\", as: \"h4\" },\r\n  ];\r\n\r\n  console.log(\"local data data=>\", appraisalDetail);\r\n\r\n  const renderData = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-container\">\r\n          <div className=\"row\">\r\n            <TextField\r\n              disabled={true}\r\n              placeholder=\"ID\"\r\n              value={appraisalDetail.id}\r\n              name=\"id\"\r\n              label=\"Id\"\r\n              // onChange={onChangeInput}\r\n              className=\"flexGrowTextInput\"\r\n            />\r\n            <TextField\r\n              disabled={true}\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              value={appraisalDetail.appraisal_description}\r\n              // styles={textfelidStyle}\r\n              className=\"flexGrow\"\r\n              name=\"appraisal_description\"\r\n              // onChange={onChangeInput}\r\n            />\r\n          </div>\r\n          {/* <div className=\"input-form\"></div> */}\r\n          <div className=\"row\">\r\n            <DatePicker\r\n              disabled={true}\r\n              label=\"Review From\"\r\n              // value={updateData.review_from}\r\n              className={`${controlClass.control} flexGrow`}\r\n              // firstDayOfWeek={firstDayOfWeek}\r\n              // strings={DayPickerStrings}\r\n              value={new Date(appraisalDetail.review_from)}\r\n              // onSelectDate={(date) =>\r\n              //   setUpdateData({ ...updateData, review_from: date })\r\n              // }\r\n              placeholder=\"Select a date\"\r\n              ariaLabel=\"Select a date\"\r\n              styles={datePickerStyle}\r\n            />\r\n            <DatePicker\r\n              disabled={true}\r\n              label=\"Appraisal To\"\r\n              value={new Date(appraisalDetail.appraisal_to)}\r\n              className={`${controlClass.control} flexGrow`}\r\n              // firstDayOfWeek={firstDayOfWeek}\r\n              // strings={DayPickerStrings}\r\n              // onSelectDate={(date) =>\r\n              //   setUpdateData({ ...updateData, appraisal_to: date })\r\n              // }\r\n              styles={datePickerStyle}\r\n              placeholder=\"Select a date\"\r\n              ariaLabel=\"Select a date\"\r\n            />\r\n            <Dropdown\r\n              disabled={true}\r\n              selectedKey={\r\n                reviewFrequencyOptions.find(\r\n                  (item) => item.text === appraisalDetail.review_frequency\r\n                )?.key\r\n              }\r\n              label=\"Review Frequency\"\r\n              placeholder=\"Select\"\r\n              className=\"flexGrow\"\r\n              // onChange={(ev, item) =>\r\n              //   setUpdateData({ ...updateData, review_frequency: item?.text })\r\n              // }\r\n              options={reviewFrequencyOptions}\r\n              // styles={dropdownStyles}\r\n            />\r\n          </div>\r\n          <Dropdown\r\n            disabled={true}\r\n            selectedKey={\r\n              typeOptions.find((item) => item.text === appraisalDetail.type)\r\n                ?.key\r\n            }\r\n            label=\"Type\"\r\n            placeholder=\"Select Type\"\r\n            className=\"type-input\"\r\n            options={typeOptions}\r\n            // onChange={(ev, item) =>\r\n            //   setUpdateData({ ...appraisalDetail, type: item?.text })\r\n            // }\r\n            // styles={typeDropdownStyles}\r\n          />\r\n          <Dropdown\r\n            disabled={true}\r\n            selectedKey={\r\n              formateTypeOptions.find(\r\n                (item) => item.text === appraisalDetail.format_type\r\n              )?.key\r\n            }\r\n            label=\"Format Type\"\r\n            className=\"type-input\"\r\n            // onChange={(ev, item) =>\r\n            //   setUpdateData({ ...updateData, format_type: item?.text })\r\n            // }\r\n            placeholder=\"Select Format Type\"\r\n            options={formateTypeOptions}\r\n            // styles={typeDropdownStyles}\r\n          />\r\n          <TextField\r\n            disabled={true}\r\n            label=\"Owner\"\r\n            placeholder=\"Owner\"\r\n            value={appraisalDetail.appraisal_owner}\r\n            styles={textfelidStyle}\r\n            name=\"appraisal_owner\"\r\n          />\r\n          <Separator />\r\n          <div className=\"rowCheckBox\">\r\n            <div>\r\n              <Label>KRA Settings Tabs: </Label>\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Job History\"}\r\n                title={\"Competencies\"}\r\n                checked={appraisalDetail.kra_settings_tab_competencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_competencies\"\r\n              />\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={appraisalDetail.kra_settings_tab_goals}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_goals\"\r\n              />\r\n              <Checkbox\r\n                disabled={true}\r\n                label={\"Training/ Development Plan\"}\r\n                title={\"Development Plans\"}\r\n                checked={appraisalDetail.kra_settings_tab_development_plan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_development_plan\"\r\n              />\r\n              {/* <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={updateData.kra_settings_tab_summary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"kra_settings_tab_summary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              {/* <Label>Assessment Tabs: </Label>\r\n              <Checkbox\r\n                label={\"Goals\"}\r\n                title={\"Goals\"}\r\n                checked={updateData.assessment_tab_goals}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_goals\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Competencies\"}\r\n                title={\"Competencies\"}\r\n                checked={updateData.assessment_tab_competencies}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_competencies\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Development Plans\"}\r\n                title={\"Development Plans\"}\r\n                checked={updateData.assessment_tab_development_plan}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_development_plan\"\r\n                onChange={onChangeCheckbox}\r\n              />\r\n              <Checkbox\r\n                label={\"Summary\"}\r\n                title={\"Summary\"}\r\n                checked={updateData.assessment_tab_summary}\r\n                className=\"flexGrowCheckBox\"\r\n                name=\"assessment_tab_summary\"\r\n                onChange={onChangeCheckbox}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n          <Stack\r\n            horizontal\r\n            tokens={stackTokens}\r\n            style={{ justifyContent: \"flex-end\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            ></div>\r\n            <div\r\n              style={{\r\n                marginTop: \"15px\",\r\n              }}\r\n            >\r\n              <PrimaryButton\r\n                text=\"Back\"\r\n                allowDisabledFocus\r\n                disabled={false}\r\n                onClick={() => {\r\n                  history.push(\"/\");\r\n                }}\r\n                checked={false}\r\n              />\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"view\">\r\n      <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            {/* <Dropdown\r\n              selectedKey={\"key1\"}\r\n              options={rolesOption}\r\n              onChange={handleRoles}\r\n              className=\"rolesDropDown\"\r\n              styles={dropdownStyles}\r\n              style={{ marginLeft: \"2rem\" }}\r\n            /> */}\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader>\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderData()} </div>\r\n        <div className=\"right-container\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(AppraisalDetail);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\Appraisal\\index.tsx",["120","121","122","123","124","125","126","127","128","129"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  DetailsList,\r\n  DetailsRow,\r\n  IColumn,\r\n  IDetailsListProps,\r\n  IDetailsListStyles,\r\n  IDetailsRowStyles,\r\n} from \"office-ui-fabric-react/lib/DetailsList\";\r\nimport \"office-ui-fabric-react/dist/css/fabric.css\";\r\nimport {\r\n  PrimaryButton,\r\n  getTheme,\r\n  TextField,\r\n  Dropdown,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  Link,\r\n  Spinner,\r\n  SpinnerSize,\r\n} from \"office-ui-fabric-react\";\r\nimport {\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\r\nimport Header from \"../../Header\";\r\nimport Panel from \"../../components/Panel\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport { Pagination } from \"@uifabric/experiments\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport \"./style.css\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { fetchAppraisalData } from \"../../redux/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { roleType } from \"../../redux/actions/roleType\";\r\n\r\nfunction Appraisal(props: any) {\r\n  const [hasMoreRecord, setHasMoreRecord] = useState(true);\r\n  const [limitStart, setLimitSTart] = useState(0);\r\n  const [limitPageLength, setLimitPageLength] = useState(5);\r\n  const [orderBy, setOrderBy] = useState(\"asc\");\r\n  const [orderByField, setOrderByField] = useState(\"id\");\r\n  const [filtersById, setFiltersById] = useState(\"\");\r\n  const [filtersByDescription, setFiltersByDescription] = useState(\"\");\r\n  const [filtersByReviewFreq, setFiltersByReviewFreq] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const appraisal = useSelector((state: RootState) => state.appraisal);\r\n  const { appraisalList, isLoading, count, total_count } = appraisal;\r\n\r\n  // console.log(\"data apppp=>\", appraisalList);\r\n  useEffect((): void => {\r\n    const filters = [];\r\n    if (filtersById) {\r\n      filters.push([\"id\", \"like\", filtersById]);\r\n    }\r\n    if (filtersByDescription) {\r\n      filters.push([\"description\", \"like\", filtersByDescription]);\r\n    }\r\n    if (filtersByReviewFreq) {\r\n      filters.push([\"review_frequency\", \"=\", filtersByReviewFreq]);\r\n    }\r\n    dispatch(\r\n      fetchAppraisalData(\r\n        limitStart,\r\n        limitPageLength,\r\n        `${orderByField} ${orderBy}`,\r\n        JSON.stringify(filters)\r\n      )\r\n    );\r\n    // fetchAppraisalData(\r\n    //   limitStart,\r\n    //   limitPageLength,\r\n    //   `${orderByField} ${orderBy}`,\r\n    //   JSON.stringify(filters)\r\n    // ).then((response: any) => {\r\n    //   // setList(response.data);\r\n    //   // if (response.data.length == limitPageLength) {\r\n    //   //   setHasMoreRecord(true);\r\n    //   // } else {\r\n    //   //   setHasMoreRecord(false);\r\n    //   // }\r\n    // })\r\n    // console.log(\"filters==>\", filters)\r\n  }, [\r\n    limitStart,\r\n    limitPageLength,\r\n    orderBy,\r\n    filtersById,\r\n    filtersByDescription,\r\n    filtersByReviewFreq,\r\n  ]);\r\n\r\n  // const params = useParams<ParamTypes>();\r\n  // console.log(\"id => \", params.id);\r\n\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: \"01\",\r\n      name: \"ID\",\r\n      fieldName: \"id\",\r\n      minWidth: 50,\r\n      maxWidth: 100,\r\n      isSorted: true,\r\n      className: \"idColumn\",\r\n      isSortedDescending: false,\r\n      sortAscendingAriaLabel: \"Sorted A to Z\",\r\n      isRowHeader: true,\r\n      onColumnClick: _onColumnClick,\r\n      sortDescendingAriaLabel: \"Sorted Z to A\",\r\n      isResizable: false,\r\n    },\r\n    // {\r\n    //   key: \"03\",\r\n    //   name: \"Name\",\r\n    //   fieldName: \"name\",\r\n    //   minWidth: 10,\r\n    //   maxWidth: 110,\r\n    //   isSortedDescending: false,\r\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\r\n    //   onColumnClick: _onColumnClick,\r\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\r\n    //   isResizable: false,\r\n    // },\r\n    {\r\n      key: \"04\",\r\n      name: \"Description\",\r\n      fieldName: \"appraisal_description\",\r\n      minWidth: 100,\r\n      maxWidth: 250,\r\n      isSortedDescending: false,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n    },\r\n    {\r\n      key: \"05\",\r\n      name: \"Review From\",\r\n      fieldName: \"review_from\",\r\n      minWidth: 50,\r\n      maxWidth: 180,\r\n      isRowHeader: true,\r\n      sortDescendingAriaLabel: \"Sorted Z to A\",\r\n      isResizable: false,\r\n    },\r\n    {\r\n      key: \"06\",\r\n      name: \"Appraisal To\",\r\n      fieldName: \"appraisal_to\",\r\n      minWidth: 50,\r\n      maxWidth: 180,\r\n      isSortedDescending: false,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n    },\r\n    // {\r\n    //   key: \"07\",\r\n    //   name: \"Owner\",\r\n    //   fieldName: \"owner\",\r\n    //   minWidth: 10,\r\n    //   maxWidth: 170,\r\n    //   isSortedDescending: false,\r\n    //   sortAscendingAriaLabel: \"Sorted A to Z\",\r\n    //   isRowHeader: true,\r\n    //   onColumnClick: _onColumnClick,\r\n    //   sortDescendingAriaLabel: \"Sorted Z to A\",\r\n    //   isResizable: false,\r\n    // },\r\n    {\r\n      key: \"08\",\r\n      name: \"Review Frequency\",\r\n      fieldName: \"review_frequency\",\r\n      minWidth: 50,\r\n      maxWidth: 160,\r\n      isSortedDescending: false,\r\n      isRowHeader: true,\r\n      isResizable: false,\r\n    },\r\n    {\r\n      key: \"02\",\r\n      name: \"Action\",\r\n      fieldName: \"action\",\r\n      minWidth: 110,\r\n      maxWidth: 110,\r\n      isRowHeader: true,\r\n      onRender: (item) => (\r\n        <div>\r\n          <Link\r\n            className=\"link-icons\"\r\n            onClick={() => {\r\n              viewAppraisal(item);\r\n            }}\r\n          >\r\n            <VisibilityIcon style={{ color: \"#344f84\" }} />\r\n          </Link>\r\n          <Link\r\n            className=\"link-icons\"\r\n            onClick={() => {\r\n              updateAppriasal(item);\r\n            }}\r\n          >\r\n            <CreateIcon style={{ color: \"#344f84\" }} />\r\n          </Link>\r\n          <Link\r\n            className=\"link-icons\"\r\n            onClick={() => {\r\n              console.log(\"delete=>\", item);\r\n            }}\r\n          >\r\n            <DeleteIcon style={{ color: \"#FF0000\" }} />\r\n          </Link>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const viewAppraisal = (item: any) => {\r\n    history.push(`/appraisal/view/${item.id}`);\r\n  };\r\n\r\n  const updateAppriasal = (item: any) => {\r\n    // localStorage.setItem('apprisal_data', JSON.stringify(item));\r\n    history.push(`/appraisal/update/${item.id}`);\r\n  };\r\n\r\n  const _onBreadcrumbItemClicked = () => {};\r\n  const itemsWithHeading: IBreadcrumbItem[] = [\r\n    { text: \"Performance\", key: \"d1\", onClick: _onBreadcrumbItemClicked },\r\n    { text: \"Appraisal\", key: \"d2\", isCurrentItem: true, as: \"h4\" },\r\n  ];\r\n\r\n  const handleSearchClick = () => {\r\n    setFiltersById(`${searchById}%`);\r\n    setFiltersByDescription(`${searchByDescription}%`);\r\n    setFiltersByReviewFreq(`${reviewSearch?.text || \"\"}`);\r\n    setLimitSTart(0);\r\n    setCurentPage(0);\r\n  };\r\n\r\n  function _onColumnClick(\r\n    ev?: React.MouseEvent<HTMLElement>,\r\n    column?: IColumn\r\n  ): void {\r\n    // console.log('column', column)\r\n    if (column?.fieldName === orderByField) {\r\n      if (orderBy === \"asc\") {\r\n        setOrderBy(\"desc\");\r\n      } else {\r\n        setOrderBy(\"asc\");\r\n      }\r\n    } else {\r\n      setOrderByField(column?.fieldName || \"id\");\r\n    }\r\n  }\r\n\r\n  const theme = getTheme();\r\n\r\n  const controlStyles = {\r\n    root: {\r\n      margin: \"0 10px 20px 0\",\r\n      maxWidth: \"300px\",\r\n      // borderRadius: \"20px\",\r\n    },\r\n\r\n    wrapper: {\r\n      \".ms-TextField-fieldGroup fieldGroup-91\": {\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const [currentPage, setCurentPage] = useState(0);\r\n\r\n  const [searchById, setSearchById] = useState(\"\");\r\n  const [searchByDescription, setSearchByDescription] = useState(\"\");\r\n  const [appraisalToSearch, setAppraisalToSearch] = useState(\"\");\r\n  const [role, setRole] = useState<IDropdownOption>({\r\n    key: \"employee\",\r\n    text: \"\",\r\n  });\r\n\r\n  const [reviewSearch, setReviewSearch] = useState<IDropdownOption>({\r\n    key: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const itemSearch = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    setSearchById(text || \"\");\r\n    // if(text === \"\" && searchById !== \"\") {\r\n    //   setFiltersById(\"\");\r\n    //   setLimitSTart(0);\r\n    //   setCurentPage(0)\r\n    // }\r\n  };\r\n\r\n  const itemSearchDescription = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    setSearchByDescription(text || \"\");\r\n    // if(text === \"\" && searchById !== \"\") {\r\n    //   setFiltersById(\"\");\r\n    //   setLimitSTart(0);\r\n    //   setCurentPage(0)\r\n    // }\r\n  };\r\n\r\n  const itemSearchReview = (\r\n    ev?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setReviewSearch(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRoles = (\r\n    ev?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setRole(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const itemSearchApprisalTo = (\r\n    ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text?: string\r\n  ): void => {\r\n    setAppraisalToSearch(text || \"\");\r\n    // if(text === \"\" && searchById !== \"\") {\r\n    //   setFiltersById(\"\");\r\n    //   setLimitSTart(0);\r\n    //   setCurentPage(0)\r\n    // }\r\n  };\r\n\r\n  const listStyle: Partial<IDetailsListStyles> = {\r\n    headerWrapper: {\r\n      \".root-106\": {\r\n        backgroundColor: \"#344f84\",\r\n      },\r\n    },\r\n    root: {\r\n      backgroundColor: \"#344f84\",\r\n      \".ms-Viewport\": {\r\n        minWidth: \"200px\",\r\n      },\r\n    },\r\n    contentWrapper: {\r\n      \".ms-FocusZone css-61 ms-DetailsHeader root-104\": {\r\n        paddingTop: \"0px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const searchOptions: IDropdownOption[] = [\r\n    { key: \"key1\", text: \"\" },\r\n    { key: \"key2\", text: \"Yearly\" },\r\n    { key: \"key3\", text: \"Monthly\" },\r\n  ];\r\n\r\n  // const rolesOption: IDropdownOption[] = [\r\n  //   { key: \"employee\", text: \"Employee\" },\r\n  //   { key: \"manager\", text: \"Manager\" },\r\n  //   { key: \"hrContact\", text: \"HR Contact\" },\r\n  // ];\r\n\r\n  const dropdownStyles: Partial<IDropdownStyles> = {\r\n    dropdown: {\r\n      width: 170,\r\n      border: \"0px\",\r\n    },\r\n  };\r\n\r\n  const dateNow = new Date().toLocaleDateString();\r\n  const timeNow = new Date().toLocaleTimeString();\r\n  const history = useHistory();\r\n  const userName = props.userData.UserData[0].name;\r\n  const userId = props.userData.UserData[0].id;\r\n\r\n  const breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n    root: {\r\n      margin: \"0px\",\r\n      padding: \"0px\",\r\n      marginTop: \"-10px\",\r\n    },\r\n    itemLink: {\r\n      fontSize: \"20px\",\r\n    },\r\n  };\r\n  const renderRow: IDetailsListProps[\"onRenderRow\"] = (props) => {\r\n    const customStyles: Partial<IDetailsRowStyles> = {};\r\n    if (props) {\r\n      if (props.itemIndex % 2 === 0) {\r\n        // Every other row renders with a different background color\r\n        customStyles.root = { backgroundColor: theme.palette.themeLighterAlt };\r\n      }\r\n\r\n      return <DetailsRow {...props} styles={customStyles} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderNoData = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n          marginTop: \"20px\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <PrimaryButton\r\n          text=\"New Appraisal\"\r\n          iconProps={{ iconName: \"Add\" }}\r\n          allowDisabledFocus\r\n          onClick={() => {\r\n            history.push(\"/addApprisal\");\r\n          }}\r\n          style={{ marginLeft: \"auto\", alignSelf: \"center\" }}\r\n          disabled={false}\r\n          checked={false}\r\n        />\r\n        <Text\r\n          style={{\r\n            color: \"#aaa\",\r\n            textAlign: \"center\",\r\n            padding: 50,\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          No Appraisal Data Found\r\n        </Text>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // console.log(\"appraisal data=>>\", appraisalList);\r\n\r\n  const renderData = () => {\r\n    return isLoading ? (\r\n      <Spinner\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          padding: \"50px\",\r\n          color: \"#344f84\",\r\n        }}\r\n        size={SpinnerSize.large}\r\n      />\r\n    ) : appraisalList.length === 0 ? (\r\n      renderNoData()\r\n    ) : (\r\n      <React.Fragment>\r\n        <div className=\"searchBarClass\">\r\n          <TextField\r\n            label=\"ID\"\r\n            onChange={itemSearch}\r\n            placeholder=\"Enter ID\"\r\n            className=\"searchInput\"\r\n            styles={controlStyles}\r\n          />\r\n          <TextField\r\n            label=\"Description\"\r\n            className=\"searchInput\"\r\n            onChange={itemSearchDescription}\r\n            placeholder=\"Enter Description\"\r\n            styles={controlStyles}\r\n          />\r\n          <Dropdown\r\n            label=\"Review Frequency\"\r\n            placeholder=\"Select\"\r\n            options={searchOptions}\r\n            className=\"reviewFrequency\"\r\n            onChange={itemSearchReview}\r\n            style={{ padding: \"0px\" }}\r\n            styles={dropdownStyles}\r\n          />\r\n          <PrimaryButton\r\n            iconProps={{ iconName: \"Search\" }}\r\n            onClick={handleSearchClick}\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              alignSelf: \"center\",\r\n              marginTop: \"8px\",\r\n            }}\r\n          />\r\n          <PrimaryButton\r\n            text=\"New Appraisal\"\r\n            iconProps={{ iconName: \"Add\" }}\r\n            allowDisabledFocus\r\n            onClick={() => {\r\n              history.push(\"/addApprisal\");\r\n            }}\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              alignSelf: \"center\",\r\n              marginTop: \"8px\",\r\n            }}\r\n            disabled={false}\r\n            checked={false}\r\n          />\r\n          {/* <TextField\r\n                onChange={itemSearchApprisalTo}\r\n                placeholder= \"Appraisal To\"\r\n                styles={controlStyles}\r\n              /> */}\r\n        </div>\r\n        <DetailsList\r\n          styles={listStyle}\r\n          items={appraisalList}\r\n          className=\"detail-list\"\r\n          onRenderRow={renderRow}\r\n          columns={columns}\r\n          selectionMode={0}\r\n        />\r\n        <div className=\"pagination-style\">\r\n          <Pagination\r\n            format=\"buttons\"\r\n            // nextPageIconProps={{iconName: \"CaretRightSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\r\n            // previousPageIconProps={{iconName: \"CaretLeftSolid8\",style:{color:\"red\", fontSize:\"25px\"}}}\r\n            selectedPageIndex={currentPage}\r\n            // pageCount={hasMoreRecord ? currentPage + 2 : currentPage + 1}\r\n            pageCount={Math.ceil(total_count / limitPageLength)}\r\n            // itemsCount\r\n            itemsPerPage={limitPageLength}\r\n            // itemsPerPage={appraisalList.count}\r\n            // pageRangeDisplayed= {currentPage}\r\n            // totalItemCount={limitPageLength * 2}\r\n            totalItemCount={total_count}\r\n            // numberOfPageButton={2}\r\n            // lastPageIconProps={{\r\n            //   iconName: \"DoubleChevronRight\",\r\n            //   style: { display: \"none\" },\r\n            // }}\r\n            // firstPageIconProps={{\r\n            //   iconName: \"ChevronRight\",\r\n            //   style: { display: \"none\" },\r\n            // }}\r\n            onPageChange={(page) => {\r\n              setLimitSTart(page * limitPageLength);\r\n              setCurentPage(page);\r\n            }}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // console.log(\"data=>\", appraisal);\r\n  return (\r\n    <div className=\"view\">\r\n      <WelcomeHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Text style={{ marginRight: \"10px\" }}>\r\n              Welcome {userName} ({userId})\r\n            </Text>\r\n            {/* <Dropdown\r\n              options={rolesOption}\r\n              onChange={handleRoles}\r\n              selectedKey={role ? role.key : \"employee\"}\r\n              // defaultSelectedKey={roles ? roles.key : \"employee\"}\r\n              className=\"rolesDropDown\"\r\n              styles={dropdownStyles}\r\n              style={{ marginLeft: \"2rem\" }}\r\n            /> */}\r\n            <Text style={{ marginRight: \"5px\", marginLeft: \"2rem\" }}>\r\n              Logged In:\r\n            </Text>\r\n            <Text style={{ marginRight: \"5px\" }}>\r\n              {dateNow} {timeNow}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n      </WelcomeHeader>\r\n      <Header item={itemsWithHeading} styles={breadCrumStyle} />\r\n      <div className=\"content\">\r\n        <div className=\"data-container\">{renderData()}</div>\r\n        <div className=\"right-container\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default connect((state) => ({\r\n  ...state,\r\n}))(Appraisal);\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\GoalSetting\\index.tsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\UpdateAppraisal\\index.tsx",["151","152","153","154","155","156"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Views\\AddAppraisal\\index.tsx",["157","158","159","160","161"],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\Header.tsx",["162","163","164"],"import * as React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  IBreadcrumbItem,\r\n  IBreadcrumbStyles,\r\n  IDividerAsProps,\r\n} from \"office-ui-fabric-react/lib/Breadcrumb\";\r\nimport { IContextualMenuProps } from \"office-ui-fabric-react\";\r\nimport { TooltipHost } from \"office-ui-fabric-react/lib/Tooltip\";\r\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\r\nimport \"./Header.css\";\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"action01\",\r\n      text: \"Action 1\",\r\n      //   iconProps: { iconName: 'Mail' },\r\n    },\r\n    {\r\n      key: \"action02\",\r\n      text: \"Action 2\",\r\n      //   iconProps: { iconName: 'Calendar' },\r\n    },\r\n  ],\r\n};\r\nfunction _onBreadcrumbItemClicked(\r\n  ev?: React.MouseEvent<HTMLElement>,\r\n  item?: IBreadcrumbItem\r\n): void {\r\n  console.log(`Breadcrumb item with key \"${item?.key}\" has been clicked.`);\r\n}\r\nconst itemsWithHeading: IBreadcrumbItem[] = [\r\n  {\r\n    text: \"Performance\",\r\n    key: \"Files\",\r\n    onClick: _onBreadcrumbItemClicked,\r\n    href: \"\",\r\n  },\r\n  { text: \"Appraisal\", key: \"d1\", isCurrentItem: true },\r\n];\r\nfunction _getCustomOverflowIcon(): JSX.Element {\r\n  return <Icon iconName={\"ChevronDown\"} />;\r\n}\r\nfunction _getCustomDivider(dividerProps: IDividerAsProps): JSX.Element {\r\n  const tooltipText = dividerProps.item ? dividerProps.item.text : \"\";\r\n  return (\r\n    <TooltipHost\r\n      content={`Show ${tooltipText} contents`}\r\n      calloutProps={{ gapSpace: 0 }}\r\n    >\r\n      <span aria-hidden=\"true\" style={{ cursor: \"pointer\", padding: 5 }}>\r\n        /\r\n      </span>\r\n    </TooltipHost>\r\n  );\r\n}\r\n\r\nconst breadCrumStyle: Partial<IBreadcrumbStyles> = {\r\n  root: {\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    marginTop: \"-10px\",\r\n  },\r\n  itemLink: {\r\n    fontSize: \"22px\",\r\n  },\r\n};\r\n\r\nfunction Header(props: { item?: IBreadcrumbItem[]; styles: any }) {\r\n  // const _alertClicked = () => {\r\n  //   console.log(\"clicked==>\")\r\n  // }\r\n  // const horizontalStackProps: IStackProps = {\r\n  //     horizontal: true,\r\n  //     tokens: { childrenGap: 100, },\r\n  // };\r\n  // const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Breadcrumb\r\n        // items={itemsWithHeading}\r\n        items={props.item || []}\r\n        styles={props.styles}\r\n        maxDisplayedItems={5}\r\n        ariaLabel=\"With custom rendered divider and overflow icon\"\r\n        dividerAs={_getCustomDivider}\r\n        onRenderOverflowIcon={_getCustomOverflowIcon}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\apprisal.tsx",["165"],"import axios from \"axios\";\r\nimport accessToken from \"../../apiBase.json\";\r\n\r\nexport const addApprisal = (item: any) => {\r\n  return {\r\n    type: \"ADD_APPRISAL\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const add_apprisal = async (data: any) => {\r\n  try {\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \"token 5ccbc7af363c163:b6060f97664d556\",\r\n      },\r\n      data: JSON.stringify(data),\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.log(\"error in catch block=>\", JSON.stringify(error));\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const edit_appraisal = async (data: any) => {\r\n  try {\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal/${data.id}`,\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\r\n      },\r\n      data: JSON.stringify(data),\r\n    });\r\n    // console.log(\"api response ==>\", response)\r\n    return await response;\r\n  } catch (error) {\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\index.tsx",["166","167"],"import axios from \"axios\";\r\nimport apiBase from \"../../../src/apiBase.json\";\r\nimport accessToken from \"../../apiBase.json\";\r\n\r\nexport const processAddList = (item: any) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const processRemoveList = (item: any) => {\r\n  return {\r\n    type: \"REMOVE_LIST\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const processUpdateList = (item: any) => {\r\n  return {\r\n    type: \"UPDATE_LIST\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const fetchUserList = (item: any) => {\r\n  return {\r\n    type: \"USER_LIST\",\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const fetchAppraisalData = (\r\n  limit_start = 0,\r\n  limit_page_length = 10,\r\n  order_by = \"id asc\",\r\n  filters: any\r\n) => async (dispatch: any): Promise<any> => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCH_APPRAISAL_LIST_START\",\r\n    });\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      params: {\r\n        limit_start,\r\n        limit_page_length,\r\n        order_by,\r\n        filters,\r\n        fields: JSON.stringify([\r\n          \"name\",\r\n          \"id\",\r\n          \"appraisal_description\",\r\n          \"review_from\",\r\n          \"appraisal_to\",\r\n          \"review_frequency\",\r\n          \"type\",\r\n          \"format_type\",\r\n          \"format_type\",\r\n          \"appraisal_owner\",\r\n          \"kra_settings_tab_goals\",\r\n          \"kra_settings_tab_competencies\",\r\n          \"kra_settings_tab_development_plan\",\r\n          \"kra_settings_tab_summary\",\r\n          \"assessment_tab_goals\",\r\n          \"assessment_tab_competencies\",\r\n          \"assessment_tab_development_plan\",\r\n          \"assessment_tab_summary\",\r\n        ]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\r\n        // \"Access-Control-Allow-Origin\": \"localhost\",\r\n        // \"Access-Control-Allow-Headers\":\r\n        //   \"Origin,  Content-Type, Accept-Encoding, User-Agent\",\r\n        // \"Accept-Encoding\": \"application/json\",\r\n        // \"User-Agent\":\r\n        //   \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\r\n      },\r\n    });\r\n    const responseBody = await response.data;\r\n    // console.log(\"api response =>\", responseBody);\r\n    dispatch({\r\n      type: \"FETCH_APPRAISAL_LIST_SUCCESS\",\r\n      payload: responseBody,\r\n    });\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const fetchEmployeeData = (\r\n  doctype = \"EmployeeAppraisal\",\r\n  limit_start = 0,\r\n  limit = 10,\r\n  role = \"Employee\"\r\n) => async (dispatch: any): Promise<any> => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCH_EMPOLYEE_LIST_START\",\r\n    });\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/method/megasoft_hrms.pm.employee_appraisals`,\r\n      params: {\r\n        doctype,\r\n        limit_start,\r\n        limit,\r\n        role,\r\n        fields: JSON.stringify([\"employee_id\", \"appraisal_id\", \"status\"]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Accept: \"multipart/form-data\",\r\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\r\n        // \"Access-Control-Allow-Origin\": \"localhost\",\r\n        // \"Access-Control-Allow-Headers\":\r\n        //   \"Origin,  Content-Type, Accept-Encoding, User-Agent\",\r\n        // \"Accept-Encoding\": \"application/json\",\r\n        // \"User-Agent\":\r\n        //   \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\r\n      },\r\n    });\r\n    // console.log(\"fetch employeee api response =>\", response.data);\r\n    const responseBody = await response.data.message;\r\n    dispatch({\r\n      type: \"FETCH_EMPLOYEE_LIST_SUCCESS\",\r\n      payload: responseBody,\r\n    });\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const fetchAppraisalDataById = (\r\n  limit_start = 0,\r\n  limit_page_length = 10,\r\n  order_by = \"id asc\",\r\n  filters: any\r\n) => async (dispatch: any): Promise<any> => {\r\n  try {\r\n    const response = await axios({\r\n      url: `http://52.146.0.154/api/resource/Appraisal`,\r\n      params: {\r\n        limit_start,\r\n        limit_page_length,\r\n        order_by,\r\n        filters,\r\n        fields: JSON.stringify([\r\n          \"name\",\r\n          \"id\",\r\n          \"appraisal_description\",\r\n          \"review_from\",\r\n          \"appraisal_to\",\r\n          \"review_frequency\",\r\n          \"type\",\r\n          \"format_type\",\r\n          \"format_type\",\r\n          \"appraisal_owner\",\r\n          \"kra_settings_tab_goals\",\r\n          \"kra_settings_tab_competencies\",\r\n          \"kra_settings_tab_development_plan\",\r\n          \"kra_settings_tab_summary\",\r\n          \"assessment_tab_goals\",\r\n          \"assessment_tab_competencies\",\r\n          \"assessment_tab_development_plan\",\r\n          \"assessment_tab_summary\",\r\n        ]),\r\n      },\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \" token 5ccbc7af363c163:b6060f97664d556\",\r\n        // \"Access-Control-Allow-Origin\": \"localhost\",\r\n        // \"Access-Control-Allow-Headers\":\r\n        //   \"Origin,  Content-Type, Accept-Encoding, User-Agent\",\r\n        // \"Accept-Encoding\": \"application/json\",\r\n        // \"User-Agent\":\r\n        //   \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\",\r\n      },\r\n    });\r\n    const responseBody = await response.data;\r\n    dispatch({\r\n      type: \"FETCH_APPRAISAL_LIST_SUCCESS\",\r\n      payload: responseBody.data,\r\n    });\r\n    return responseBody;\r\n  } catch (error) {\r\n    // console.log(\"error in getting data\", error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n};\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\userData.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\tasks.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\WelcomeHeader\\index.tsx",["168","169"],"import * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport logo_ms from \"../../assets/img/logo_ms.png\";\r\nimport {\r\n  Dropdown,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  Link,\r\n} from \"office-ui-fabric-react\";\r\n\r\nimport \"./styles.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { roleType } from \"../../redux/actions/roleType\";\r\n\r\nfunction WelcomeHeader(props: { children: any }) {\r\n  const { children } = props;\r\n  const [role, setRole] = useState<any>({\r\n    key: \"employee\",\r\n    text: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect((): void => {\r\n    dispatch(roleType(role.text));\r\n  }, [role.text]);\r\n\r\n  const rolesOption: IDropdownOption[] = [\r\n    { key: \"employee\", text: \"Employee\" },\r\n    { key: \"manager\", text: \"Manager\" },\r\n    { key: \"hrContact\", text: \"HR Contact\" },\r\n  ];\r\n\r\n  // console.log(\"role.text===>\", role.text);\r\n  const dropdownStyles: Partial<IDropdownStyles> = {\r\n    dropdown: {\r\n      width: 170,\r\n      border: \"0px\",\r\n    },\r\n  };\r\n\r\n  const handleRoles = (\r\n    ev?: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    setRole(\r\n      item || {\r\n        key: \"\",\r\n        text: \"\",\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"welcome-header\">\r\n      <div style={{ display: \"flex\", marginTop: \"10px\" }}>\r\n        {children}\r\n        <div>\r\n          <Dropdown\r\n            options={rolesOption}\r\n            onChange={handleRoles}\r\n            selectedKey={role ? role.key : \"employee\"}\r\n            // defaultSelectedKey={roles ? roles.key : \"employee\"}\r\n            className=\"rolesDropDown\"\r\n            styles={dropdownStyles}\r\n            style={{ marginLeft: \"2rem\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", padding: \"10px\" }}>\r\n        <Link>Log Out</Link>\r\n        <img src={logo_ms} className=\"ms-logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeHeader;\r\n","C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\employeeList.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\apprisal.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\components\\Panel\\index.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\navigationData.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\navigation.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\reducers\\roleType.tsx",[],"C:\\Users\\acer\\Documents\\mega-soft\\src\\redux\\actions\\roleType.tsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":186,"column":19,"nodeType":"176","messageId":"177","endLine":186,"endColumn":29},{"ruleId":"178","severity":1,"message":"179","line":197,"column":6,"nodeType":"180","endLine":197,"endColumn":25,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":205,"column":39,"nodeType":"184","messageId":"185","endLine":205,"endColumn":41},{"ruleId":"182","severity":1,"message":"183","line":207,"column":34,"nodeType":"184","messageId":"185","endLine":207,"endColumn":36},{"ruleId":"182","severity":1,"message":"186","line":215,"column":13,"nodeType":"187","messageId":"188","endLine":215,"endColumn":20},{"ruleId":"182","severity":1,"message":"186","line":226,"column":11,"nodeType":"187","messageId":"188","endLine":226,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":234,"column":9,"nodeType":"191","endLine":234,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":237,"column":9,"nodeType":"191","endLine":237,"endColumn":32},{"ruleId":"174","severity":1,"message":"192","line":23,"column":3,"nodeType":"176","messageId":"177","endLine":23,"endColumn":21},{"ruleId":"174","severity":1,"message":"193","line":70,"column":7,"nodeType":"176","messageId":"177","endLine":70,"endColumn":47},{"ruleId":"174","severity":1,"message":"193","line":117,"column":9,"nodeType":"176","messageId":"177","endLine":117,"endColumn":49},{"ruleId":"178","severity":1,"message":"194","line":144,"column":6,"nodeType":"180","endLine":144,"endColumn":8,"suggestions":"195"},{"ruleId":"174","severity":1,"message":"196","line":27,"column":8,"nodeType":"176","messageId":"177","endLine":27,"endColumn":13},{"ruleId":"174","severity":1,"message":"197","line":43,"column":10,"nodeType":"176","messageId":"177","endLine":43,"endColumn":23},{"ruleId":"174","severity":1,"message":"198","line":43,"column":25,"nodeType":"176","messageId":"177","endLine":43,"endColumn":41},{"ruleId":"174","severity":1,"message":"199","line":45,"column":27,"nodeType":"176","messageId":"177","endLine":45,"endColumn":45},{"ruleId":"174","severity":1,"message":"200","line":53,"column":37,"nodeType":"176","messageId":"177","endLine":53,"endColumn":42},{"ruleId":"178","severity":1,"message":"201","line":89,"column":6,"nodeType":"180","endLine":96,"endColumn":4,"suggestions":"202"},{"ruleId":"174","severity":1,"message":"203","line":279,"column":10,"nodeType":"176","messageId":"177","endLine":279,"endColumn":27},{"ruleId":"174","severity":1,"message":"204","line":280,"column":10,"nodeType":"176","messageId":"177","endLine":280,"endColumn":14},{"ruleId":"174","severity":1,"message":"205","line":326,"column":9,"nodeType":"176","messageId":"177","endLine":326,"endColumn":20},{"ruleId":"174","severity":1,"message":"206","line":338,"column":9,"nodeType":"176","messageId":"177","endLine":338,"endColumn":29},{"ruleId":"174","severity":1,"message":"207","line":21,"column":10,"nodeType":"176","messageId":"177","endLine":21,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":26,"column":19,"nodeType":"176","messageId":"177","endLine":26,"endColumn":29},{"ruleId":"174","severity":1,"message":"208","line":27,"column":23,"nodeType":"176","messageId":"177","endLine":27,"endColumn":36},{"ruleId":"174","severity":1,"message":"209","line":28,"column":17,"nodeType":"176","messageId":"177","endLine":28,"endColumn":25},{"ruleId":"174","severity":1,"message":"204","line":29,"column":10,"nodeType":"176","messageId":"177","endLine":29,"endColumn":14},{"ruleId":"174","severity":1,"message":"210","line":29,"column":16,"nodeType":"176","messageId":"177","endLine":29,"endColumn":23},{"ruleId":"174","severity":1,"message":"199","line":31,"column":27,"nodeType":"176","messageId":"177","endLine":31,"endColumn":45},{"ruleId":"174","severity":1,"message":"211","line":32,"column":10,"nodeType":"176","messageId":"177","endLine":32,"endColumn":20},{"ruleId":"174","severity":1,"message":"212","line":36,"column":25,"nodeType":"176","messageId":"177","endLine":36,"endColumn":34},{"ruleId":"174","severity":1,"message":"200","line":36,"column":49,"nodeType":"176","messageId":"177","endLine":36,"endColumn":54},{"ruleId":"174","severity":1,"message":"213","line":39,"column":10,"nodeType":"176","messageId":"177","endLine":39,"endColumn":21},{"ruleId":"174","severity":1,"message":"214","line":39,"column":23,"nodeType":"176","messageId":"177","endLine":39,"endColumn":38},{"ruleId":"178","severity":1,"message":"179","line":44,"column":6,"nodeType":"180","endLine":44,"endColumn":45,"suggestions":"215"},{"ruleId":"174","severity":1,"message":"216","line":46,"column":10,"nodeType":"176","messageId":"177","endLine":46,"endColumn":15},{"ruleId":"174","severity":1,"message":"217","line":51,"column":10,"nodeType":"176","messageId":"177","endLine":51,"endColumn":16},{"ruleId":"174","severity":1,"message":"218","line":56,"column":10,"nodeType":"176","messageId":"177","endLine":56,"endColumn":16},{"ruleId":"174","severity":1,"message":"219","line":64,"column":9,"nodeType":"176","messageId":"177","endLine":64,"endColumn":39},{"ruleId":"174","severity":1,"message":"220","line":109,"column":9,"nodeType":"176","messageId":"177","endLine":109,"endColumn":40},{"ruleId":"174","severity":1,"message":"221","line":121,"column":9,"nodeType":"176","messageId":"177","endLine":121,"endColumn":19},{"ruleId":"174","severity":1,"message":"205","line":236,"column":9,"nodeType":"176","messageId":"177","endLine":236,"endColumn":20},{"ruleId":"174","severity":1,"message":"222","line":248,"column":9,"nodeType":"176","messageId":"177","endLine":248,"endColumn":23},{"ruleId":"174","severity":1,"message":"192","line":40,"column":3,"nodeType":"176","messageId":"177","endLine":40,"endColumn":21},{"ruleId":"174","severity":1,"message":"193","line":59,"column":7,"nodeType":"176","messageId":"177","endLine":59,"endColumn":47},{"ruleId":"178","severity":1,"message":"194","line":96,"column":6,"nodeType":"180","endLine":96,"endColumn":8,"suggestions":"223"},{"ruleId":"174","severity":1,"message":"224","line":175,"column":26,"nodeType":"176","messageId":"177","endLine":175,"endColumn":43},{"ruleId":"174","severity":1,"message":"225","line":186,"column":10,"nodeType":"176","messageId":"177","endLine":186,"endColumn":21},{"ruleId":"174","severity":1,"message":"226","line":213,"column":9,"nodeType":"176","messageId":"177","endLine":213,"endColumn":28},{"ruleId":"174","severity":1,"message":"193","line":55,"column":7,"nodeType":"176","messageId":"177","endLine":55,"endColumn":47},{"ruleId":"174","severity":1,"message":"227","line":71,"column":9,"nodeType":"176","messageId":"177","endLine":71,"endColumn":50},{"ruleId":"174","severity":1,"message":"228","line":369,"column":10,"nodeType":"176","messageId":"177","endLine":369,"endColumn":26},{"ruleId":"174","severity":1,"message":"229","line":370,"column":10,"nodeType":"176","messageId":"177","endLine":370,"endColumn":29},{"ruleId":"174","severity":1,"message":"230","line":370,"column":31,"nodeType":"176","messageId":"177","endLine":370,"endColumn":53},{"ruleId":"174","severity":1,"message":"231","line":13,"column":7,"nodeType":"176","messageId":"177","endLine":13,"endColumn":38},{"ruleId":"174","severity":1,"message":"232","line":33,"column":7,"nodeType":"176","messageId":"177","endLine":33,"endColumn":42},{"ruleId":"174","severity":1,"message":"233","line":59,"column":7,"nodeType":"176","messageId":"177","endLine":59,"endColumn":49},{"ruleId":"174","severity":1,"message":"234","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"235","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":15},{"ruleId":"174","severity":1,"message":"234","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":25,"column":6,"nodeType":"180","endLine":25,"endColumn":17,"suggestions":"236"},{"ruleId":"189","severity":1,"message":"190","line":71,"column":9,"nodeType":"191","endLine":71,"endColumn":50},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-unused-vars","'setDoctype' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["239"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchAppraisalData' is defined but never used.","'dropdownStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersById', 'limitPageLength', 'limitStart', 'orderBy', and 'orderByField'. Either include them or remove the dependency array.",["240"],"'Panel' is defined but never used.","'hasMoreRecord' is assigned a value but never used.","'setHasMoreRecord' is assigned a value but never used.","'setLimitPageLength' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderByField'. Either include them or remove the dependency array.",["241"],"'appraisalToSearch' is assigned a value but never used.","'role' is assigned a value but never used.","'handleRoles' is assigned a value but never used.","'itemSearchApprisalTo' is assigned a value but never used.","'roleType' is defined but never used.","'setLimitStart' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setRole' is assigned a value but never used.","'limitStart' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'employeData' is assigned a value but never used.","'setEmployeeData' is assigned a value but never used.",["242"],"'roles' is assigned a value but never used.","'period' is assigned a value but never used.","'status' is assigned a value but never used.","'rolesOption' is assigned a value but never used.","'periodOption' is assigned a value but never used.","'operations' is assigned a value but never used.","'onChangePeriod' is assigned a value but never used.",["243"],"'setFirstDayOfWeek' is assigned a value but never used.","'formateType' is assigned a value but never used.","'onChangeFormateType' is assigned a value but never used.","'textfelidStyle' is assigned a value but never used.","'errMsgReviewDate' is assigned a value but never used.","'errMsgAppraisalDate' is assigned a value but never used.","'setErrMsgAppraisalDate' is assigned a value but never used.","'menuProps' is assigned a value but never used.","'itemsWithHeading' is assigned a value but never used.","'breadCrumStyle' is assigned a value but never used.","'accessToken' is defined but never used.","'apiBase' is defined but never used.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"247","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [dispatch, doctype, roleType]",{"range":"256","text":"257"},"Update the dependencies array to be: [filtersById, limitPageLength, limitStart, orderBy, orderByField]",{"range":"258","text":"259"},"Update the dependencies array to be: [limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, dispatch, orderByField]",{"range":"260","text":"261"},"Update the dependencies array to be: [doctype, limit_start, limit, roleType, dispatch]",{"range":"262","text":"263"},{"range":"264","text":"259"},"Update the dependencies array to be: [dispatch, role.text]",{"range":"265","text":"266"},[5090,5109],"[dispatch, doctype, roleType]",[3530,3532],"[filtersById, limitPageLength, limitStart, orderBy, orderByField]",[3022,3152],"[limitStart, limitPageLength, orderBy, filtersById, filtersByDescription, filtersByReviewFreq, dispatch, orderByField]",[1652,1691],"[doctype, limit_start, limit, roleType, dispatch]",[2573,2575],[643,654],"[dispatch, role.text]"]